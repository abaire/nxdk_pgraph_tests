name: Build macOS

on:
  pull_request:
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/**'
      - 'README.md'
  workflow_dispatch:

jobs:
  BuildMacOS:
    name: Build macOS
    runs-on: macOS-latest

    steps:
      - name: Clone tree
        uses: actions/checkout@v3
        with:
          submodules: recursive
          path: nxdk_pgraph_tests

      - name: Install dependencies
        run: |
          export HOMEBREW_NO_AUTO_UPDATE=1
          export HOMEBREW_NO_INSTALL_CLEANUP=1
          brew install \
            cmake \
            coreutils \
            llvm@19 \
            lld
          export PIP_BREAK_SYSTEM_PACKAGES=1
          pip3 install -r nxdk_pgraph_tests/requirements.txt

      - name: Prewarm nxdk
        working-directory: nxdk_pgraph_tests
        run: |
          export PATH="$(brew --prefix llvm@19)/bin:$PATH"
          bash ${GITHUB_WORKSPACE}/nxdk_pgraph_tests/prewarm-nxdk.sh

      - name: Compile in dump mode
        run: |
          cd nxdk_pgraph_tests
          # The default clang install will result in linker failures on macOS.
          export PATH="$(brew --prefix llvm@19)/bin:$PATH"
          export NXDK_DIR="${GITHUB_WORKSPACE}/nxdk_pgraph_tests/third_party/nxdk"
          cmake -B build \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_TOOLCHAIN_FILE="${NXDK_DIR}/share/toolchain-nxdk.cmake" \
                -DDUMP_CONFIG_FILE=ON
          cmake --build build -- -j

      - name: Compile in run mode
        run: |
          cd nxdk_pgraph_tests
          # The default clang install will result in linker failures on macOS.
          export PATH="$(brew --prefix llvm@19)/bin:$PATH"
          export NXDK_DIR="${GITHUB_WORKSPACE}/nxdk_pgraph_tests/third_party/nxdk"
          cmake -B build \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_TOOLCHAIN_FILE="${NXDK_DIR}/share/toolchain-nxdk.cmake" \
                -DDUMP_CONFIG_FILE=OFF
          cmake --build build -- -j

  TestMacOS:
    name: Test macOS
    runs-on: macOS-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Clone tree
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          export HOMEBREW_NO_AUTO_UPDATE=1
          export HOMEBREW_NO_INSTALL_CLEANUP=1
          brew install \
            cmake \
            coreutils \
            llvm@19 \
            lld

      - name: Compile and test in dump mode
        run: |
          # The default clang install will result in linker failures on macOS.
          export PATH="$(brew --prefix llvm@19)/bin:$PATH"
          cmake -B build-dump-mode \
                -DCMAKE_BUILD_TYPE=Release \
                -DDUMP_CONFIG_FILE=ON
          cmake --build build-dump-mode -- -j
          cmake --build build-dump-mode --target test

      - name: Compile and test in run mode
        run: |
          # The default clang install will result in linker failures on macOS.
          export PATH="$(brew --prefix llvm@19)/bin:$PATH"
          cmake -B build \
                -DCMAKE_BUILD_TYPE=Release \
                -DDUMP_CONFIG_FILE=OFF
          cmake --build build -- -j
          cmake --build build --target test -- -j          
