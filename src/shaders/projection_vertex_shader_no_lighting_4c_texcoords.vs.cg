struct vIn {
  float3 norm : NORMAL;
  float4 tex0 : TEXCOORD0;
  float4 tex1 : TEXCOORD1;
  float4 tex2 : TEXCOORD2;
  float4 tex3 : TEXCOORD3;
  float3 pos : POSITION;
  float4 diffuse: DIFFUSE;
};

struct vOut {
  float4 pos : POSITION;
  float4 col : COLOR;
  float4 fog : FOG;
  float4 tex0 : TEXCOORD0;
  float4 tex1 : TEXCOORD1;
  float4 tex2 : TEXCOORD2;
  float4 tex3 : TEXCOORD3;
};

vOut main(vIn I, uniform float4x4 model_matrix, uniform float4x4 view_matrix, uniform float4x4 projection_matrix,
          uniform float4 camera_pos, uniform float4 light_dir) {
  vOut result;

  // Transform position and normal
  float4 pos = mul(float4(I.pos.xyz, 1.0), model_matrix);
  float3 norm = normalize(mul(float4(I.norm.xyz, 0.0f), model_matrix).xyz);

  // Transform pos to screen space
  pos = mul(pos, view_matrix);
  pos = mul(pos, projection_matrix);
  pos.xyz = pos.xyz / pos.w;

  result.pos = pos;
  result.col = I.diffuse;
  result.fog = result.pos.w;
  result.tex0 = I.tex0;
  result.tex1 = I.tex1;
  result.tex2 = I.tex2;
  result.tex3 = I.tex3;

  return result;
}
