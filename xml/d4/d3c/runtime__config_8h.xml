<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d4/d3c/runtime__config_8h" kind="file" language="C++">
    <compoundname>runtime_config.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includes local="yes">configure.h</includes>
    <includes refid="d6/d7a/test__suite_8h" local="yes">tests/test_suite.h</includes>
    <includedby refid="df/d0a/main_8cpp" local="yes">src/main.cpp</includedby>
    <includedby refid="db/d3c/runtime__config_8cpp" local="yes">src/runtime_config.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>ftp_logger.h</label>
        <link refid="d0/dad/ftp__logger_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>pbkit_ext.h</label>
        <link refid="d7/d31/pbkit__ext_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>pgraph_diff_token.h</label>
        <link refid="d3/d11/pgraph__diff__token_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/runtime_config.h</label>
        <link refid="d4/d3c/runtime__config_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>tests/test_suite.h</label>
        <link refid="d6/d7a/test__suite_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>atomic</label>
      </node>
      <node id="12">
        <label>chrono</label>
      </node>
      <node id="4">
        <label>configure.h</label>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="17">
        <label>list</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="14">
        <label>set</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="11">
        <label>thread</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="d0/d98/classRuntimeConfig" prot="public">RuntimeConfig</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>NXDK_PGRAPH_TESTS_RUNTIME_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NXDK_PGRAPH_TESTS_RUNTIME_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;configure.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tests/test_suite.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="d0/d98/classRuntimeConfig" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d98/classRuntimeConfig" kindref="compound">RuntimeConfig</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>SkipConfiguration<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>DEFAULT,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>SKIPPED,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>UNSKIPPED,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>NetworkConfigMode<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>OFF,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTOMATIC,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>DHCP,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>STATIC,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="d0/d98/classRuntimeConfig" kindref="compound">RuntimeConfig</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="d0/d98/classRuntimeConfig" kindref="compound">RuntimeConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d98/classRuntimeConfig" kindref="compound">RuntimeConfig</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d98/classRuntimeConfig_1a14a49d34275e82a2b06bd365d1216c51" kindref="member">LoadConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>config_file_path,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>errors);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d98/classRuntimeConfig_1a01982f42fa9b49444100ab893e9d4e2b" kindref="member">LoadConfigBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>config_content,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>errors);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d98/classRuntimeConfig_1ab234dceaf1d88e90e733321869a025d5" kindref="member">ApplyConfig</ref>(std::vector&lt;std::shared_ptr&lt;TestSuite&gt;&gt;&amp;<sp/>test_suites,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>errors);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DUMP_CONFIG_FILE</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DumpConfig(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>config_file_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;TestSuite&gt;&gt;&amp;<sp/>test_suites,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;&amp;<sp/>errors);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DumpConfigToStream(std::ostream&amp;<sp/>config_file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;TestSuite&gt;&gt;&amp;<sp/>test_suites,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;&amp;<sp/>errors);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>DUMP_CONFIG_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_progress_log()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>enable_progress_log_;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>disable_autorun()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>disable_autorun_;<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_autorun_immediately()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>enable_autorun_immediately_;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_shutdown_on_completion()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>enable_shutdown_on_completion_;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_pgraph_region_diff()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>enable_pgraph_region_diff_;<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skip_tests_by_default()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>skip_tests_by_default_;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>uint32_t<sp/>delay_milliseconds_between_tests()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delay_milliseconds_between_tests_;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>uint32_t<sp/>ftp_server_ip()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ftp_server_ip_;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>uint16_t<sp/>ftp_server_port()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ftp_server_port_;<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>ftp_user()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ftp_user_;<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>ftp_password()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ftp_password_;<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>uint32_t<sp/>ftp_timeout_milliseconds()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ftp_timeout_milliseconds_;<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>NetworkConfigMode<sp/>network_config_mode()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>network_config_mode_;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>uint32_t<sp/>static_ip()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_ip_;<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>uint32_t<sp/>static_gateway()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_gateway_;<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>uint32_t<sp/>static_netmask()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_netmask_;<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>uint32_t<sp/>static_dns_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_dns_1_;<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>uint32_t<sp/>static_dns_2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_dns_2_;<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>output_directory_path()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output_directory_path_;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>SanitizePath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DUMP_CONFIG_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>EscapePath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteSettings(std::ostream&amp;<sp/>output)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteTestSuite(std::ostream&amp;<sp/>output,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;TestSuite&gt;&amp;<sp/>suite)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteTestCase(std::ostream&amp;<sp/>output,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>suite_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>test_name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>DUMP_CONFIG_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ProcessNetworkSettings(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>parent,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>errors);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_progress_log_<sp/>=<sp/>DEFAULT_ENABLE_PROGRESS_LOG;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>uint32_t<sp/>delay_milliseconds_between_tests_{0};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>disable_autorun_<sp/>=<sp/>DEFAULT_DISABLE_AUTORUN;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_autorun_immediately_<sp/>=<sp/>DEFAULT_AUTORUN_IMMEDIATELY;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_shutdown_on_completion_<sp/>=<sp/>DEFAULT_ENABLE_SHUTDOWN;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_pgraph_region_diff_<sp/>=<sp/>DEFAULT_ENABLE_PGRAPH_REGION_DIFF;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skip_tests_by_default_<sp/>=<sp/>DEFAULT_SKIP_TESTS_BY_DEFAULT;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>uint32_t<sp/>ftp_server_ip_{0};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>uint16_t<sp/>ftp_server_port_{0};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>std::string<sp/>ftp_user_;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>std::string<sp/>ftp_password_;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>uint32_t<sp/>ftp_timeout_milliseconds_{0};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>NetworkConfigMode<sp/>network_config_mode_<sp/>=<sp/>NetworkConfigMode::OFF;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>uint32_t<sp/>static_ip_{0};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>uint32_t<sp/>static_gateway_{0};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>uint32_t<sp/>static_netmask_{0};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>uint32_t<sp/>static_dns_1_{0};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>uint32_t<sp/>static_dns_2_{0};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>std::string<sp/>output_directory_path_<sp/>=<sp/>SanitizePath(DEFAULT_OUTPUT_DIRECTORY_PATH);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>SkipConfiguration&gt;<sp/>configured_test_suites_;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::map&lt;std::string,<sp/>SkipConfiguration&gt;&gt;<sp/>configured_test_cases_;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>NXDK_PGRAPH_TESTS_RUNTIME_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/runtime_config.h"/>
  </compounddef>
</doxygen>
