<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d4/df4/image__blit__tests_8cpp" kind="file" language="C++">
    <compoundname>image_blit_tests.cpp</compoundname>
    <includes refid="d5/d38/image__blit__tests_8h" local="yes">image_blit_tests.h</includes>
    <includes local="no">SDL_image.h</includes>
    <includes local="no">pbkit/pbkit.h</includes>
    <includes refid="d3/dc0/debug__output_8h" local="yes">debug_output.h</includes>
    <includes local="yes">nxdk_ext.h</includes>
    <includes refid="d7/d31/pbkit__ext_8h" local="yes">pbkit_ext.h</includes>
    <includes refid="df/d43/test__host_8h" local="yes">test_host.h</includes>
    <includes local="yes">vertex_buffer.h</includes>
    <incdepgraph>
      <node id="19">
        <label>debug_output.h</label>
        <link refid="d3/dc0/debug__output_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ftp_logger.h</label>
        <link refid="d0/dad/ftp__logger_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>pbkit_ext.h</label>
        <link refid="d7/d31/pbkit__ext_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>pgraph_diff_token.h</label>
        <link refid="d3/d11/pgraph__diff__token_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>test_host.h</label>
        <link refid="df/d43/test__host_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/tests/image_blit_tests.cpp</label>
        <link refid="d4/df4/image__blit__tests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>image_blit_tests.h</label>
        <link refid="d5/d38/image__blit__tests_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>test_suite.h</label>
        <link refid="d6/d7a/test__suite_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>SDL_image.h</label>
      </node>
      <node id="6">
        <label>atomic</label>
      </node>
      <node id="12">
        <label>chrono</label>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="8">
        <label>functional</label>
      </node>
      <node id="17">
        <label>list</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="24">
        <label>memory</label>
      </node>
      <node id="25">
        <label>nv2astate.h</label>
      </node>
      <node id="22">
        <label>nxdk_ext.h</label>
      </node>
      <node id="3">
        <label>pbkit/pbkit.h</label>
      </node>
      <node id="21">
        <label>printf/printf.h</label>
      </node>
      <node id="26">
        <label>pushbuffer.h</label>
      </node>
      <node id="14">
        <label>set</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="27">
        <label>texture_format.h</label>
      </node>
      <node id="28">
        <label>texture_stage.h</label>
      </node>
      <node id="10">
        <label>thread</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="29">
        <label>vertex_buffer.h</label>
      </node>
      <node id="20">
        <label>windows.h</label>
      </node>
      <node id="30">
        <label>xbox_math_types.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="da/de5/structClipRegion" prot="public">ClipRegion</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="d4/df4/image__blit__tests_8cpp_1a71f766c629bd3683e45fee43153c0f44" prot="public" static="no">
        <name>SUBCH_CLASS_9F</name>
        <initializer>SUBCH_3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="14" column="9" bodyfile="src/tests/image_blit_tests.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d4/df4/image__blit__tests_8cpp_1a16b272dce0a9b1b72b59bd955c659df7" prot="public" static="no">
        <name>SUBCH_CLASS_62</name>
        <initializer>SUBCH_4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="16" column="9" bodyfile="src/tests/image_blit_tests.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d4/df4/image__blit__tests_8cpp_1a9cf9a67568a08de98d0d2580289d7f38" prot="public" static="no">
        <name>SOURCE_X</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="30" column="9" bodyfile="src/tests/image_blit_tests.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d4/df4/image__blit__tests_8cpp_1a1ed278b7b7a36eb0dcf1195f6aeb7c9e" prot="public" static="no">
        <name>SOURCE_Y</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="31" column="9" bodyfile="src/tests/image_blit_tests.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d4/df4/image__blit__tests_8cpp_1a8f50d5321e2a988116a5133c75f88961" prot="public" static="no">
        <name>SOURCE_WIDTH</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="32" column="9" bodyfile="src/tests/image_blit_tests.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d4/df4/image__blit__tests_8cpp_1a6be941aa31122a45729d6f1089a73d36" prot="public" static="no">
        <name>SOURCE_HEIGHT</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="33" column="9" bodyfile="src/tests/image_blit_tests.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d4/df4/image__blit__tests_8cpp_1a0c3f05738c8116240ce7871a2416f9e5" prot="public" static="no">
        <name>DESTINATION_X</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="34" column="9" bodyfile="src/tests/image_blit_tests.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d4/df4/image__blit__tests_8cpp_1aaf4634b5cb6f697372e43112b9fdd813" prot="public" static="no">
        <name>DESTINATION_Y</name>
        <initializer>176</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="35" column="9" bodyfile="src/tests/image_blit_tests.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="d4/df4/image__blit__tests_8cpp_1a68b1179ad534f91fc0d0e6414cfda2f9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t SUBCH_CLASS_19</definition>
        <argsstring></argsstring>
        <name>SUBCH_CLASS_19</name>
        <initializer>= kNextSubchannel</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="19" column="27" bodyfile="src/tests/image_blit_tests.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/df4/image__blit__tests_8cpp_1aba4d8b3f2965313b48d88df105dc505c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t SUBCH_CLASS_12</definition>
        <argsstring></argsstring>
        <name>SUBCH_CLASS_12</name>
        <initializer>= SUBCH_CLASS_19 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="22" column="27" bodyfile="src/tests/image_blit_tests.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/df4/image__blit__tests_8cpp_1a4e1038c7d0a5b6606e1be65cfd843fd8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t SUBCH_CLASS_72</definition>
        <argsstring></argsstring>
        <name>SUBCH_CLASS_72</name>
        <initializer>= SUBCH_CLASS_12 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="25" column="27" bodyfile="src/tests/image_blit_tests.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/df4/image__blit__tests_8cpp_1aea8ed55c4a67ff598b8963fd40785ad1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr char</type>
        <definition>constexpr char kDirtyOverlappedDestSurfaceTest[]</definition>
        <argsstring>[]</argsstring>
        <name>kDirtyOverlappedDestSurfaceTest</name>
        <initializer>= &quot;DirtyOverlappedDestSurf&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="27" column="23" bodyfile="src/tests/image_blit_tests.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/df4/image__blit__tests_8cpp_1a285b19f9433240a08e0c3f0ba4c5da3d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr char</type>
        <definition>constexpr char kBlitRenderBlitTest[]</definition>
        <argsstring>[]</argsstring>
        <name>kBlitRenderBlitTest</name>
        <initializer>= &quot;BlitRenderBlit&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="28" column="23" bodyfile="src/tests/image_blit_tests.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/df4/image__blit__tests_8cpp_1ae84c04cb394fbe66f1df7b007ce743fc" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="da/d17/structImageBlitTests_1_1BlitTest" kindref="compound">ImageBlitTests::BlitTest</ref></type>
        <definition>constexpr ImageBlitTests::BlitTest kTests[]</definition>
        <argsstring>[]</argsstring>
        <name>kTests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="40" column="43" bodyfile="src/tests/image_blit_tests.cpp" bodystart="40" bodyend="91"/>
      </memberdef>
      <memberdef kind="variable" id="d4/df4/image__blit__tests_8cpp_1aa27f53db06f99226ec0b9cce1523cfed" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="da/de5/structClipRegion" kindref="compound">ClipRegion</ref></type>
        <definition>constexpr ClipRegion kClipRegionTests[]</definition>
        <argsstring>[]</argsstring>
        <name>kClipRegionTests</name>
        <initializer>= {
    {0, 0, 640, 480}, {320, 240, 64, 40}, {320, 240, 640, 480}, {300, 200, 16, 24},
    {320, 240, 0, 0}, {320, 240, 1, 1},   {320, 240, 0, 10},
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="100" column="29" bodyfile="src/tests/image_blit_tests.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="d4/df4/image__blit__tests_8cpp_1ae38611016cf6a31b0b36f242d59e1962" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string OperationName</definition>
        <argsstring>(uint32_t operation)</argsstring>
        <name>OperationName</name>
        <param>
          <type>uint32_t</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="478" column="20" bodyfile="src/tests/image_blit_tests.cpp" bodystart="478" bodyend="495" declfile="src/tests/image_blit_tests.cpp" declline="37" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d4/df4/image__blit__tests_8cpp_1a4fee9807c1a6b6ef6d30e3aa402d6ac1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string ColorFormatName</definition>
        <argsstring>(uint32_t format)</argsstring>
        <name>ColorFormatName</name>
        <param>
          <type>uint32_t</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="497" column="20" bodyfile="src/tests/image_blit_tests.cpp" bodystart="497" bodyend="512" declfile="src/tests/image_blit_tests.cpp" declline="38" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d4/df4/image__blit__tests_8cpp_1a9c0d723f770dbac1fc2301939b7ff699" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string MakeTestName</definition>
        <argsstring>(const ImageBlitTests::BlitTest &amp;test)</argsstring>
        <name>MakeTestName</name>
        <param>
          <type>const <ref refid="da/d17/structImageBlitTests_1_1BlitTest" kindref="compound">ImageBlitTests::BlitTest</ref> &amp;</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="105" column="20" bodyfile="src/tests/image_blit_tests.cpp" bodystart="105" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="d4/df4/image__blit__tests_8cpp_1a78a9e5fab86046bf04dfd844040235cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string MakeTestName</definition>
        <argsstring>(uint32_t clip_x, uint32_t clip_y, uint32_t clip_w, uint32_t clip_h)</argsstring>
        <name>MakeTestName</name>
        <param>
          <type>uint32_t</type>
          <declname>clip_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>clip_y</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>clip_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>clip_h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/image_blit_tests.cpp" line="112" column="20" bodyfile="src/tests/image_blit_tests.cpp" bodystart="112" bodyend="116"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;image_blit_tests.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL_image.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbkit/pbkit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;debug_output.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nxdk_ext.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pbkit_ext.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_host.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vertex_buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>pb_init<sp/>in<sp/>pbkit.c,<sp/>where<sp/>the<sp/>channel<sp/>contexts<sp/>are<sp/>set<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SUBCH_3<sp/>==<sp/>GR_CLASS_9F,<sp/>which<sp/>contains<sp/>the<sp/>IMAGE_BLIT<sp/>commands.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUBCH_CLASS_9F<sp/>SUBCH_3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SUBCH_4<sp/>==<sp/>GR_CLASS_62,<sp/>which<sp/>contains<sp/>the<sp/>NV10<sp/>2D<sp/>surface<sp/>commands.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUBCH_CLASS_62<sp/>SUBCH_4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Subchannel<sp/>reserved<sp/>for<sp/>interaction<sp/>with<sp/>the<sp/>class<sp/>19<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>SUBCH_CLASS_19<sp/>=<sp/>kNextSubchannel;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Subchannel<sp/>reserved<sp/>for<sp/>interaction<sp/>with<sp/>the<sp/>class<sp/>12<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>SUBCH_CLASS_12<sp/>=<sp/>SUBCH_CLASS_19<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Subchannel<sp/>reserved<sp/>for<sp/>interaction<sp/>with<sp/>the<sp/>class<sp/>72<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>SUBCH_CLASS_72<sp/>=<sp/>SUBCH_CLASS_12<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>kDirtyOverlappedDestSurfaceTest[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DirtyOverlappedDestSurf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>kBlitRenderBlitTest[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BlitRenderBlit&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SOURCE_X<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SOURCE_Y<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SOURCE_WIDTH<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SOURCE_HEIGHT<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DESTINATION_X<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DESTINATION_Y<sp/>176</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>OperationName(uint32_t<sp/>operation);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>ColorFormatName(uint32_t<sp/>format);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="da/d17/structImageBlitTests_1_1BlitTest" kindref="compound">ImageBlitTests::BlitTest</ref><sp/>kTests[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x80000000},</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x8FFFFFFF},</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0},</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x007FFFFF},</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00800000},</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x03300000},</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00D00000},</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x44400000},</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x444fffff},</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x66800000},</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x7F800000},</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x7FFFFFFF},</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_Z8R8G8B8,<sp/>0x007FFFFF},</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_Z8R8G8B8,<sp/>0x00800000},</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_Z8R8G8B8,<sp/>0x00D00000},</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_Z8R8G8B8,<sp/>0x03300000},</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_Z8R8G8B8,<sp/>0x44400000},</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_Z8R8G8B8,<sp/>0x444fffff},</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_Z8R8G8B8,<sp/>0x66800000},</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_Z8R8G8B8,<sp/>0x7F800000},</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00000000},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0xFF000000},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00FF0000},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x0000FF00},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x000000FF},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x33000000},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00330000},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00003300},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00000033},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00FFFFFF},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_BLEND_AND_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0xFFFFFFFF},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0},</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_Z8R8G8B8,<sp/>0},<sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>alpha.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY,<sp/>NV04_SURFACE_2D_FORMAT_A8R8G8B8,<sp/>0},</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00000000},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0xFF000000},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00FF0000},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x0000FF00},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x000000FF},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x33000000},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00330000},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00003300},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00000033},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0x00FFFFFF},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>0xFFFFFFFF},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{NV09F_SET_OPERATION_SRCCOPY_PREMULT,<sp/>NV04_SURFACE_2D_FORMAT_A8R8G8B8,<sp/>0x00000033},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="da/de5/structClipRegion" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="da/de5/structClipRegion" kindref="compound">ClipRegion</ref><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>uint32_t<sp/>x;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>uint32_t<sp/>y;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>uint32_t<sp/>width;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>uint32_t<sp/>height;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="da/de5/structClipRegion" kindref="compound">ClipRegion</ref><sp/>kClipRegionTests[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>640,<sp/>480},<sp/>{320,<sp/>240,<sp/>64,<sp/>40},<sp/>{320,<sp/>240,<sp/>640,<sp/>480},<sp/>{300,<sp/>200,<sp/>16,<sp/>24},</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{320,<sp/>240,<sp/>0,<sp/>0},<sp/>{320,<sp/>240,<sp/>1,<sp/>1},<sp/><sp/><sp/>{320,<sp/>240,<sp/>0,<sp/>10},</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>MakeTestName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d17/structImageBlitTests_1_1BlitTest" kindref="compound">ImageBlitTests::BlitTest</ref>&amp;<sp/>test)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/>255,<sp/></highlight><highlight class="stringliteral">&quot;ImgBlt_%s_%s_B%08X&quot;</highlight><highlight class="normal">,<sp/>OperationName(test.blit_operation).c_str(),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorFormatName(test.buffer_color_format).c_str(),<sp/>test.beta);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>MakeTestName(uint32_t<sp/>clip_x,<sp/>uint32_t<sp/>clip_y,<sp/>uint32_t<sp/>clip_w,<sp/>uint32_t<sp/>clip_h)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/>255,<sp/></highlight><highlight class="stringliteral">&quot;ImgBlt_Clip_%d_%d_%d_%d&quot;</highlight><highlight class="normal">,<sp/>clip_x,<sp/>clip_y,<sp/>clip_w,<sp/>clip_h);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="d0/d2c/classImageBlitTests_1a04452d6848ba2e2d178c37fd99280c42" kindref="member">ImageBlitTests::ImageBlitTests</ref>(<ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref>&amp;<sp/>host,<sp/>std::string<sp/>output_dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Config&amp;<sp/>config)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="d2/d3e/classTestSuite" kindref="compound">TestSuite</ref>(host,<sp/>std::move(output_dir),<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>blit&quot;</highlight><highlight class="normal">,<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>test<sp/>:<sp/>kTests)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>MakeTestName(test);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>tests_[name]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>test]()<sp/>{<sp/>Test(test);<sp/>};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d17/structImageBlitTests_1_1BlitTest" kindref="compound">ImageBlitTests::BlitTest</ref><sp/>blit_setup{NV09F_SET_OPERATION_SRCCOPY,<sp/>NV04_SURFACE_2D_FORMAT_A8R8G8B8,<sp/>0};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>test<sp/>:<sp/>kClipRegionTests)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tests_[MakeTestName(test.x,<sp/>test.y,<sp/>test.width,<sp/>test.height)]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>blit_setup,<sp/>&amp;test]<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestWithClipRectangle(blit_setup,<sp/>test.x,<sp/>test.y,<sp/>test.width,<sp/>test.height);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>tests_[kDirtyOverlappedDestSurfaceTest]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{<sp/>TestDirtyOverlappedDestinationSurface();<sp/>};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>tests_[kBlitRenderBlitTest]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{<sp/>TestBlitRenderBlit();<sp/>};</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d2c/classImageBlitTests_1a59a420a5b7d07b27a0dcaa693e89ec7f" kindref="member">ImageBlitTests::Initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="d2/d3e/classTestSuite_1a1c4756eb905d6d4d35e1630107396c38" kindref="member">TestSuite::Initialize</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>host_.SetXDKDefaultViewportAndFixedFunctionMatrices();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>SetDefaultTextureFormat();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>SDL_Surface*<sp/>temp<sp/>=<sp/>IMG_Load(</highlight><highlight class="stringliteral">&quot;D:\\image_blit\\TestImage.png&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>ASSERT(temp);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>SDL_Surface*<sp/>test_image<sp/>=<sp/>SDL_ConvertSurfaceFormat(temp,<sp/>SDL_PIXELFORMAT_BGRA32,<sp/>0);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>SDL_FreeSurface(temp);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>image_pitch_<sp/>=<sp/>test_image-&gt;pitch;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>image_height_<sp/>=<sp/>test_image-&gt;h;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>uint32_t<sp/>image_bytes<sp/>=<sp/>image_pitch_<sp/>*<sp/>image_height_;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>source_image_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MmAllocateContiguousMemoryEx(image_bytes,<sp/>0,<sp/>MAXRAM,<sp/>0x1000,<sp/>PAGE_WRITECOMBINE<sp/>|<sp/>PAGE_READWRITE));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>memcpy(source_image_,<sp/>test_image-&gt;pixels,<sp/>image_bytes);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>SDL_FreeSurface(test_image);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Provide<sp/>a<sp/>mechanism<sp/>to<sp/>find<sp/>the<sp/>next<sp/>unused<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>channel<sp/>=<sp/>kNextContextChannel;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>pb_create_dma_ctx(channel++,<sp/>DMA_CLASS_3D,<sp/>0,<sp/>MAXRAM,<sp/>&amp;image_src_dma_ctx_);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>pb_bind_channel(&amp;image_src_dma_ctx_);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>pb_create_gr_ctx(channel++,<sp/>GR_CLASS_30,<sp/>&amp;null_ctx_);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>pb_bind_channel(&amp;null_ctx_);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>pb_create_gr_ctx(channel++,<sp/>GR_CLASS_19,<sp/>&amp;clip_rect_ctx_);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>pb_bind_channel(&amp;clip_rect_ctx_);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Provide<sp/>a<sp/>mechanism<sp/>to<sp/>find<sp/>the<sp/>next<sp/>unused<sp/>subchannel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>pb_bind_subchannel(SUBCH_CLASS_19,<sp/>&amp;clip_rect_ctx_);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>pb_create_gr_ctx(channel++,<sp/>GR_CLASS_12,<sp/>&amp;beta_ctx_);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>pb_bind_channel(&amp;beta_ctx_);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>pb_bind_subchannel(SUBCH_CLASS_12,<sp/>&amp;beta_ctx_);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>pb_create_gr_ctx(channel++,<sp/>GR_CLASS_72,<sp/>&amp;beta4_ctx_);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>pb_bind_channel(&amp;beta4_ctx_);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>pb_bind_subchannel(SUBCH_CLASS_72,<sp/>&amp;beta4_ctx_);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>pb_create_dma_ctx(channel++,<sp/>DMA_CLASS_3D,<sp/>0,<sp/>MAXRAM,<sp/>&amp;render_target_dma_ctx_);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>pb_bind_channel(&amp;render_target_dma_ctx_);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d2c/classImageBlitTests_1a6fa4a2f165de8707d76195433b31e20e" kindref="member">ImageBlitTests::Deinitialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source_image_)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>MmFreeContiguousMemory(source_image_);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>source_image_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="d2/d3e/classTestSuite_1a28742e0a5438926d43d0814c9694836f" kindref="member">TestSuite::Deinitialize</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImageBlitTests::ImageBlit(uint32_t<sp/>operation,<sp/>uint32_t<sp/>beta,<sp/>uint32_t<sp/>source_channel,<sp/>uint32_t<sp/>destination_channel,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>surface_format,<sp/>uint32_t<sp/>source_pitch,<sp/>uint32_t<sp/>destination_pitch,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>source_offset,<sp/>uint32_t<sp/>source_x,<sp/>uint32_t<sp/>source_y,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>destination_offset,<sp/>uint32_t<sp/>destination_x,<sp/>uint32_t<sp/>destination_y,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>width,<sp/>uint32_t<sp/>height,<sp/>uint32_t<sp/>clip_x,<sp/>uint32_t<sp/>clip_y,<sp/>uint32_t<sp/>clip_width,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>clip_height)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>PrintMsg(</highlight><highlight class="stringliteral">&quot;ImageBlit:<sp/>%d<sp/>beta:<sp/>0x%08X<sp/>src:<sp/>%d<sp/>dest:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>operation,<sp/>beta,<sp/>source_channel,<sp/>destination_channel);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>Pushbuffer::Begin();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_19,<sp/>NV01_CONTEXT_CLIP_RECTANGLE_SET_POINT,<sp/>clip_x<sp/>|<sp/>(clip_y<sp/>&lt;&lt;<sp/>16));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_19,<sp/>NV01_CONTEXT_CLIP_RECTANGLE_SET_SIZE,<sp/>clip_width<sp/>|<sp/>(clip_height<sp/>&lt;&lt;<sp/>16));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_9F,<sp/>NV_IMAGE_BLIT_CLIP_RECTANGLE,<sp/>clip_rect_ctx_.ChannelID);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_9F,<sp/>NV_IMAGE_BLIT_OPERATION,<sp/>operation);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_62,<sp/>NV10_CONTEXT_SURFACES_2D_SET_DMA_IN_MEMORY0,<sp/>source_channel);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_62,<sp/>NV10_CONTEXT_SURFACES_2D_SET_DMA_IN_MEMORY1,<sp/>destination_channel);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_62,<sp/>NV10_CONTEXT_SURFACES_2D_FORMAT,<sp/>surface_format);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_62,<sp/>NV10_CONTEXT_SURFACES_2D_PITCH,<sp/>source_pitch<sp/>|<sp/>(destination_pitch<sp/>&lt;&lt;<sp/>16));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_62,<sp/>NV10_CONTEXT_SURFACES_2D_OFFSET_SRC,<sp/>source_offset);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_62,<sp/>NV10_CONTEXT_SURFACES_2D_OFFSET_DST,<sp/>destination_offset);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_9F,<sp/>NV_IMAGE_BLIT_COLOR_KEY,<sp/>null_ctx_.ChannelID);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_9F,<sp/>NV_IMAGE_BLIT_PATTERN,<sp/>null_ctx_.ChannelID);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_9F,<sp/>NV_IMAGE_BLIT_ROP5,<sp/>null_ctx_.ChannelID);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operation<sp/>!=<sp/>NV09F_SET_OPERATION_BLEND_AND)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_9F,<sp/>NV_IMAGE_BLIT_SET_BETA,<sp/>null_ctx_.ChannelID);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_12,<sp/>NV012_SET_BETA,<sp/>beta);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_9F,<sp/>NV_IMAGE_BLIT_SET_BETA,<sp/>beta_ctx_.ChannelID);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operation<sp/>!=<sp/>NV09F_SET_OPERATION_SRCCOPY_PREMULT<sp/>&amp;&amp;<sp/>operation<sp/>!=<sp/>NV09F_SET_OPERATION_BLEND_AND_PREMULT)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_9F,<sp/>NV_IMAGE_BLIT_SET_BETA4,<sp/>null_ctx_.ChannelID);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>beta<sp/>is<sp/>ARGB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_72,<sp/>NV072_SET_BETA,<sp/>beta);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_9F,<sp/>NV_IMAGE_BLIT_SET_BETA4,<sp/>beta4_ctx_.ChannelID);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_9F,<sp/>NV_IMAGE_BLIT_POINT_IN,<sp/>source_x<sp/>|<sp/>(source_y<sp/>&lt;&lt;<sp/>16));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_9F,<sp/>NV_IMAGE_BLIT_POINT_OUT,<sp/>destination_x<sp/>|<sp/>(destination_y<sp/>&lt;&lt;<sp/>16));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>Pushbuffer::PushTo(SUBCH_CLASS_9F,<sp/>NV_IMAGE_BLIT_SIZE,<sp/>width<sp/>|<sp/>(height<sp/>&lt;&lt;<sp/>16));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>Pushbuffer::End();</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImageBlitTests::Test(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BlitTest&amp;<sp/>test)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>host_.PrepareDraw(0xF0440011);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>uint32_t<sp/>image_bytes<sp/>=<sp/>image_pitch_<sp/>*<sp/>image_height_;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>pb_set_dma_address(&amp;image_src_dma_ctx_,<sp/>source_image_,<sp/>image_bytes<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>uint32_t<sp/>clip_x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>uint32_t<sp/>clip_y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>uint32_t<sp/>clip_w<sp/>=<sp/>host_.GetFramebufferWidth();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>uint32_t<sp/>clip_h<sp/>=<sp/>host_.GetFramebufferHeight();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>ImageBlit(test.blit_operation,<sp/>test.beta,<sp/>image_src_dma_ctx_.ChannelID,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DMA_CHANNEL_BITBLT_IMAGES,<sp/><sp/></highlight><highlight class="comment">//<sp/>DMA<sp/>channel<sp/>11<sp/>-<sp/>0x1117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test.buffer_color_format,<sp/>image_pitch_,<sp/>4<sp/>*<sp/>host_.GetFramebufferWidth(),<sp/>0,<sp/>SOURCE_X,<sp/>SOURCE_Y,<sp/>0,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DESTINATION_X,<sp/>DESTINATION_Y,<sp/>SOURCE_WIDTH,<sp/>SOURCE_HEIGHT,<sp/>clip_x,<sp/>clip_y,<sp/>clip_w,<sp/>clip_h);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>std::string<sp/>op_name<sp/>=<sp/>OperationName(test.blit_operation);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;Op:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>op_name.c_str());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>std::string<sp/>color_format_name<sp/>=<sp/>ColorFormatName(test.buffer_color_format);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;BufFmt:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>color_format_name.c_str());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test.blit_operation<sp/>!=<sp/>NV09F_SET_OPERATION_SRCCOPY)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;Beta:<sp/>%08X\n&quot;</highlight><highlight class="normal">,<sp/>test.beta);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>pb_draw_text_screen();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>std::string<sp/>name<sp/>=<sp/>MakeTestName(test);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>host_.<ref refid="d6/d80/classTestHost_1a8e1914535ca75d5b94cfb3cf28f52b17" kindref="member">FinishDraw</ref>(allow_saving_,<sp/>output_dir_,<sp/>suite_name_,<sp/>name);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImageBlitTests::TestWithClipRectangle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d17/structImageBlitTests_1_1BlitTest" kindref="compound">ImageBlitTests::BlitTest</ref>&amp;<sp/>test,<sp/>uint32_t<sp/>clip_x,<sp/>uint32_t<sp/>clip_y,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>clip_w,<sp/>uint32_t<sp/>clip_h)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>host_.PrepareDraw(0xF0440011);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>uint32_t<sp/>image_bytes<sp/>=<sp/>image_pitch_<sp/>*<sp/>image_height_;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>pb_set_dma_address(&amp;image_src_dma_ctx_,<sp/>source_image_,<sp/>image_bytes<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>ImageBlit(test.blit_operation,<sp/>test.beta,<sp/>image_src_dma_ctx_.ChannelID,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DMA_CHANNEL_BITBLT_IMAGES,<sp/><sp/></highlight><highlight class="comment">//<sp/>DMA<sp/>channel<sp/>11<sp/>-<sp/>0x1117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test.buffer_color_format,<sp/>image_pitch_,<sp/>4<sp/>*<sp/>host_.GetFramebufferWidth(),<sp/>0,<sp/>SOURCE_X,<sp/>SOURCE_Y,<sp/>0,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DESTINATION_X,<sp/>DESTINATION_Y,<sp/>SOURCE_WIDTH,<sp/>SOURCE_HEIGHT,<sp/>clip_x,<sp/>clip_y,<sp/>clip_w,<sp/>clip_h);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>std::string<sp/>name<sp/>=<sp/>MakeTestName(clip_x,<sp/>clip_y,<sp/>clip_w,<sp/>clip_h);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>std::string<sp/>color_format_name<sp/>=<sp/>ColorFormatName(test.buffer_color_format);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;BufFmt:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>color_format_name.c_str());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test.blit_operation<sp/>!=<sp/>NV09F_SET_OPERATION_SRCCOPY)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;Beta:<sp/>%08X\n&quot;</highlight><highlight class="normal">,<sp/>test.beta);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>pb_draw_text_screen();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>host_.<ref refid="d6/d80/classTestHost_1a8e1914535ca75d5b94cfb3cf28f52b17" kindref="member">FinishDraw</ref>(allow_saving_,<sp/>output_dir_,<sp/>suite_name_,<sp/>name);</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImageBlitTests::TestDirtyOverlappedDestinationSurface()<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>host_.PrepareDraw(0xFF111111);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>uint32_t<sp/>image_bytes<sp/>=<sp/>image_pitch_<sp/>*<sp/>image_height_;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>pb_set_dma_address(&amp;image_src_dma_ctx_,<sp/>source_image_,<sp/>image_bytes<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>3D<sp/>render<sp/>to<sp/>a<sp/>surface<sp/>render<sp/>target<sp/>within<sp/>the<sp/>destination<sp/>blit<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner0Just(TestHost::SRC_DIFFUSE);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner1Just(TestHost::SRC_ZERO,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>subtexture<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pb_back_buffer())<sp/>+<sp/>64<sp/>+<sp/>64<sp/>*<sp/>pb_back_buffer_pitch();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>host_.RenderToSurfaceStart(subtexture,<sp/>TestHost::SCF_A8R8G8B8,<sp/>host_.GetFramebufferWidth(),</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_.GetFramebufferHeight());</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>host_.Begin(TestHost::PRIMITIVE_QUADS);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>host_.SetDiffuse(1.f,<sp/>0.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>host_.SetScreenVertex(0.f,<sp/>0.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>host_.SetDiffuse(0.f,<sp/>1.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>host_.SetScreenVertex(128.f,<sp/>0.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>host_.SetDiffuse(0.f,<sp/>0.f,<sp/>1.f);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>host_.SetScreenVertex(128.f,<sp/>128.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>host_.SetDiffuse(0.75,<sp/>0.65f,<sp/>0.55f);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>host_.SetScreenVertex(0.f,<sp/>128.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>host_.End();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>host_.RenderToSurfaceEnd();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>Do<sp/>a<sp/>2D<sp/>image<sp/>srccopy<sp/>that<sp/>completely<sp/>overwrites<sp/>the<sp/>destination<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>ImageBlit(NV09F_SET_OPERATION_SRCCOPY,<sp/>0,<sp/>image_src_dma_ctx_.ChannelID,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DMA_CHANNEL_BITBLT_IMAGES,<sp/><sp/></highlight><highlight class="comment">//<sp/>DMA<sp/>channel<sp/>11<sp/>-<sp/>0x1117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NV04_SURFACE_2D_FORMAT_A8R8G8B8,<sp/>image_pitch_,<sp/>4<sp/>*<sp/>host_.GetFramebufferWidth(),</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source_offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination_offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256,<sp/><sp/></highlight><highlight class="comment">//<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256,<sp/><sp/></highlight><highlight class="comment">//<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256,<sp/><sp/></highlight><highlight class="comment">//<sp/>clip_width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip_height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3)<sp/>Draw<sp/>an<sp/>unrelated<sp/>quad<sp/>to<sp/>force<sp/>the<sp/>3D<sp/>hardware<sp/>to<sp/>wait<sp/>on<sp/>the<sp/>2D<sp/>blit<sp/>completion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>host_.Begin(TestHost::PRIMITIVE_QUADS);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>host_.SetDiffuse(1.f,<sp/>0.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>host_.SetScreenVertex(320.f,<sp/>240.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>host_.SetDiffuse(0.f,<sp/>1.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>host_.SetScreenVertex(324.f,<sp/>240.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>host_.SetDiffuse(0.f,<sp/>0.f,<sp/>1.f);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>host_.SetScreenVertex(324.f,<sp/>244.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>host_.SetDiffuse(0.75,<sp/>0.65f,<sp/>0.55f);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>host_.SetScreenVertex(320.f,<sp/>244.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>host_.End();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>host_.<ref refid="d6/d80/classTestHost_1a8e1914535ca75d5b94cfb3cf28f52b17" kindref="member">FinishDraw</ref>(allow_saving_,<sp/>output_dir_,<sp/>suite_name_,<sp/>kDirtyOverlappedDestSurfaceTest);</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImageBlitTests::TestBlitRenderBlit()<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>host_.PrepareDraw(0xFF112233);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>uint32_t<sp/>image_bytes<sp/>=<sp/>image_pitch_<sp/>*<sp/>image_height_;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>pb_set_dma_address(&amp;image_src_dma_ctx_,<sp/>source_image_,<sp/>image_bytes<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>a<sp/>render<sp/>target<sp/>in<sp/>texture<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rt_width<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rt_height<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rt_pitch<sp/>=<sp/>rt_width<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rt_size<sp/>=<sp/>rt_pitch<sp/>*<sp/>rt_height;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>render_target<sp/>=<sp/>host_.GetTextureMemoryForStage(0);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>memset(render_target,<sp/>0,<sp/>rt_size);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>pb_set_dma_address(&amp;render_target_dma_ctx_,<sp/>render_target,<sp/>rt_size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1)<sp/>Blit<sp/>an<sp/>image<sp/>to<sp/>the<sp/>render<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>ImageBlit(NV09F_SET_OPERATION_BLEND_AND,<sp/>0x444fffff,<sp/>image_src_dma_ctx_.ChannelID,<sp/>render_target_dma_ctx_.ChannelID,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>image_pitch_,<sp/>rt_pitch,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source_offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination_offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_width,<sp/><sp/></highlight><highlight class="comment">//<sp/>clip_width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_height<sp/><sp/></highlight><highlight class="comment">//<sp/>clip_height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>Render<sp/>a<sp/>quad<sp/>to<sp/>a<sp/>region<sp/>of<sp/>the<sp/>render<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner0Just(TestHost::SRC_DIFFUSE);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner1Just(TestHost::SRC_ZERO,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>host_.RenderToSurfaceStart(render_target,<sp/>TestHost::SCF_A8R8G8B8,<sp/>rt_width,<sp/>rt_height,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>64,<sp/>64,<sp/>128,<sp/>128);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>host_.Begin(TestHost::PRIMITIVE_QUADS);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>host_.SetDiffuse(1.f,<sp/>0.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>host_.SetScreenVertex(64.f,<sp/>64.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>host_.SetDiffuse(0.f,<sp/>1.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>host_.SetScreenVertex(192.f,<sp/>64.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>host_.SetDiffuse(0.f,<sp/>0.f,<sp/>1.f);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>host_.SetScreenVertex(192.f,<sp/>192.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>host_.SetDiffuse(0.75,<sp/>0.65f,<sp/>0.55f);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>host_.SetScreenVertex(64.f,<sp/>192.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>host_.End();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>host_.RenderToSurfaceEnd();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3)<sp/>Blit<sp/>again<sp/>to<sp/>the<sp/>render<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>ImageBlit(NV09F_SET_OPERATION_BLEND_AND,<sp/>0x66800000,<sp/>image_src_dma_ctx_.ChannelID,<sp/>render_target_dma_ctx_.ChannelID,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8,<sp/>image_pitch_,<sp/>rt_pitch,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source_offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination_offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_width,<sp/><sp/></highlight><highlight class="comment">//<sp/>clip_width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_height<sp/><sp/></highlight><highlight class="comment">//<sp/>clip_height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>4)<sp/>Blit<sp/>the<sp/>render<sp/>target<sp/>to<sp/>the<sp/>screen<sp/>to<sp/>show<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>y_offset<sp/>=<sp/>72;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>ImageBlit(NV09F_SET_OPERATION_SRCCOPY,<sp/>0,<sp/>render_target_dma_ctx_.ChannelID,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DMA_CHANNEL_BITBLT_IMAGES,<sp/><sp/></highlight><highlight class="comment">//<sp/>DMA<sp/>channel<sp/>11<sp/>-<sp/>0x1117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NV04_SURFACE_2D_FORMAT_A8R8G8B8,<sp/>rt_pitch,<sp/>4<sp/>*<sp/>host_.GetFramebufferWidth(),</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source_offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination_offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(host_.GetFramebufferWidth()<sp/>-<sp/>rt_width)<sp/>/<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_offset<sp/>+<sp/>(host_.GetFramebufferHeight()<sp/>-<sp/>y_offset<sp/>-<sp/>rt_height)<sp/>/<sp/>2,<sp/><sp/></highlight><highlight class="comment">//<sp/>destination_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_width,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_height,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_.GetFramebufferWidth(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip_width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_.GetFramebufferHeight()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip_height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>kBlitRenderBlitTest);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Test<sp/>image<sp/>is<sp/>rendered<sp/>with<sp/>low<sp/>alpha<sp/>to<sp/>UL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Quad<sp/>is<sp/>rendered<sp/>to<sp/>LL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Test<sp/>image<sp/>is<sp/>rendered<sp/>with<sp/>high<sp/>alpha<sp/>to<sp/>LR\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Surface<sp/>is<sp/>blit<sp/>via<sp/>SRCCOPY<sp/>to<sp/>framebuffer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>pb_draw_text_screen();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>host_.<ref refid="d6/d80/classTestHost_1a8e1914535ca75d5b94cfb3cf28f52b17" kindref="member">FinishDraw</ref>(allow_saving_,<sp/>output_dir_,<sp/>suite_name_,<sp/>kBlitRenderBlitTest);</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>OperationName(uint32_t<sp/>operation)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operation<sp/>==<sp/>NV09F_SET_OPERATION_BLEND_AND)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;BLENDAND&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operation<sp/>==<sp/>NV09F_SET_OPERATION_SRCCOPY)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SRCCOPY&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operation<sp/>==<sp/>NV09F_SET_OPERATION_SRCCOPY_PREMULT)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SRCCOPYPRE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operation<sp/>==<sp/>NV09F_SET_OPERATION_BLEND_AND_PREMULT)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;BLENDANDPRE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[16]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/>15,<sp/></highlight><highlight class="stringliteral">&quot;%X&quot;</highlight><highlight class="normal">,<sp/>operation);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>ColorFormatName(uint32_t<sp/>format)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(format)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_X8R8G8B8:</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;XRGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NV04_SURFACE_2D_FORMAT_A8R8G8B8:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ARGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NV04_SURFACE_2D_FORMAT_X8R8G8B8_Z8R8G8B8:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ZRGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[16]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/>15,<sp/></highlight><highlight class="stringliteral">&quot;%X&quot;</highlight><highlight class="normal">,<sp/>format);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/tests/image_blit_tests.cpp"/>
  </compounddef>
</doxygen>
