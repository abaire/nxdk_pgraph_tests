<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d5/d25/set__vertex__data__tests_8cpp" kind="file" language="C++">
    <compoundname>set_vertex_data_tests.cpp</compoundname>
    <includes refid="d9/dff/set__vertex__data__tests_8h" local="yes">set_vertex_data_tests.h</includes>
    <includes local="no">pbkit/pbkit.h</includes>
    <includes refid="d3/dc0/debug__output_8h" local="yes">debug_output.h</includes>
    <includes refid="d7/d31/pbkit__ext_8h" local="yes">pbkit_ext.h</includes>
    <includes local="yes">shaders/passthrough_vertex_shader.h</includes>
    <includes refid="df/d43/test__host_8h" local="yes">test_host.h</includes>
    <includes local="yes">vertex_buffer.h</includes>
    <incdepgraph>
      <node id="20">
        <label>debug_output.h</label>
        <link refid="d3/dc0/debug__output_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ftp_logger.h</label>
        <link refid="d0/dad/ftp__logger_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>pbkit_ext.h</label>
        <link refid="d7/d31/pbkit__ext_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>pgraph_diff_token.h</label>
        <link refid="d3/d11/pgraph__diff__token_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>test_host.h</label>
        <link refid="df/d43/test__host_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/tests/set_vertex_data_tests.cpp</label>
        <link refid="d5/d25/set__vertex__data__tests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>set_vertex_data_tests.h</label>
        <link refid="d9/dff/set__vertex__data__tests_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>test_suite.h</label>
        <link refid="d6/d7a/test__suite_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>atomic</label>
      </node>
      <node id="13">
        <label>chrono</label>
      </node>
      <node id="9">
        <label>cstdint</label>
      </node>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="18">
        <label>list</label>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="25">
        <label>nv2astate.h</label>
      </node>
      <node id="26">
        <label>nxdk_ext.h</label>
      </node>
      <node id="3">
        <label>pbkit/nv_regs.h</label>
      </node>
      <node id="19">
        <label>pbkit/pbkit.h</label>
      </node>
      <node id="22">
        <label>printf/printf.h</label>
      </node>
      <node id="27">
        <label>pushbuffer.h</label>
      </node>
      <node id="15">
        <label>set</label>
      </node>
      <node id="23">
        <label>shaders/passthrough_vertex_shader.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="28">
        <label>texture_format.h</label>
      </node>
      <node id="29">
        <label>texture_stage.h</label>
      </node>
      <node id="12">
        <label>thread</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="30">
        <label>vertex_buffer.h</label>
      </node>
      <node id="21">
        <label>windows.h</label>
      </node>
      <node id="31">
        <label>xbox_math_types.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="d5/d25/set__vertex__data__tests_8cpp_1acca88b5fe29418d6f185578c1e3456a8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr SetVertexDataTests::SetFunction</type>
        <definition>constexpr SetVertexDataTests::SetFunction kTests[]</definition>
        <argsstring>[]</argsstring>
        <name>kTests</name>
        <initializer>= {
    SetVertexDataTests::FUNC_2F_M, SetVertexDataTests::FUNC_4F_M, SetVertexDataTests::FUNC_2S,
    SetVertexDataTests::FUNC_4UB,  SetVertexDataTests::FUNC_4S_M,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/set_vertex_data_tests.cpp" line="11" column="50" bodyfile="src/tests/set_vertex_data_tests.cpp" bodystart="11" bodyend="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="d5/d25/set__vertex__data__tests_8cpp_1a1da3d5289065b4c3f7044651c7507486" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SetLightAndMaterial</definition>
        <argsstring>()</argsstring>
        <name>SetLightAndMaterial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/set_vertex_data_tests.cpp" line="68" column="13" bodyfile="src/tests/set_vertex_data_tests.cpp" bodystart="68" bodyend="102"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;set_vertex_data_tests.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbkit/pbkit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;debug_output.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pbkit_ext.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shaders/passthrough_vertex_shader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_host.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vertex_buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>SetVertexDataTests::SetFunction<sp/>kTests[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>SetVertexDataTests::FUNC_2F_M,<sp/>SetVertexDataTests::FUNC_4F_M,<sp/>SetVertexDataTests::FUNC_2S,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>SetVertexDataTests::FUNC_4UB,<sp/><sp/>SetVertexDataTests::FUNC_4S_M,</highlight></codeline>
<codeline lineno="14"><highlight class="normal">};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">SetVertexDataTests::SetVertexDataTests(<ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref>&amp;<sp/>host,<sp/>std::string<sp/>output_dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Config&amp;<sp/>config)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="d2/d3e/classTestSuite" kindref="compound">TestSuite</ref>(host,<sp/>std::move(output_dir),<sp/></highlight><highlight class="stringliteral">&quot;SetVertexData&quot;</highlight><highlight class="normal">,<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saturate_sign<sp/>:<sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">})<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>set_func<sp/>:<sp/>kTests)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>MakeTestName(set_func,<sp/>saturate_sign);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Color<sp/>diffuse{0.25f,<sp/>1.0f,<sp/>0.5f,<sp/>0.75f};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tests_[name]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>set_func,<sp/>diffuse,<sp/>saturate_sign]()<sp/>{<sp/>Test(set_func,<sp/>diffuse,<sp/>saturate_sign);<sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d67/classSetVertexDataTests_1ada9beafd8338acb0502f8669bb0d906c" kindref="member">SetVertexDataTests::Initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="d2/d3e/classTestSuite_1a1c4756eb905d6d4d35e1630107396c38" kindref="member">TestSuite::Initialize</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>host_.SetVertexShaderProgram(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>CreateGeometry();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>host_.SetXDKDefaultViewportAndFixedFunctionMatrices();</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetVertexDataTests::CreateGeometry()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>-2.75f;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>2.75f;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>1.75f;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>-1.75f;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mid_width<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mid_height<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>one_pos[3]<sp/>=<sp/>{left,<sp/>top,<sp/>z};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>two_pos[3]<sp/>=<sp/>{mid_width,<sp/>top,<sp/>z};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>three_pos[3]<sp/>=<sp/>{left<sp/>+<sp/>(mid_width<sp/>-<sp/>left)<sp/>*<sp/>0.5f,<sp/>bottom,<sp/>z};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>diffuse_buffer_<sp/>=<sp/>host_.AllocateVertexBuffer(3);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>diffuse_buffer_-&gt;DefineTriangle(0,<sp/>one_pos,<sp/>two_pos,<sp/>three_pos);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>one_pos[3]<sp/>=<sp/>{mid_width<sp/>+<sp/>(right<sp/>-<sp/>mid_width)<sp/>*<sp/>0.5f,<sp/>top,<sp/>z};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>two_pos[3]<sp/>=<sp/>{right,<sp/>mid_height,<sp/>z};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>three_pos[3]<sp/>=<sp/>{mid_width,<sp/>mid_height,<sp/>z};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>lit_buffer_<sp/>=<sp/>host_.AllocateVertexBuffer(3);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>lit_buffer_-&gt;DefineTriangle(0,<sp/>one_pos,<sp/>two_pos,<sp/>three_pos);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>one_pos[3]<sp/>=<sp/>{mid_width,<sp/>mid_height,<sp/>z};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>two_pos[3]<sp/>=<sp/>{right,<sp/>mid_height,<sp/>z};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>three_pos[3]<sp/>=<sp/>{mid_width<sp/>+<sp/>(right<sp/>-<sp/>mid_width)<sp/>*<sp/>0.5f,<sp/>bottom,<sp/>z};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>lit_buffer_negative_<sp/>=<sp/>host_.AllocateVertexBuffer(3);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>lit_buffer_negative_-&gt;DefineTriangle(0,<sp/>one_pos,<sp/>two_pos,<sp/>three_pos);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetLightAndMaterial()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>Pushbuffer::Begin();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_SPECULAR_PARAMS,<sp/>0xbf34dce5);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(0x09e4,<sp/>0xc020743f);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(0x09e8,<sp/>0x40333d06);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(0x09ec,<sp/>0xbf003612);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(0x09f0,<sp/>0xbff852a5);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(0x09f4,<sp/>0x401c1bce);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_COLOR_MATERIAL,<sp/>NV097_SET_COLOR_MATERIAL_ALL_FROM_MATERIAL);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_SCENE_AMBIENT_COLOR,<sp/>0x0,<sp/>0x0,<sp/>0x0);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_MATERIAL_EMISSION,<sp/>0x0,<sp/>0x0,<sp/>0x0);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>Pushbuffer::PushF(NV097_SET_MATERIAL_ALPHA,<sp/>1.0f);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_LIGHT_AMBIENT_COLOR,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::PushF(NV097_SET_LIGHT_DIFFUSE_COLOR,<sp/>0.0f,<sp/>0.25f,<sp/>0.8f);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_LIGHT_SPECULAR_COLOR,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_LIGHT_LOCAL_RANGE,<sp/>0x7149f2ca);<sp/><sp/></highlight><highlight class="comment">//<sp/>1e30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_LIGHT_INFINITE_HALF_VECTOR,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::PushF(NV097_SET_LIGHT_INFINITE_DIRECTION,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_LIGHT_AMBIENT_COLOR<sp/>+<sp/>128,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::PushF(NV097_SET_LIGHT_DIFFUSE_COLOR<sp/>+<sp/>128,<sp/>0.8f,<sp/>0.25f,<sp/>0.33f);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_LIGHT_SPECULAR_COLOR<sp/>+<sp/>128,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_LIGHT_LOCAL_RANGE<sp/>+<sp/>128,<sp/>0x7149f2ca);<sp/><sp/></highlight><highlight class="comment">//<sp/>1e30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_LIGHT_INFINITE_HALF_VECTOR<sp/>+<sp/>128,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::PushF(NV097_SET_LIGHT_INFINITE_DIRECTION<sp/>+<sp/>128,<sp/>-1.0f,<sp/>0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>Pushbuffer::End();</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetVertexDataTests::Test(SetFunction<sp/>func,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Color&amp;<sp/>diffuse,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>saturate_signed)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>kBackgroundColor<sp/>=<sp/>0xFF303030;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>host_.PrepareDraw(kBackgroundColor);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>get_sign<sp/>=<sp/>[saturate_signed](</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/>0.0f)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&gt;<sp/>0.0f)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(saturate_signed)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0x7FFF;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(saturate_signed)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0x8000;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0xFFFF;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>Pushbuffer::Begin();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_LIGHTING_ENABLE,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(func)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_4UB:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_VERTEX_DATA4UB<sp/>+<sp/>(4<sp/>*<sp/>NV2A_VERTEX_ATTR_DIFFUSE),<sp/>diffuse.AsBGRA());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_4F_M:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Pushbuffer::PushF(NV097_SET_VERTEX_DATA4F_M<sp/>+<sp/>(16<sp/>*<sp/>NV2A_VERTEX_ATTR_DIFFUSE),<sp/>diffuse.b,<sp/>diffuse.g,<sp/>diffuse.r,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffuse.a);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_2S:<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rg_pair<sp/>=<sp/>get_sign(diffuse.r)<sp/>+<sp/>(get_sign(diffuse.g)<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_VERTEX_DATA2S<sp/>+<sp/>(4<sp/>*<sp/>NV2A_VERTEX_ATTR_DIFFUSE),<sp/>rg_pair);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_2F_M:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Pushbuffer::PushF(NV097_SET_VERTEX_DATA2F_M<sp/>+<sp/>(8<sp/>*<sp/>NV2A_VERTEX_ATTR_DIFFUSE),<sp/>diffuse.b,<sp/>diffuse.g);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_4S_M:<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rg_pair<sp/>=<sp/>get_sign(diffuse.r)<sp/>+<sp/>(get_sign(diffuse.g)<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ba_pair<sp/>=<sp/>get_sign(diffuse.b)<sp/>+<sp/>(get_sign(diffuse.a)<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_VERTEX_DATA4S_M<sp/>+<sp/>(8<sp/>*<sp/>NV2A_VERTEX_ATTR_DIFFUSE),<sp/>rg_pair,<sp/>ba_pair);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>Pushbuffer::End();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>SetLightAndMaterial();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>host_.SetVertexBuffer(diffuse_buffer_);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>host_.DrawInlineBuffer(host_.POSITION);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>Pushbuffer::Begin();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_LIGHTING_ENABLE,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_LIGHT_CONTROL,<sp/>0x10001);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_LIGHT_ENABLE_MASK,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NV097_SET_LIGHT_ENABLE_MASK_LIGHT0_INFINITE<sp/>|<sp/>NV097_SET_LIGHT_ENABLE_MASK_LIGHT1_INFINITE);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>diffuse<sp/>to<sp/>pure<sp/>white<sp/>so<sp/>the<sp/>resultant<sp/>color<sp/>is<sp/>just<sp/>from<sp/>the<sp/>light.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_VERTEX_DATA4UB<sp/>+<sp/>(4<sp/>*<sp/>NV2A_VERTEX_ATTR_DIFFUSE),<sp/>0xFFFFFFFF);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>Pushbuffer::End();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>set_normal<sp/>=<sp/>[func,<sp/>get_sign](</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::Begin();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(func)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_4UB:<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>value<sp/>=<sp/>((uint32_t)(x<sp/>*<sp/>255.0f)<sp/>&amp;<sp/>0xFF)<sp/>+<sp/>(((uint32_t)(y<sp/>*<sp/>255.0f)<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>8)<sp/>+</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)(z<sp/>*<sp/>255.0f)<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_VERTEX_DATA4UB<sp/>+<sp/>(4<sp/>*<sp/>NV2A_VERTEX_ATTR_NORMAL),<sp/>value);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_4F_M:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pushbuffer::PushF(NV097_SET_VERTEX_DATA4F_M<sp/>+<sp/>(16<sp/>*<sp/>NV2A_VERTEX_ATTR_NORMAL),<sp/>x,<sp/>y,<sp/>z,<sp/>1.0f);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_2S:<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>xy<sp/>=<sp/>get_sign(x)<sp/>+<sp/>(get_sign(y)<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_VERTEX_DATA2S<sp/>+<sp/>(4<sp/>*<sp/>NV2A_VERTEX_ATTR_NORMAL),<sp/>xy);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_2F_M:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pushbuffer::PushF(NV097_SET_VERTEX_DATA2F_M<sp/>+<sp/>(8<sp/>*<sp/>NV2A_VERTEX_ATTR_NORMAL),<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_4S_M:<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>xy<sp/>=<sp/>(get_sign(x)<sp/>+<sp/>(get_sign(y)<sp/>&lt;&lt;<sp/>16));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>zw<sp/>=<sp/>(get_sign(z)<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>16));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pushbuffer::Push(NV097_SET_VERTEX_DATA4S_M<sp/>+<sp/>(8<sp/>*<sp/>NV2A_VERTEX_ATTR_NORMAL),<sp/>xy,<sp/>zw);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>Pushbuffer::End();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>set_normal(1.0f,<sp/>0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>host_.SetVertexBuffer(lit_buffer_);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>host_.DrawInlineBuffer(host_.POSITION);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>set_normal(-1.0f,<sp/>0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>host_.SetVertexBuffer(lit_buffer_negative_);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>host_.DrawInlineBuffer(host_.POSITION);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>std::string<sp/>name<sp/>=<sp/>MakeTestName(func,<sp/>saturate_signed);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>pb_printat(6,<sp/>17,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;Diffuse&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>pb_printat(7,<sp/>35,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;<sp/>1<sp/>Normal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>pb_printat(9,<sp/>35,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;-1<sp/>Normal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>pb_draw_text_screen();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>host_.<ref refid="d6/d80/classTestHost_1a8e1914535ca75d5b94cfb3cf28f52b17" kindref="member">FinishDraw</ref>(allow_saving_,<sp/>output_dir_,<sp/>suite_name_,<sp/>name);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">std::string<sp/>SetVertexDataTests::MakeTestName(SetFunction<sp/>func,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>saturate_sign)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(func)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_2F_M:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SET_VERTEX_DATA2F_M&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_4F_M:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SET_VERTEX_DATA4F_M&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_2S:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(saturate_sign)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SET_VERTEX_DATA2S-7FFF&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SET_VERTEX_DATA2S-0001&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_4UB:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SET_VERTEX_DATA4UB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FUNC_4S_M:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(saturate_sign)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SET_VERTEX_DATA4S_M-7FFF&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SET_VERTEX_DATA4S_M-0001&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/tests/set_vertex_data_tests.cpp"/>
  </compounddef>
</doxygen>
