<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d7/d91/classLightingRangeTests" kind="class" language="C++" prot="public">
    <compoundname>LightingRangeTests</compoundname>
    <basecompoundref refid="d2/d3e/classTestSuite" prot="public" virt="non-virtual">TestSuite</basecompoundref>
    <includes refid="d7/d0f/lighting__range__tests_8h" local="no">lighting_range_tests.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/d91/classLightingRangeTests_1ad93ce3c1d87b1a4afafdfa9df195d6da" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; VertexBuffer &gt;</type>
        <definition>std::shared_ptr&lt;VertexBuffer&gt; LightingRangeTests::vertex_buffer_mesh_</definition>
        <argsstring></argsstring>
        <name>vertex_buffer_mesh_</name>
        <qualifiedname>LightingRangeTests::vertex_buffer_mesh_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/lighting_range_tests.h" line="41" column="19" bodyfile="src/tests/lighting_range_tests.h" bodystart="41" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/d91/classLightingRangeTests_1a110af730ae251ce209adc05ed96b6da7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LightingRangeTests::LightingRangeTests</definition>
        <argsstring>(TestHost &amp;host, std::string output_dir, const Config &amp;config)</argsstring>
        <name>LightingRangeTests</name>
        <qualifiedname>LightingRangeTests::LightingRangeTests</qualifiedname>
        <param>
          <type><ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref> &amp;</type>
          <declname>host</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>output_dir</declname>
        </param>
        <param>
          <type>const <ref refid="da/d85/structTestSuite_1_1Config" kindref="compound">Config</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Directional Tests behavior using the fixed function pipeline with a directional (infinite) light.</para>
</simplesect>
<simplesect kind="remark"><para>Point Tests behavior using the fixed function pipeline with a point (local) light. Attenuation is set to 0 for the light, resulting in hard edges.</para>
</simplesect>
<simplesect kind="remark"><para>Spot Tests behavior using the fixed function pipeline with a spotlight. Attenuation is set to 0 for the light, resulting in hard edges. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/lighting_range_tests.h" line="29" column="3" bodyfile="src/tests/lighting_range_tests.cpp" bodystart="55" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="d7/d91/classLightingRangeTests_1a72517038cd67809d59512256ccf204cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void LightingRangeTests::Deinitialize</definition>
        <argsstring>() override</argsstring>
        <name>Deinitialize</name>
        <qualifiedname>LightingRangeTests::Deinitialize</qualifiedname>
        <reimplements refid="d2/d3e/classTestSuite_1a28742e0a5438926d43d0814c9694836f">Deinitialize</reimplements>
        <briefdescription>
<para>Called to tear down the test suite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/lighting_range_tests.h" line="31" column="8" bodyfile="src/tests/lighting_range_tests.cpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="d7/d91/classLightingRangeTests_1ae3a0cf2126fa467d3002af1ad7e62993" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void LightingRangeTests::Initialize</definition>
        <argsstring>() override</argsstring>
        <name>Initialize</name>
        <qualifiedname>LightingRangeTests::Initialize</qualifiedname>
        <reimplements refid="d2/d3e/classTestSuite_1a1c4756eb905d6d4d35e1630107396c38">Initialize</reimplements>
        <briefdescription>
<para>Called to initialize the test suite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/lighting_range_tests.h" line="32" column="8" bodyfile="src/tests/lighting_range_tests.cpp" bodystart="101" bodyend="143"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d7/d91/classLightingRangeTests_1ac035bdfd782bce357da41614e2d69c8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LightingRangeTests::Test</definition>
        <argsstring>(const std::string &amp;name, std::shared_ptr&lt; Light &gt; light)</argsstring>
        <name>Test</name>
        <qualifiedname>LightingRangeTests::Test</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; Light &gt;</type>
          <declname>light</declname>
        </param>
        <briefdescription>
<para>Tests the behavior of NV097_SET_LIGHT_LOCAL_RANGE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/lighting_range_tests.h" line="36" column="8" bodyfile="src/tests/lighting_range_tests.cpp" bodystart="145" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="d7/d91/classLightingRangeTests_1a981ebf5fdf9da332414fec5aeae94066" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LightingRangeTests::CreateGeometry</definition>
        <argsstring>()</argsstring>
        <name>CreateGeometry</name>
        <qualifiedname>LightingRangeTests::CreateGeometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/lighting_range_tests.h" line="38" column="8" bodyfile="src/tests/lighting_range_tests.cpp" bodystart="87" bodyend="99"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Tests the effects of NV097_SET_LIGHT_LOCAL_RANGE (0x1024).</para>
<para>Each test renders a grid mesh in the center, angled such that the left side is closer to the camera than the right. Two quads are also rendered to the left and the right of the main mesh, the one on the left at a depth close to the camera and the one on the right farther away.</para>
<para>A light is then projected onto the geometry with a range cutoff set such that a portion of the vertices should not be lit. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>LightingRangeTests</label>
        <link refid="d7/d91/classLightingRangeTests"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestSuite</label>
        <link refid="d2/d3e/classTestSuite"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>LightingRangeTests</label>
        <link refid="d7/d91/classLightingRangeTests"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>NV2AState</label>
      </node>
      <node id="5">
        <label>PGRAPHDiffToken</label>
        <link refid="dd/df8/structPGRAPHDiffToken"/>
      </node>
      <node id="3">
        <label>TestHost</label>
        <link refid="d6/d80/classTestHost"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestSuite</label>
        <link refid="d2/d3e/classTestSuite"/>
        <childnode refid="3" relation="usage">
          <edgelabel>host_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>pgraph_diff_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/tests/lighting_range_tests.h" line="27" column="1" bodyfile="src/tests/lighting_range_tests.h" bodystart="27" bodyend="42"/>
    <listofallmembers>
      <member refid="d2/d3e/classTestSuite_1a1bb705ad4344ceb8237e0cb60f1c352d" prot="protected" virt="non-virtual"><scope>LightingRangeTests</scope><name>allow_saving_</name></member>
      <member refid="d7/d91/classLightingRangeTests_1a981ebf5fdf9da332414fec5aeae94066" prot="private" virt="non-virtual"><scope>LightingRangeTests</scope><name>CreateGeometry</name></member>
      <member refid="d7/d91/classLightingRangeTests_1a72517038cd67809d59512256ccf204cc" prot="public" virt="virtual"><scope>LightingRangeTests</scope><name>Deinitialize</name></member>
      <member refid="d2/d3e/classTestSuite_1a7ce09368bd59391f6a9685224cdb8a43" prot="protected" virt="non-virtual"><scope>LightingRangeTests</scope><name>delay_milliseconds_between_tests_</name></member>
      <member refid="d2/d3e/classTestSuite_1a165d9da1dec525ffdd299e2dcfaec2ef" prot="public" virt="non-virtual"><scope>LightingRangeTests</scope><name>DisableTests</name></member>
      <member refid="d2/d3e/classTestSuite_1ac65ad3a2e3cfa4fe555fc1fa95e0a60b" prot="protected" virt="non-virtual"><scope>LightingRangeTests</scope><name>enable_pgraph_region_diff_</name></member>
      <member refid="d2/d3e/classTestSuite_1a391930dfd9c57a4e7cbe8734120dfc73" prot="protected" virt="non-virtual"><scope>LightingRangeTests</scope><name>enable_progress_log_</name></member>
      <member refid="d2/d3e/classTestSuite_1a518ce9987a1a5037f9083651c056c746" prot="protected" virt="non-virtual"><scope>LightingRangeTests</scope><name>ftp_logger_</name></member>
      <member refid="d2/d3e/classTestSuite_1a7059e61572d914cff83ae22da3ea1957" prot="public" virt="non-virtual"><scope>LightingRangeTests</scope><name>HasEnabledTests</name></member>
      <member refid="d2/d3e/classTestSuite_1a454f5c2050b66b598a2f2fcffd45ae48" prot="protected" virt="non-virtual"><scope>LightingRangeTests</scope><name>host_</name></member>
      <member refid="d7/d91/classLightingRangeTests_1ae3a0cf2126fa467d3002af1ad7e62993" prot="public" virt="virtual"><scope>LightingRangeTests</scope><name>Initialize</name></member>
      <member refid="d2/d3e/classTestSuite_1ad87fbc52b4011398c9adb39ab62bb018" prot="protected" virt="non-virtual"><scope>LightingRangeTests</scope><name>interactive_only_</name></member>
      <member refid="d2/d3e/classTestSuite_1ac26e1edd73faf7d732c0e41e816d654e" prot="public" virt="non-virtual"><scope>LightingRangeTests</scope><name>IsInteractiveOnly</name></member>
      <member refid="d7/d91/classLightingRangeTests_1a110af730ae251ce209adc05ed96b6da7" prot="public" virt="non-virtual"><scope>LightingRangeTests</scope><name>LightingRangeTests</name></member>
      <member refid="d2/d3e/classTestSuite_1a15144024801f2f885727f7926c826c87" prot="public" virt="non-virtual"><scope>LightingRangeTests</scope><name>Name</name></member>
      <member refid="d2/d3e/classTestSuite_1a2e81678d3ac733d517616bd67a837465" prot="protected" virt="non-virtual"><scope>LightingRangeTests</scope><name>output_dir_</name></member>
      <member refid="d2/d3e/classTestSuite_1adc29cb178f12adee9cbabd1451a0d3b1" prot="protected" virt="non-virtual"><scope>LightingRangeTests</scope><name>pgraph_diff_</name></member>
      <member refid="d2/d3e/classTestSuite_1a40546218e5f7324690e0455706694763" prot="public" virt="non-virtual"><scope>LightingRangeTests</scope><name>Run</name></member>
      <member refid="d2/d3e/classTestSuite_1a7f99d1a92beb6b58219b841b60d56322" prot="public" virt="non-virtual"><scope>LightingRangeTests</scope><name>RunAll</name></member>
      <member refid="d2/d3e/classTestSuite_1a0d580dbb0e1630ecdc989d5c852e8f91" prot="protected" virt="non-virtual"><scope>LightingRangeTests</scope><name>SetDefaultTextureFormat</name></member>
      <member refid="d2/d3e/classTestSuite_1a94c9bf323dd57396c2768e21690bf0d7" prot="public" virt="non-virtual"><scope>LightingRangeTests</scope><name>SetSavingAllowed</name></member>
      <member refid="d2/d3e/classTestSuite_1af001b219ae1d7798d9df21b5bb8b9976" prot="public" virt="virtual"><scope>LightingRangeTests</scope><name>SetupTest</name></member>
      <member refid="d2/d3e/classTestSuite_1ac59f02a9549a146ed62e6185c0acec8b" prot="protected" virt="non-virtual"><scope>LightingRangeTests</scope><name>suite_name_</name></member>
      <member refid="d2/d3e/classTestSuite_1a92d01e0978cf79ad0883532c73434515" prot="public" virt="non-virtual"><scope>LightingRangeTests</scope><name>TagNV2ATrace</name></member>
      <member refid="d2/d3e/classTestSuite_1a4a67d49ad17fafd018be9871cc0910c3" prot="public" virt="virtual"><scope>LightingRangeTests</scope><name>TearDownTest</name></member>
      <member refid="d7/d91/classLightingRangeTests_1ac035bdfd782bce357da41614e2d69c8b" prot="private" virt="non-virtual"><scope>LightingRangeTests</scope><name>Test</name></member>
      <member refid="d2/d3e/classTestSuite_1a80f0bc74d8d511547708827e5a549a63" prot="public" virt="non-virtual"><scope>LightingRangeTests</scope><name>TestNames</name></member>
      <member refid="d2/d3e/classTestSuite_1a1eaaf3893135b062cd0a09d2a1a2ac0f" prot="protected" virt="non-virtual"><scope>LightingRangeTests</scope><name>tests_</name></member>
      <member refid="d2/d3e/classTestSuite_1a57b1ed01dd40328456bf0854043ca68b" prot="public" virt="non-virtual"><scope>LightingRangeTests</scope><name>TestSuite</name></member>
      <member refid="d2/d3e/classTestSuite_1a5957b74827526f04ff525b750decafd7" prot="public" virt="non-virtual"><scope>LightingRangeTests</scope><name>TestSuite</name></member>
      <member refid="d7/d91/classLightingRangeTests_1ad93ce3c1d87b1a4afafdfa9df195d6da" prot="private" virt="non-virtual"><scope>LightingRangeTests</scope><name>vertex_buffer_mesh_</name></member>
      <member refid="d2/d3e/classTestSuite_1a1743f0a04119de901cb819111d51192d" prot="public" virt="virtual"><scope>LightingRangeTests</scope><name>~TestSuite</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
