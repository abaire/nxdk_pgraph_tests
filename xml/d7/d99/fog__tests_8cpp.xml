<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d7/d99/fog__tests_8cpp" kind="file" language="C++">
    <compoundname>fog_tests.cpp</compoundname>
    <includes refid="dd/ded/fog__tests_8h" local="yes">fog_tests.h</includes>
    <includes local="no">pbkit/pbkit.h</includes>
    <includes local="no">utility</includes>
    <includes refid="d7/d31/pbkit__ext_8h" local="yes">pbkit_ext.h</includes>
    <includes refid="d7/d3a/perspective__vertex__shader__no__lighting_8h" local="yes">shaders/perspective_vertex_shader_no_lighting.h</includes>
    <includes refid="df/d43/test__host_8h" local="yes">test_host.h</includes>
    <includes local="yes">vertex_buffer.h</includes>
    <includes local="yes">fog_infinite_fogc_test.vshinc</includes>
    <includes local="yes">fog_vec4_unset.vshinc</includes>
    <includes local="yes">fog_vec4_x.vshinc</includes>
    <includes local="yes">fog_vec4_y.vshinc</includes>
    <includes local="yes">fog_vec4_z.vshinc</includes>
    <includes local="yes">fog_vec4_w.vshinc</includes>
    <includes local="yes">fog_vec4_w_x.vshinc</includes>
    <includes local="yes">fog_vec4_w_y.vshinc</includes>
    <includes local="yes">fog_vec4_w_z_y_x.vshinc</includes>
    <includes local="yes">fog_vec4_x_y_z_w.vshinc</includes>
    <includes local="yes">fog_vec4_xw.vshinc</includes>
    <includes local="yes">fog_vec4_xy.vshinc</includes>
    <includes local="yes">fog_vec4_xyz.vshinc</includes>
    <includes local="yes">fog_vec4_xyzw.vshinc</includes>
    <includes local="yes">fog_vec4_xz.vshinc</includes>
    <includes local="yes">fog_vec4_xzw.vshinc</includes>
    <includes local="yes">fog_vec4_yw.vshinc</includes>
    <includes local="yes">fog_vec4_yz.vshinc</includes>
    <includes local="yes">fog_vec4_yzw.vshinc</includes>
    <includes local="yes">fog_vec4_zw.vshinc</includes>
    <incdepgraph>
      <node id="6">
        <label>debug_output.h</label>
        <link refid="d3/dc0/debug__output_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ftp_logger.h</label>
        <link refid="d0/dad/ftp__logger_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>pbkit_ext.h</label>
        <link refid="d7/d31/pbkit__ext_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>pgraph_diff_token.h</label>
        <link refid="d3/d11/pgraph__diff__token_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>shaders/perspective_vertex_shader_no_lighting.h</label>
        <link refid="d7/d3a/perspective__vertex__shader__no__lighting_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>test_host.h</label>
        <link refid="df/d43/test__host_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/tests/fog_tests.cpp</label>
        <link refid="d7/d99/fog__tests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fog_tests.h</label>
        <link refid="dd/ded/fog__tests_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>test_suite.h</label>
        <link refid="d6/d7a/test__suite_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>atomic</label>
      </node>
      <node id="24">
        <label>chrono</label>
      </node>
      <node id="12">
        <label>cstdint</label>
      </node>
      <node id="33">
        <label>fog_infinite_fogc_test.vshinc</label>
      </node>
      <node id="34">
        <label>fog_vec4_unset.vshinc</label>
      </node>
      <node id="38">
        <label>fog_vec4_w.vshinc</label>
      </node>
      <node id="39">
        <label>fog_vec4_w_x.vshinc</label>
      </node>
      <node id="40">
        <label>fog_vec4_w_y.vshinc</label>
      </node>
      <node id="41">
        <label>fog_vec4_w_z_y_x.vshinc</label>
      </node>
      <node id="35">
        <label>fog_vec4_x.vshinc</label>
      </node>
      <node id="42">
        <label>fog_vec4_x_y_z_w.vshinc</label>
      </node>
      <node id="43">
        <label>fog_vec4_xw.vshinc</label>
      </node>
      <node id="44">
        <label>fog_vec4_xy.vshinc</label>
      </node>
      <node id="45">
        <label>fog_vec4_xyz.vshinc</label>
      </node>
      <node id="46">
        <label>fog_vec4_xyzw.vshinc</label>
      </node>
      <node id="47">
        <label>fog_vec4_xz.vshinc</label>
      </node>
      <node id="48">
        <label>fog_vec4_xzw.vshinc</label>
      </node>
      <node id="36">
        <label>fog_vec4_y.vshinc</label>
      </node>
      <node id="49">
        <label>fog_vec4_yw.vshinc</label>
      </node>
      <node id="50">
        <label>fog_vec4_yz.vshinc</label>
      </node>
      <node id="51">
        <label>fog_vec4_yzw.vshinc</label>
      </node>
      <node id="37">
        <label>fog_vec4_z.vshinc</label>
      </node>
      <node id="52">
        <label>fog_vec4_zw.vshinc</label>
      </node>
      <node id="13">
        <label>functional</label>
      </node>
      <node id="29">
        <label>list</label>
      </node>
      <node id="25">
        <label>map</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="16">
        <label>nv2astate.h</label>
      </node>
      <node id="17">
        <label>nxdk_ext.h</label>
      </node>
      <node id="15">
        <label>pbkit/pbkit.h</label>
      </node>
      <node id="9">
        <label>printf/printf.h</label>
      </node>
      <node id="18">
        <label>pushbuffer.h</label>
      </node>
      <node id="26">
        <label>set</label>
      </node>
      <node id="32">
        <label>shaders/perspective_vertex_shader.h</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="19">
        <label>texture_format.h</label>
      </node>
      <node id="20">
        <label>texture_stage.h</label>
      </node>
      <node id="14">
        <label>thread</label>
      </node>
      <node id="30">
        <label>utility</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="21">
        <label>vertex_buffer.h</label>
      </node>
      <node id="7">
        <label>windows.h</label>
      </node>
      <node id="22">
        <label>xbox_math_types.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="d7/d99/fog__tests_8cpp_1a7eb2433dd9a71389e7fff8b355d47832" prot="public" static="no">
        <name>DEF_SHADER</name>
        <param><defname>shader</defname></param>
        <initializer>(shader), sizeof(shader)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="322" column="9" bodyfile="src/tests/fog_tests.cpp" bodystart="322" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a74bceaf497df30e956e14eea47c5c303" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float kFogStart</definition>
        <argsstring></argsstring>
        <name>kFogStart</name>
        <initializer>= 1.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="12" column="24" bodyfile="src/tests/fog_tests.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1ada872ed23770ec2c8a4e6336a6405fea" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float kFogEnd</definition>
        <argsstring></argsstring>
        <name>kFogEnd</name>
        <initializer>= 200.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="13" column="24" bodyfile="src/tests/fog_tests.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a2f729cfde4723f66a0df0b479e6fbaf6" prot="public" static="yes" mutable="no">
        <type>const FogTests::FogMode</type>
        <definition>const FogTests::FogMode kFogModes[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogModes</name>
        <initializer>= {
    FogTests::FOG_LINEAR,
    FogTests::FOG_EXP,
    FogTests::FOG_EXP2,
    FogTests::FOG_EXP_ABS,
    FogTests::FOG_EXP2_ABS,
    FogTests::FOG_LINEAR_ABS,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="16" column="32" bodyfile="src/tests/fog_tests.cpp" bodystart="16" bodyend="23"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a9c9c7da08d1878be87f5c82b1db043f1" prot="public" static="yes" mutable="no">
        <type>const FogTests::FogGenMode</type>
        <definition>const FogTests::FogGenMode kGenModes[]</definition>
        <argsstring>[]</argsstring>
        <name>kGenModes</name>
        <initializer>= {


    FogTests::FOG_GEN_PLANAR,


}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="25" column="35" bodyfile="src/tests/fog_tests.cpp" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1ae87a90d8696a8143b057649a483584f3" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kInfiniteFogCShader[]</definition>
        <argsstring>[]</argsstring>
        <name>kInfiniteFogCShader</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="239" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a6a30e88cadee9c59a83e1286a8ebaae7" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4Unset[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4Unset</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="259" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="259" bodyend="261"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a4071999ddaef1209197d889c5b9a0c12" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4X[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4X</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="264" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1af189189c46490ee8902c841378a5e115" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4Y[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4Y</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="267" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="267" bodyend="269"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1ab714821b82edaf7d4f076328105cb170" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4Z[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4Z</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="270" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a49b6f13f88c335b1d5d698eeb037dcea" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4W[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4W</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="273" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1af54957beef8ef7602c17d1109adf8940" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4W_X[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4W_X</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="276" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="276" bodyend="278"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a0eb4dd465dbb5ba79d4be180306d6b33" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4W_Y[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4W_Y</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="279" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1adffc2c983fe9e38d657d343c55e0cecc" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4W_Z_Y_X[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4W_Z_Y_X</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="282" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a6dfcc0d58af01eb123a9b5c9f7a5b36e" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4X_Y_Z_W[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4X_Y_Z_W</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="285" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="285" bodyend="287"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1adea4b092d6add1093f8c6779327547b2" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4XW[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4XW</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="290" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="290" bodyend="292"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1ad0e52c0074d760550188b29e34630209" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4XY[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4XY</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="293" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="293" bodyend="295"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a2cda28cd20dad0bc4877aab63f97f545" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4XYZ[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4XYZ</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="296" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="296" bodyend="298"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1ae612aa0622363f86baa734cfc734d968" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4XYZW[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4XYZW</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="299" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a041d6a5a4cc25a054a156ac4c0236967" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4XZ[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4XZ</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="302" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="302" bodyend="304"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1aaf8a46f87b10c1a28aa7dee58be4fc50" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4XZW[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4XZW</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="305" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="305" bodyend="307"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a5ba0aa038299a3d2f1c1a5e7b478b9f5" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4YW[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4YW</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="308" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="308" bodyend="310"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a530f5ef3d10a3748f5315c06e0891945" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4YZ[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4YZ</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="311" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="311" bodyend="313"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a4b9ab8c6e1e6241f55e5ccd3a9227cdc" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4YZW[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4YZW</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="314" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="314" bodyend="316"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1a85ccbeb0541a219a4dfee349dd65ac7e" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t kFogVec4ZW[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogVec4ZW</name>
        <initializer>= {

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="317" column="23" bodyfile="src/tests/fog_tests.cpp" bodystart="317" bodyend="319"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1aa152ccefba58f317cec70fdc07a1056a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="d5/d65/structFogVec4CoordTests_1_1TestConfig" kindref="compound">FogVec4CoordTests::TestConfig</ref></type>
        <definition>const FogVec4CoordTests::TestConfig kFogWTests[]</definition>
        <argsstring>[]</argsstring>
        <name>kFogWTests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="325" column="44" bodyfile="src/tests/fog_tests.cpp" bodystart="325" bodyend="380"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d99/fog__tests_8cpp_1aa083966f60b84c6509a9163887b5f607" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const char</type>
        <definition>constexpr const char kUnsetTest[]</definition>
        <argsstring>[]</argsstring>
        <name>kUnsetTest</name>
        <initializer>= &quot;CoordNotSet&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/fog_tests.cpp" line="385" column="29" bodyfile="src/tests/fog_tests.cpp" bodystart="385" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;fog_tests.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbkit/pbkit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pbkit_ext.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shaders/perspective_vertex_shader_no_lighting.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_host.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vertex_buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kFogStart<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kFogEnd<sp/>=<sp/>200.0f;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FogTests::FogMode<sp/>kFogModes[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>FogTests::FOG_LINEAR,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>FogTests::FOG_EXP,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>FogTests::FOG_EXP2,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>FogTests::FOG_EXP_ABS,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>FogTests::FOG_EXP2_ABS,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>FogTests::FOG_LINEAR_ABS,</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FogTests::FogGenMode<sp/>kGenModes[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>FogTests::FOG_GEN_SPEC_ALPHA,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>FogTests::FOG_GEN_RADIAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>FogTests::FOG_GEN_PLANAR,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>FogTests::FOG_GEN_ABS_PLANAR,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>FogTests::FOG_GEN_FOG_X,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">FogTests::FogTests(<ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref>&amp;<sp/>host,<sp/>std::string<sp/>output_dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Config&amp;<sp/>config,<sp/>std::string<sp/>suite_name)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="d2/d3e/classTestSuite" kindref="compound">TestSuite</ref>(host,<sp/>std::move(output_dir),<sp/>std::move(suite_name),<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fog_mode<sp/>:<sp/>kFogModes)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gen_mode<sp/>:<sp/>kGenModes)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alpha<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>actually<sp/>have<sp/>any<sp/>effect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>alpha<sp/>:<sp/>{0xFF})<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>test_name<sp/>=<sp/>MakeTestName(fog_mode,<sp/>gen_mode,<sp/>alpha);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>fog_mode,<sp/>gen_mode,<sp/>alpha]()<sp/>{<sp/>Test(fog_mode,<sp/>gen_mode,<sp/>alpha);<sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tests_[test_name]<sp/>=<sp/>test;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/de7/classFogTests_1a4f390d26c30a3144534cb013c4dce93e" kindref="member">FogTests::Initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="d2/d3e/classTestSuite_1a1c4756eb905d6d4d35e1630107396c38" kindref="member">TestSuite::Initialize</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>host_.SetVertexShaderProgram(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>CreateGeometry();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>host_.SetXDKDefaultViewportAndFixedFunctionMatrices();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner0(TestHost::SRC_FOG,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TestHost::SRC_DIFFUSE,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TestHost::SRC_FOG,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner1Just(TestHost::SRC_DIFFUSE,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>Pushbuffer::Begin();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_FOG_ENABLE,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>Pushbuffer::End();</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/de7/classFogTests_1ab99e22734a0abdfd5e2549ec7089ab59" kindref="member">FogTests::Deinitialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>vertex_buffer_.reset();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="d2/d3e/classTestSuite_1a28742e0a5438926d43d0814c9694836f" kindref="member">TestSuite::Deinitialize</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FogTests::CreateGeometry()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kNumTriangles<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>vertex_buffer_<sp/>=<sp/>host_.AllocateVertexBuffer(kNumTriangles<sp/>*<sp/>3);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>Color<sp/>diffuse<sp/>=<sp/>{1.0,<sp/>1.0,<sp/>1.0,<sp/>1.0};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>one[]<sp/>=<sp/>{-1.5f,<sp/>-1.5f,<sp/>0.0f};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>two[]<sp/>=<sp/>{-2.5f,<sp/>0.6f,<sp/>0.0f};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>three[]<sp/>=<sp/>{-0.5f,<sp/>0.6f,<sp/>0.0f};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>vertex_buffer_-&gt;DefineTriangle(index++,<sp/>one,<sp/>two,<sp/>three,<sp/>diffuse,<sp/>diffuse,<sp/>diffuse);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>one[]<sp/>=<sp/>{0.0f,<sp/>-1.5f,<sp/>5.0f};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>two[]<sp/>=<sp/>{-1.0f,<sp/>0.75f,<sp/>10.0f};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>three[]<sp/>=<sp/>{2.0f,<sp/>0.75f,<sp/>20.0f};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>vertex_buffer_-&gt;DefineTriangle(index++,<sp/>one,<sp/>two,<sp/>three,<sp/>diffuse,<sp/>diffuse,<sp/>diffuse);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>one[]<sp/>=<sp/>{5.0f,<sp/>-2.0f,<sp/>30};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>two[]<sp/>=<sp/>{3.0f,<sp/>2.0f,<sp/>40};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>three[]<sp/>=<sp/>{12.0f,<sp/>2.0f,<sp/>70};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>vertex_buffer_-&gt;DefineTriangle(index++,<sp/>one,<sp/>two,<sp/>three,<sp/>diffuse,<sp/>diffuse,<sp/>diffuse);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>one[]<sp/>=<sp/>{20.0f,<sp/>-10.0f,<sp/>50};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>two[]<sp/>=<sp/>{12.0f,<sp/>10.0f,<sp/>125};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>three[]<sp/>=<sp/>{80.0f,<sp/>10.0f,<sp/>200};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>vertex_buffer_-&gt;DefineTriangle(index++,<sp/>one,<sp/>two,<sp/>three,<sp/>diffuse,<sp/>diffuse,<sp/>diffuse);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FogTests::Test(FogTests::FogMode<sp/>fog_mode,<sp/>FogTests::FogGenMode<sp/>gen_mode,<sp/>uint32_t<sp/>fog_alpha)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://docs.microsoft.com/en-us/previous-versions/windows/desktop/bb324452(v=vs.85)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>https://docs.microsoft.com/en-us/previous-versions/windows/desktop/bb322857(v=vs.85)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>kBackgroundColor<sp/>=<sp/>0xFF303030;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>host_.PrepareDraw(kBackgroundColor);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>Pushbuffer::Begin();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Fog<sp/>color<sp/>is<sp/>ABGR<sp/>and<sp/>not<sp/>ARGB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_FOG_COLOR,<sp/>0x7F2030<sp/>+<sp/>(fog_alpha<sp/>&lt;&lt;<sp/>24));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_FOG_GEN_MODE,<sp/>gen_mode);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_FOG_MODE,<sp/>fog_mode);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Linear<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Parameterize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Right<sp/>now<sp/>these<sp/>are<sp/>just<sp/>the<sp/>near<sp/>and<sp/>far<sp/>planes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Exponential<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fog_density<sp/>=<sp/>0.025f;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>LN_256<sp/>=<sp/>5.5452f;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>SQRT_LN_256<sp/>=<sp/>2.3548f;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bias_param<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>multiplier_param<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(fog_mode)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_LINEAR:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_LINEAR_ABS:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplier_param<sp/>=<sp/>-1.0f<sp/>/<sp/>(kFogEnd<sp/>-<sp/>kFogStart);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias_param<sp/>=<sp/>1.0f<sp/>+<sp/>-kFogEnd<sp/>*<sp/>multiplier_param;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_EXP:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_EXP_ABS:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias_param<sp/>=<sp/>1.5f;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplier_param<sp/>=<sp/>-fog_density<sp/>/<sp/>(2.0f<sp/>*<sp/>LN_256);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_EXP2:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_EXP2_ABS:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias_param<sp/>=<sp/>1.5f;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multiplier_param<sp/>=<sp/>-fog_density<sp/>/<sp/>(2.0f<sp/>*<sp/>SQRT_LN_256);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Figure<sp/>out<sp/>what<sp/>the<sp/>third<sp/>parameter<sp/>is.<sp/>In<sp/>all<sp/>examples<sp/>I&apos;ve<sp/>seen<sp/>it&apos;s<sp/>always<sp/>been<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>Pushbuffer::PushF(NV097_SET_FOG_PARAMS,<sp/>bias_param,<sp/>multiplier_param,<sp/>0.0f);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>Pushbuffer::End();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>host_.DrawArrays(host_.POSITION<sp/>|<sp/>host_.DIFFUSE);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>std::string<sp/>name<sp/>=<sp/>MakeTestName(fog_mode,<sp/>gen_mode,<sp/>fog_alpha);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>pb_draw_text_screen();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>host_.<ref refid="d6/d80/classTestHost_1a8e1914535ca75d5b94cfb3cf28f52b17" kindref="member">FinishDraw</ref>(allow_saving_,<sp/>output_dir_,<sp/>suite_name_,<sp/>name);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">std::string<sp/>FogTests::MakeTestName(FogTests::FogMode<sp/>fog_mode,<sp/>FogTests::FogGenMode<sp/>gen_mode,<sp/>uint32_t<sp/>fog_alpha)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>std::string<sp/>ret;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[8]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(buf,<sp/>7,<sp/></highlight><highlight class="stringliteral">&quot;A%02X&quot;</highlight><highlight class="normal">,<sp/>fog_alpha);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(fog_mode)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_LINEAR:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-linear&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_EXP:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-exp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_EXP2:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-exp2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_EXP_ABS:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-exp_abs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_EXP2_ABS:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-exp2_abs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_LINEAR_ABS:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-linear_abs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(gen_mode)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_GEN_SPEC_ALPHA:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-spec_alpha&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_GEN_RADIAL:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-radial&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_GEN_PLANAR:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-planar&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_GEN_ABS_PLANAR:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-abs_planar&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FOG_GEN_FOG_X:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-fog_x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(ret);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">FogCustomShaderTests::FogCustomShaderTests(<ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref>&amp;<sp/>host,<sp/>std::string<sp/>output_dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Config&amp;<sp/>config,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>suite_name)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="d6/de7/classFogTests" kindref="compound">FogTests</ref>(host,<sp/>std::move(output_dir),<sp/>config,<sp/>std::move(suite_name))<sp/>{}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d25/classFogCustomShaderTests_1a1a5a33c00a39c9310552d8371b2bd6cd" kindref="member">FogCustomShaderTests::Initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="d6/de7/classFogTests_1a4f390d26c30a3144534cb013c4dce93e" kindref="member">FogTests::Initialize</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shader<sp/>=</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;PerspectiveVertexShaderNoLighting&gt;(host_.GetFramebufferWidth(),<sp/>host_.GetFramebufferHeight());</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>shader-&gt;SetNear(kFogStart);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>shader-&gt;SetFar(kFogEnd);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>vector_t<sp/>camera_position{0.0f,<sp/>0.0f,<sp/>-7.0f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>vector_t<sp/>look_at{0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>shader-&gt;LookAt(camera_position,<sp/>look_at);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>host_.SetVertexShaderProgram(shader);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FogInfiniteFogCoordinateTests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kInfiniteFogCShader[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_infinite_fogc_test.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">FogInfiniteFogCoordinateTests::FogInfiniteFogCoordinateTests(<ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref>&amp;<sp/>host,<sp/>std::string<sp/>output_dir,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Config&amp;<sp/>config)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="dc/d25/classFogCustomShaderTests" kindref="compound">FogCustomShaderTests</ref>(host,<sp/>std::move(output_dir),<sp/>config,<sp/></highlight><highlight class="stringliteral">&quot;Fog<sp/>inf<sp/>coord&quot;</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d53/classFogInfiniteFogCoordinateTests_1af8a953821c67a553e6d799afe254611c" kindref="member">FogInfiniteFogCoordinateTests::Initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><ref refid="dc/d25/classFogCustomShaderTests_1a1a5a33c00a39c9310552d8371b2bd6cd" kindref="member">FogCustomShaderTests::Initialize</ref>();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shader<sp/>=<sp/>host_.GetShaderProgram();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>shader-&gt;SetShader(kInfiniteFogCShader,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(kInfiniteFogCShader));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>host_.SetVertexShaderProgram(shader);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FogVec4CoordTests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4Unset[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_unset.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Individual<sp/>setters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4X[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_x.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4Y[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_y.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4Z[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_z.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4W[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_w.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">};</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4W_X[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_w_x.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4W_Y[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_w_y.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4W_Z_Y_X[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_w_z_y_x.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">};</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4X_Y_Z_W[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_x_y_z_w.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bulk<sp/>setters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4XW[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_xw.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4XY[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_xy.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4XYZ[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_xyz.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4XYZW[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_xyzw.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4XZ[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_xz.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">};</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4XZW[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_xzw.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">};</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4YW[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_yw.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4YZ[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_yz.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4YZW[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_yzw.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">};</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kFogVec4ZW[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fog_vec4_zw.vshinc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal">};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEF_SHADER(shader)<sp/>(shader),<sp/>sizeof(shader)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d65/structFogVec4CoordTests_1_1TestConfig" kindref="compound">FogVec4CoordTests::TestConfig</ref><sp/>kFogWTests[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;W&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4W),<sp/>{0.0f,<sp/>0.25f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;W&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4W),<sp/>{0.5f,<sp/>0.5f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;W&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4W),<sp/>{1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.5f}},</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;W&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4W),<sp/>{0.3f,<sp/>0.3f,<sp/>0.3f,<sp/>1.0f}},</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;W_X&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4W_X),<sp/>{0.25f,<sp/>0.0f,<sp/>0.0f,<sp/>0.5f}},</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;W_X&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4W_X),<sp/>{0.65f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;W_Y&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4W_Y),<sp/>{1.0f,<sp/>0.0f,<sp/>1.00f,<sp/>0.75f}},</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;W_Y&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4W_Y),<sp/>{0.0f,<sp/>0.75f,<sp/>0.75f,<sp/>0.25f}},</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;W_Z_Y_X&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4W_Z_Y_X),<sp/>{0.25f,<sp/>0.5f,<sp/>0.75f,<sp/>1.0f}},</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;W_Z_Y_X&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4W_Z_Y_X),<sp/>{1.0f,<sp/>0.75f,<sp/>0.5f,<sp/>0.25f}},</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4X),<sp/>{0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4X),<sp/>{0.9f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;X_Y_Z_W&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4X_Y_Z_W),<sp/>{1.0f,<sp/>0.25f,<sp/>0.75f,<sp/>0.5f}},</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;X_Y_Z_W&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4X_Y_Z_W),<sp/>{0.0f,<sp/>0.33f,<sp/>0.66f,<sp/>0.9f}},</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4Y),<sp/>{0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4Y),<sp/>{0.0f,<sp/>0.1f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4Y),<sp/>{0.0f,<sp/>0.6f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4Z),<sp/>{0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4Z),<sp/>{0.0f,<sp/>0.0f,<sp/>0.2f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4Z),<sp/>{0.0f,<sp/>0.0f,<sp/>0.8f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;XW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XW),<sp/>{0.25f,<sp/>0.0f,<sp/>0.0f,<sp/>0.5f}},</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;XW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XW),<sp/>{0.65f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;XY&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XY),<sp/>{0.25f,<sp/>0.5f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;XY&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XY),<sp/>{0.65f,<sp/>0.75f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;XYZ&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XYZ),<sp/>{0.25f,<sp/>0.5f,<sp/>0.75f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;XYZ&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XYZ),<sp/>{0.65f,<sp/>0.75f,<sp/>0.33f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;XYZW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XYZW),<sp/>{0.25f,<sp/>0.50f,<sp/>0.75f,<sp/>1.0f}},</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;XYZW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XYZW),<sp/>{0.65f,<sp/>0.75f,<sp/>0.33f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;XZ&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XZ),<sp/>{0.25f,<sp/>0.0f,<sp/>0.75f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;XZ&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XZ),<sp/>{0.65f,<sp/>0.0f,<sp/>0.33f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;XZW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XZW),<sp/>{0.25f,<sp/>0.0f,<sp/>0.75f,<sp/>1.0f}},</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;XZW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XZW),<sp/>{0.65f,<sp/>0.0f,<sp/>0.33f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;YW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4YW),<sp/>{0.0f,<sp/>0.50f,<sp/>0.0f,<sp/>1.0f}},</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;YW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4YW),<sp/>{0.0f,<sp/>0.75f,<sp/>0.0f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;YZ&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4YZ),<sp/>{0.00f,<sp/>0.50f,<sp/>0.75f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;YZ&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4YZ),<sp/>{0.00f,<sp/>0.75f,<sp/>0.33f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;YZW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4YZW),<sp/>{0.0f,<sp/>0.50f,<sp/>0.75f,<sp/>1.0f}},</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;YZW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4YZW),<sp/>{0.0f,<sp/>0.75f,<sp/>0.33f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ZW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4ZW),<sp/>{0.0f,<sp/>0.0f,<sp/>0.75f,<sp/>1.0f}},</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ZW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4ZW),<sp/>{0.0f,<sp/>0.0f,<sp/>0.33f,<sp/>0.0f}},</highlight></codeline>
<codeline lineno="380"><highlight class="normal">};</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>DEF_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>kUnsetTest[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CoordNotSet&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">FogVec4CoordTests::FogVec4CoordTests(<ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref>&amp;<sp/>host,<sp/>std::string<sp/>output_dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Config&amp;<sp/>config)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="dc/d25/classFogCustomShaderTests" kindref="compound">FogCustomShaderTests</ref>(host,<sp/>std::move(output_dir),<sp/>config,<sp/></highlight><highlight class="stringliteral">&quot;Fog<sp/>coord<sp/>vec4&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>tests_.clear();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>config<sp/>:<sp/>kFogWTests)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>MakeTestName(config);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>tests_[name]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;config]()<sp/>{<sp/>Test(config);<sp/>};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>tests_[kUnsetTest]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{<sp/>TestUnset();<sp/>};</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d92/classFogVec4CoordTests_1a61a17bb013effdf18dfb91c0e0f9fcd5" kindref="member">FogVec4CoordTests::Initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><ref refid="dc/d25/classFogCustomShaderTests_1a1a5a33c00a39c9310552d8371b2bd6cd" kindref="member">FogCustomShaderTests::Initialize</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>full<sp/>opacity.<sp/>This<sp/>shouldn&apos;t<sp/>matter<sp/>in<sp/>practice<sp/>since<sp/>the<sp/>fog<sp/>color&apos;s<sp/>alpha<sp/>is<sp/>set<sp/>based<sp/>on<sp/>the<sp/>calculated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fog<sp/>factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner1Just(TestHost::SRC_ZERO,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>Pushbuffer::Begin();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Fog<sp/>color<sp/>is<sp/>ABGR<sp/>and<sp/>not<sp/>ARGB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_FOG_COLOR,<sp/>0x00FF00);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gen<sp/>mode<sp/>does<sp/>not<sp/>seem<sp/>to<sp/>matter<sp/>when<sp/>using<sp/>a<sp/>vertex<sp/>shader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_FOG_GEN_MODE,<sp/>FOG_GEN_SPEC_ALPHA);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_FOG_MODE,<sp/>FOG_LINEAR);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>final<sp/>fog<sp/>calculation<sp/>should<sp/>be<sp/>exactly<sp/>the<sp/>output<sp/>of<sp/>the<sp/>shader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>Pushbuffer::PushF(NV097_SET_FOG_PARAMS,<sp/>1.0f,<sp/>1.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>Pushbuffer::End();</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FogVec4CoordTests::Test(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d00/structTestConfig" kindref="compound">TestConfig</ref>&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>SetShader(config);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner0(TestHost::SRC_FOG,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TestHost::SRC_FOG,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TestHost::SRC_DIFFUSE);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>host_.PrepareDraw(0xFF303030);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>host_.DrawArrays(host_.POSITION<sp/>|<sp/>host_.DIFFUSE);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>std::string<sp/>name<sp/>=<sp/>MakeTestName(config);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>pb_draw_text_screen();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>host_.<ref refid="d6/d80/classTestHost_1a8e1914535ca75d5b94cfb3cf28f52b17" kindref="member">FinishDraw</ref>(allow_saving_,<sp/>output_dir_,<sp/>suite_name_,<sp/>name);</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FogVec4CoordTests::TestUnset()<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shader<sp/>=<sp/>host_.GetShaderProgram();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>with<sp/>the<sp/>fog<sp/>coordinates<sp/>explicitly<sp/>set<sp/>to<sp/>put<sp/>the<sp/>hardware<sp/>into<sp/>a<sp/>consistent<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>done<sp/>repeatedly<sp/>to<sp/>fix<sp/>an<sp/>apparent<sp/>issue<sp/>with<sp/>parallelism,<sp/>drawing<sp/>only<sp/>once<sp/>can<sp/>lead<sp/>to<sp/>a<sp/>situation<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>or<sp/>more<sp/>of<sp/>the<sp/>vertices<sp/>in<sp/>the<sp/>&quot;unset&quot;<sp/>draw<sp/>case<sp/>below<sp/>still<sp/>have<sp/>arbitrary<sp/>values<sp/>from<sp/>previous<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>are<sp/>non-hermetic,<sp/>leading<sp/>to<sp/>test<sp/>results<sp/>that<sp/>are<sp/>dependent<sp/>on<sp/>previous<sp/>draws.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>expected<sp/>that<sp/>only<sp/>the<sp/>X<sp/>value<sp/>will<sp/>have<sp/>an<sp/>effect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>SetShader({</highlight><highlight class="stringliteral">&quot;XYZW&quot;</highlight><highlight class="normal">,<sp/>DEF_SHADER(kFogVec4XYZW),<sp/>{0.25f,<sp/>0.95f,<sp/>0.5f,<sp/>0.75f}});</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.PrepareDraw(0xFFFF00FF);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.DrawArrays(host_.POSITION<sp/>|<sp/>host_.DIFFUSE);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>second<sp/>time,<sp/>leaving<sp/>the<sp/>coordinates<sp/>alone.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>shader-&gt;SetShader(kFogVec4Unset,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(kFogVec4Unset));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>host_.SetVertexShaderProgram(shader);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>host_.PrepareDraw(0xFF341010);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>host_.SetFinalCombinerFactorC0(0.5f,<sp/>0.0f,<sp/>0.75f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner0(TestHost::SRC_FOG,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TestHost::SRC_C0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TestHost::SRC_DIFFUSE);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>host_.DrawArrays(host_.POSITION<sp/>|<sp/>host_.DIFFUSE);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>kUnsetTest);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>pb_draw_text_screen();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>host_.<ref refid="d6/d80/classTestHost_1a8e1914535ca75d5b94cfb3cf28f52b17" kindref="member">FinishDraw</ref>(allow_saving_,<sp/>output_dir_,<sp/>suite_name_,<sp/>kUnsetTest);</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FogVec4CoordTests::SetShader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d65/structFogVec4CoordTests_1_1TestConfig" kindref="compound">FogVec4CoordTests::TestConfig</ref>&amp;<sp/>config)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shader<sp/>=<sp/>host_.GetShaderProgram();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>shader-&gt;SetShader(config.shader,<sp/>config.shader_size);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>120<sp/>-<sp/>PerspectiveVertexShader::kShaderUserConstantOffset;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>c[120].xyzw<sp/>=<sp/>fog<sp/>test<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>shader-&gt;SetUniformF(index++,<sp/>config.fog[0],<sp/>config.fog[1],<sp/>config.fog[2],<sp/>config.fog[3]);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>#one_and_zero<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>shader-&gt;SetUniformF(index++,<sp/>1.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>host_.SetVertexShaderProgram(shader);</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">std::string<sp/>FogVec4CoordTests::MakeTestName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d00/structTestConfig" kindref="compound">TestConfig</ref>&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[40]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/>39,<sp/></highlight><highlight class="stringliteral">&quot;%s-%.2f_%.2f_%.2f_%.2f&quot;</highlight><highlight class="normal">,<sp/>config.prefix,<sp/>config.fog[0],<sp/>config.fog[1],<sp/>config.fog[2],</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.fog[3]);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/tests/fog_tests.cpp"/>
  </compounddef>
</doxygen>
