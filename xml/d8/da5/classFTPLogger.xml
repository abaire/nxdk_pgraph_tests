<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d8/da5/classFTPLogger" kind="class" language="C++" prot="public">
    <compoundname>FTPLogger</compoundname>
    <includes refid="d0/dad/ftp__logger_8h" local="no">ftp_logger.h</includes>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d8/da5/classFTPLogger_1a58e64c804b6f1c70347397beea3a7650" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t FTPLogger::kDefaultReconnectRetries</definition>
        <argsstring></argsstring>
        <name>kDefaultReconnectRetries</name>
        <qualifiedname>FTPLogger::kDefaultReconnectRetries</qualifiedname>
        <initializer>= 4</initializer>
        <briefdescription>
<para>The number of times the logger will try to reconnect to the FTP server. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="17" column="29" bodyfile="src/ftp_logger.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da5/classFTPLogger_1a4f293996441c7f00f8db4e3a91654b35" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t FTPLogger::kDefaultTimeoutMilliseconds</definition>
        <argsstring></argsstring>
        <name>kDefaultTimeoutMilliseconds</name>
        <qualifiedname>FTPLogger::kDefaultTimeoutMilliseconds</qualifiedname>
        <initializer>= 250</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="18" column="29" bodyfile="src/ftp_logger.h" bodystart="18" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/da5/classFTPLogger_1a409448196e2a0f5fec5cc0b59fcc7cd1" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t FTPLogger::ftp_server_ip_</definition>
        <argsstring></argsstring>
        <name>ftp_server_ip_</name>
        <qualifiedname>FTPLogger::ftp_server_ip_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="65" column="12" bodyfile="src/ftp_logger.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da5/classFTPLogger_1a0a96c8549f60fe7ca0f7dadc8b2e0a0d" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t FTPLogger::ftp_server_port_</definition>
        <argsstring></argsstring>
        <name>ftp_server_port_</name>
        <qualifiedname>FTPLogger::ftp_server_port_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="66" column="12" bodyfile="src/ftp_logger.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da5/classFTPLogger_1ad545c95e2ced3c954dfe3b9784128230" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string FTPLogger::ftp_user_</definition>
        <argsstring></argsstring>
        <name>ftp_user_</name>
        <qualifiedname>FTPLogger::ftp_user_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="67" column="15" bodyfile="src/ftp_logger.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da5/classFTPLogger_1a51034fc55d8b0d8bf6a543e351764acb" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string FTPLogger::ftp_password_</definition>
        <argsstring></argsstring>
        <name>ftp_password_</name>
        <qualifiedname>FTPLogger::ftp_password_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="68" column="15" bodyfile="src/ftp_logger.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da5/classFTPLogger_1a4993995aedb9a3321b91ccaabafa3b0e" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t FTPLogger::ftp_timeout_milliseconds_</definition>
        <argsstring></argsstring>
        <name>ftp_timeout_milliseconds_</name>
        <qualifiedname>FTPLogger::ftp_timeout_milliseconds_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="69" column="12" bodyfile="src/ftp_logger.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da5/classFTPLogger_1adf4d343734bcfd0c1e7c20759e528c0c" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t FTPLogger::reconnect_retries_</definition>
        <argsstring></argsstring>
        <name>reconnect_retries_</name>
        <qualifiedname>FTPLogger::reconnect_retries_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="70" column="12" bodyfile="src/ftp_logger.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da5/classFTPLogger_1adba48db506b746cb9c8904525917abff" prot="private" static="no" mutable="no">
        <type>FTPClient *</type>
        <definition>FTPClient* FTPLogger::ftp_client_</definition>
        <argsstring></argsstring>
        <name>ftp_client_</name>
        <qualifiedname>FTPLogger::ftp_client_</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="72" column="13" bodyfile="src/ftp_logger.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da5/classFTPLogger_1a85febc41d29493bcaba9b73a6dfced05" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; FTPLogger::error_log_</definition>
        <argsstring></argsstring>
        <name>error_log_</name>
        <qualifiedname>FTPLogger::error_log_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="74" column="15" bodyfile="src/ftp_logger.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da5/classFTPLogger_1a0319740f5451b26d2ca31f027c3bddee" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;std::string, std::string&gt; &gt; FTPLogger::send_file_queue_</definition>
        <argsstring></argsstring>
        <name>send_file_queue_</name>
        <qualifiedname>FTPLogger::send_file_queue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="75" column="15" bodyfile="src/ftp_logger.h" bodystart="75" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/da5/classFTPLogger_1a1f1c1b6736ad3aa61062b1ea2c0ae5c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FTPLogger::FTPLogger</definition>
        <argsstring>()=delete</argsstring>
        <name>FTPLogger</name>
        <qualifiedname>FTPLogger::FTPLogger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="21" column="3"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1a042633ff8504b30d6557625787b9d099" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FTPLogger::FTPLogger</definition>
        <argsstring>(uint32_t server_ip_host_ordered, uint16_t server_port_host_ordered, const std::string &amp;username, const std::string &amp;password, uint32_t timeout_milliseconds)</argsstring>
        <name>FTPLogger</name>
        <qualifiedname>FTPLogger::FTPLogger</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>server_ip_host_ordered</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_port_host_ordered</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>username</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>password</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_milliseconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="22" column="3" bodyfile="src/ftp_logger.h" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1adda9891c98bf96701c2af594d5b1bdc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FTPLogger::FTPLogger</definition>
        <argsstring>(uint32_t server_ip_host_ordered, uint16_t ftp_server_port_host_ordered, std::string username, std::string password, uint32_t timeout_milliseconds, uint32_t reconnect_retries)</argsstring>
        <name>FTPLogger</name>
        <qualifiedname>FTPLogger::FTPLogger</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>server_ip_host_ordered</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ftp_server_port_host_ordered</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>username</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>password</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_milliseconds</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reconnect_retries</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="26" column="3" bodyfile="src/ftp_logger.h" bodystart="26" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1ad7d5a58471fa54173fa0770d62076a22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FTPLogger::~FTPLogger</definition>
        <argsstring>()</argsstring>
        <name>~FTPLogger</name>
        <qualifiedname>FTPLogger::~FTPLogger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="35" column="3" bodyfile="src/ftp_logger.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1af8dda76423a9971c48595114916ca517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FTPLogger::Connect</definition>
        <argsstring>()</argsstring>
        <name>Connect</name>
        <qualifiedname>FTPLogger::Connect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="37" column="8" bodyfile="src/ftp_logger.cpp" bodystart="19" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1aab7ac0039dd5746e015243d2d64ff413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FTPLogger::Disconnect</definition>
        <argsstring>()</argsstring>
        <name>Disconnect</name>
        <qualifiedname>FTPLogger::Disconnect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="38" column="8" bodyfile="src/ftp_logger.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1aa4e830a0143a26929a4c187806328fc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FTPLogger::IsConnected</definition>
        <argsstring>() const</argsstring>
        <name>IsConnected</name>
        <qualifiedname>FTPLogger::IsConnected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="40" column="8" bodyfile="src/ftp_logger.cpp" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1a200bbc4ad7903b587f97754eaf9fc3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FTPLogger::WriteFile</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;content)</argsstring>
        <name>WriteFile</name>
        <qualifiedname>FTPLogger::WriteFile</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>content</declname>
        </param>
        <briefdescription>
<para>Truncate the remote file with the given name and set its content. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="43" column="8" bodyfile="src/ftp_logger.cpp" bodystart="75" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1a83d3560b4b95bf4f5c95a5456f334aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FTPLogger::AppendFile</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;content)</argsstring>
        <name>AppendFile</name>
        <qualifiedname>FTPLogger::AppendFile</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>content</declname>
        </param>
        <briefdescription>
<para>Append the given content to the remote file with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="45" column="8" bodyfile="src/ftp_logger.cpp" bodystart="103" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1ab982953b65c57f2b9ed6783abe6f8f96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FTPLogger::PutFile</definition>
        <argsstring>(const std::string &amp;local_filename, const std::string &amp;remote_filename=&quot;&quot;)</argsstring>
        <name>PutFile</name>
        <qualifiedname>FTPLogger::PutFile</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>local_filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>remote_filename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="47" column="8" bodyfile="src/ftp_logger.cpp" bodystart="131" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1a8884aaf5348151bcbf511c89e66f8ec3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FTPLogger::QueuePutFile</definition>
        <argsstring>(const std::string &amp;local_filename, const std::string &amp;remote_filename=&quot;&quot;)</argsstring>
        <name>QueuePutFile</name>
        <qualifiedname>FTPLogger::QueuePutFile</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>local_filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>remote_filename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="49" column="8" bodyfile="src/ftp_logger.h" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1ab08ab6f0de390dad461e6c69c8008182" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
        <definition>const std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt; FTPLogger::send_file_queue</definition>
        <argsstring>() const</argsstring>
        <name>send_file_queue</name>
        <qualifiedname>FTPLogger::send_file_queue</qualifiedname>
        <briefdescription>
<para>(Local path, Remote path) pairs that have been queued for sending. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="54" column="21" bodyfile="src/ftp_logger.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1aef0bcd9c70cea151a1aff4de4f9d56d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FTPLogger::ClearSendQueue</definition>
        <argsstring>()</argsstring>
        <name>ClearSendQueue</name>
        <qualifiedname>FTPLogger::ClearSendQueue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="56" column="8" bodyfile="src/ftp_logger.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1a6173fdacd868c151ac892dc53a483caa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt; &amp;</type>
        <definition>const std::vector&lt; std::string &gt; &amp; FTPLogger::error_log</definition>
        <argsstring>() const</argsstring>
        <name>error_log</name>
        <qualifiedname>FTPLogger::error_log</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="58" column="21" bodyfile="src/ftp_logger.h" bodystart="58" bodyend="58"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d8/da5/classFTPLogger_1a8af15f34f1c44b188f0de674cfc48427" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FTPLogger::ClearLog</definition>
        <argsstring>()</argsstring>
        <name>ClearLog</name>
        <qualifiedname>FTPLogger::ClearLog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="61" column="8" bodyfile="src/ftp_logger.cpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="d8/da5/classFTPLogger_1ac6a1910f3381b0a16e07cfecc568b775" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FTPLogger::LogError</definition>
        <argsstring>(std::string message)</argsstring>
        <name>LogError</name>
        <qualifiedname>FTPLogger::LogError</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ftp_logger.h" line="62" column="8" bodyfile="src/ftp_logger.cpp" bodystart="71" bodyend="71"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Handles sending log artifacts to an FTP server. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/ftp_logger.h" line="14" column="1" bodyfile="src/ftp_logger.h" bodystart="14" bodyend="76"/>
    <listofallmembers>
      <member refid="d8/da5/classFTPLogger_1a83d3560b4b95bf4f5c95a5456f334aeb" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>AppendFile</name></member>
      <member refid="d8/da5/classFTPLogger_1a8af15f34f1c44b188f0de674cfc48427" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>ClearLog</name></member>
      <member refid="d8/da5/classFTPLogger_1aef0bcd9c70cea151a1aff4de4f9d56d2" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>ClearSendQueue</name></member>
      <member refid="d8/da5/classFTPLogger_1af8dda76423a9971c48595114916ca517" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>Connect</name></member>
      <member refid="d8/da5/classFTPLogger_1aab7ac0039dd5746e015243d2d64ff413" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>Disconnect</name></member>
      <member refid="d8/da5/classFTPLogger_1a6173fdacd868c151ac892dc53a483caa" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>error_log</name></member>
      <member refid="d8/da5/classFTPLogger_1a85febc41d29493bcaba9b73a6dfced05" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>error_log_</name></member>
      <member refid="d8/da5/classFTPLogger_1adba48db506b746cb9c8904525917abff" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>ftp_client_</name></member>
      <member refid="d8/da5/classFTPLogger_1a51034fc55d8b0d8bf6a543e351764acb" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>ftp_password_</name></member>
      <member refid="d8/da5/classFTPLogger_1a409448196e2a0f5fec5cc0b59fcc7cd1" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>ftp_server_ip_</name></member>
      <member refid="d8/da5/classFTPLogger_1a0a96c8549f60fe7ca0f7dadc8b2e0a0d" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>ftp_server_port_</name></member>
      <member refid="d8/da5/classFTPLogger_1a4993995aedb9a3321b91ccaabafa3b0e" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>ftp_timeout_milliseconds_</name></member>
      <member refid="d8/da5/classFTPLogger_1ad545c95e2ced3c954dfe3b9784128230" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>ftp_user_</name></member>
      <member refid="d8/da5/classFTPLogger_1a1f1c1b6736ad3aa61062b1ea2c0ae5c0" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>FTPLogger</name></member>
      <member refid="d8/da5/classFTPLogger_1a042633ff8504b30d6557625787b9d099" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>FTPLogger</name></member>
      <member refid="d8/da5/classFTPLogger_1adda9891c98bf96701c2af594d5b1bdc7" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>FTPLogger</name></member>
      <member refid="d8/da5/classFTPLogger_1aa4e830a0143a26929a4c187806328fc9" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>IsConnected</name></member>
      <member refid="d8/da5/classFTPLogger_1a58e64c804b6f1c70347397beea3a7650" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>kDefaultReconnectRetries</name></member>
      <member refid="d8/da5/classFTPLogger_1a4f293996441c7f00f8db4e3a91654b35" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>kDefaultTimeoutMilliseconds</name></member>
      <member refid="d8/da5/classFTPLogger_1ac6a1910f3381b0a16e07cfecc568b775" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>LogError</name></member>
      <member refid="d8/da5/classFTPLogger_1ab982953b65c57f2b9ed6783abe6f8f96" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>PutFile</name></member>
      <member refid="d8/da5/classFTPLogger_1a8884aaf5348151bcbf511c89e66f8ec3" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>QueuePutFile</name></member>
      <member refid="d8/da5/classFTPLogger_1adf4d343734bcfd0c1e7c20759e528c0c" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>reconnect_retries_</name></member>
      <member refid="d8/da5/classFTPLogger_1ab08ab6f0de390dad461e6c69c8008182" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>send_file_queue</name></member>
      <member refid="d8/da5/classFTPLogger_1a0319740f5451b26d2ca31f027c3bddee" prot="private" virt="non-virtual"><scope>FTPLogger</scope><name>send_file_queue_</name></member>
      <member refid="d8/da5/classFTPLogger_1a200bbc4ad7903b587f97754eaf9fc3b1" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>WriteFile</name></member>
      <member refid="d8/da5/classFTPLogger_1ad7d5a58471fa54173fa0770d62076a22" prot="public" virt="non-virtual"><scope>FTPLogger</scope><name>~FTPLogger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
