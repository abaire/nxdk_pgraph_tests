<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d8/da7/depth__format__fixed__function__tests_8cpp" kind="file" language="C++">
    <compoundname>depth_format_fixed_function_tests.cpp</compoundname>
    <includes refid="d2/d0d/depth__format__fixed__function__tests_8h" local="yes">depth_format_fixed_function_tests.h</includes>
    <includes local="no">pbkit/pbkit.h</includes>
    <includes refid="d3/dc0/debug__output_8h" local="yes">debug_output.h</includes>
    <includes local="yes">nxdk_ext.h</includes>
    <includes refid="d7/d31/pbkit__ext_8h" local="yes">pbkit_ext.h</includes>
    <includes local="yes">shaders/passthrough_vertex_shader.h</includes>
    <includes refid="df/d43/test__host_8h" local="yes">test_host.h</includes>
    <includes local="yes">vertex_buffer.h</includes>
    <incdepgraph>
      <node id="19">
        <label>debug_output.h</label>
        <link refid="d3/dc0/debug__output_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ftp_logger.h</label>
        <link refid="d0/dad/ftp__logger_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>pbkit_ext.h</label>
        <link refid="d7/d31/pbkit__ext_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>pgraph_diff_token.h</label>
        <link refid="d3/d11/pgraph__diff__token_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>test_host.h</label>
        <link refid="df/d43/test__host_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/tests/depth_format_fixed_function_tests.cpp</label>
        <link refid="d8/da7/depth__format__fixed__function__tests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>depth_format_fixed_function_tests.h</label>
        <link refid="d2/d0d/depth__format__fixed__function__tests_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>test_suite.h</label>
        <link refid="d6/d7a/test__suite_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>atomic</label>
      </node>
      <node id="12">
        <label>chrono</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="17">
        <label>list</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="25">
        <label>nv2astate.h</label>
      </node>
      <node id="22">
        <label>nxdk_ext.h</label>
      </node>
      <node id="18">
        <label>pbkit/pbkit.h</label>
      </node>
      <node id="21">
        <label>printf/printf.h</label>
      </node>
      <node id="26">
        <label>pushbuffer.h</label>
      </node>
      <node id="14">
        <label>set</label>
      </node>
      <node id="23">
        <label>shaders/passthrough_vertex_shader.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="27">
        <label>texture_format.h</label>
      </node>
      <node id="28">
        <label>texture_stage.h</label>
      </node>
      <node id="10">
        <label>thread</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="29">
        <label>vertex_buffer.h</label>
      </node>
      <node id="20">
        <label>windows.h</label>
      </node>
      <node id="30">
        <label>xbox_math_types.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="d8/da7/depth__format__fixed__function__tests_8cpp_1ae144dbbd8dc7a54c14f032b8d8efed60" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t kF16MaxFixedRepresentation</definition>
        <argsstring></argsstring>
        <name>kF16MaxFixedRepresentation</name>
        <initializer>= 0x0000FFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/depth_format_fixed_function_tests.cpp" line="12" column="27" bodyfile="src/tests/depth_format_fixed_function_tests.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da7/depth__format__fixed__function__tests_8cpp_1a064dadde600335c0cc5e5d70177cda5b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t kF24MaxFixedRepresentation</definition>
        <argsstring></argsstring>
        <name>kF24MaxFixedRepresentation</name>
        <initializer>= 0x00FEFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/depth_format_fixed_function_tests.cpp" line="13" column="27" bodyfile="src/tests/depth_format_fixed_function_tests.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da7/depth__format__fixed__function__tests_8cpp_1a963efde447191100e028155185ab43a2" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float kCameraZ</definition>
        <argsstring></argsstring>
        <name>kCameraZ</name>
        <initializer>= -7.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/depth_format_fixed_function_tests.cpp" line="16" column="24" bodyfile="src/tests/depth_format_fixed_function_tests.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da7/depth__format__fixed__function__tests_8cpp_1a260f76d27bdc673a5a90fb6735593bd8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float kZNear</definition>
        <argsstring></argsstring>
        <name>kZNear</name>
        <initializer>= kCameraZ + 1.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/depth_format_fixed_function_tests.cpp" line="17" column="24" bodyfile="src/tests/depth_format_fixed_function_tests.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da7/depth__format__fixed__function__tests_8cpp_1a4685b40445dbe27d4b7f9b03e351c8a5" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float kZFar</definition>
        <argsstring></argsstring>
        <name>kZFar</name>
        <initializer>= kCameraZ + 200.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/depth_format_fixed_function_tests.cpp" line="18" column="24" bodyfile="src/tests/depth_format_fixed_function_tests.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da7/depth__format__fixed__function__tests_8cpp_1af47b1d5e130172e8a3a883d0b292eaab" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="d3/db7/structDepthFormatFixedFunctionTests_1_1DepthFormat" kindref="compound">DepthFormatFixedFunctionTests::DepthFormat</ref></type>
        <definition>constexpr DepthFormatFixedFunctionTests::DepthFormat kDepthFormats[]</definition>
        <argsstring>[]</argsstring>
        <name>kDepthFormats</name>
        <initializer>= {
    {NV097_SET_SURFACE_FORMAT_ZETA_Z16, 0x0000FFFF, false},
    {NV097_SET_SURFACE_FORMAT_ZETA_Z24S8, 0x00FFFFFF, false},
    {NV097_SET_SURFACE_FORMAT_ZETA_Z16, kF16MaxFixedRepresentation, true},
    {NV097_SET_SURFACE_FORMAT_ZETA_Z24S8, kF24MaxFixedRepresentation, true},
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/depth_format_fixed_function_tests.cpp" line="20" column="54" bodyfile="src/tests/depth_format_fixed_function_tests.cpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da7/depth__format__fixed__function__tests_8cpp_1add80a2315f3ad7bed4306b2a21099e57" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t kNumDepthTests</definition>
        <argsstring></argsstring>
        <name>kNumDepthTests</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/depth_format_fixed_function_tests.cpp" line="27" column="20" bodyfile="src/tests/depth_format_fixed_function_tests.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da7/depth__format__fixed__function__tests_8cpp_1a82e4894cbb08f40c177aa007f9cde4da" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool kCompressionSettings[]</definition>
        <argsstring>[]</argsstring>
        <name>kCompressionSettings</name>
        <initializer>= {false, true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/depth_format_fixed_function_tests.cpp" line="28" column="16" bodyfile="src/tests/depth_format_fixed_function_tests.cpp" bodystart="28" bodyend="28"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;depth_format_fixed_function_tests.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbkit/pbkit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;debug_output.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nxdk_ext.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pbkit_ext.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shaders/passthrough_vertex_shader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_host.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vertex_buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>kF16MaxFixedRepresentation<sp/>=<sp/>0x0000FFFF;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>kF24MaxFixedRepresentation<sp/>=<sp/>0x00FEFFFF;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Keep<sp/>in<sp/>sync<sp/>with<sp/>the<sp/>value<sp/>used<sp/>to<sp/>set<sp/>up<sp/>the<sp/>default<sp/>XDK<sp/>composite<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kCameraZ<sp/>=<sp/>-7.0f;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kZNear<sp/>=<sp/>kCameraZ<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kZFar<sp/>=<sp/>kCameraZ<sp/>+<sp/>200.0f;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="d3/db7/structDepthFormatFixedFunctionTests_1_1DepthFormat" kindref="compound">DepthFormatFixedFunctionTests::DepthFormat</ref><sp/>kDepthFormats[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV097_SET_SURFACE_FORMAT_ZETA_Z16,<sp/>0x0000FFFF,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV097_SET_SURFACE_FORMAT_ZETA_Z24S8,<sp/>0x00FFFFFF,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV097_SET_SURFACE_FORMAT_ZETA_Z16,<sp/>kF16MaxFixedRepresentation,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{NV097_SET_SURFACE_FORMAT_ZETA_Z24S8,<sp/>kF24MaxFixedRepresentation,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>kNumDepthTests<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>kCompressionSettings[]<sp/>=<sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">DepthFormatFixedFunctionTests::DepthFormatFixedFunctionTests(<ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref><sp/>&amp;host,<sp/>std::string<sp/>output_dir,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Config<sp/>&amp;config)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="d2/d3e/classTestSuite" kindref="compound">TestSuite</ref>(host,<sp/>std::move(output_dir),<sp/></highlight><highlight class="stringliteral">&quot;Depth<sp/>buffer<sp/>fixed<sp/>function&quot;</highlight><highlight class="normal">,<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>depth_format<sp/>:<sp/>kDepthFormats)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>depth_cutoff_step<sp/>=<sp/>depth_format.max_depth<sp/>/<sp/>kNumDepthTests;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>compression_enabled<sp/>:<sp/>kCompressionSettings)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>depth_cutoff<sp/>=<sp/>depth_format.max_depth;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>kNumDepthTests;<sp/>++i,<sp/>depth_cutoff<sp/>-=<sp/>depth_cutoff_step)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>MakeTestName(depth_format,<sp/>compression_enabled,<sp/>depth_cutoff);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tests_[name]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>depth_format,<sp/>compression_enabled,<sp/>depth_cutoff]()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test(depth_format,<sp/>compression_enabled,<sp/>depth_cutoff);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/de3/classDepthFormatFixedFunctionTests_1acac8073d0f09359d23dcdc37700e4fe3" kindref="member">DepthFormatFixedFunctionTests::Initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="d2/d3e/classTestSuite_1a1c4756eb905d6d4d35e1630107396c38" kindref="member">TestSuite::Initialize</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>host_.SetVertexShaderProgram(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>host_.SetXDKDefaultViewportAndFixedFunctionMatrices();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner0Just(TestHost::SRC_DIFFUSE);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner1Just(TestHost::SRC_ZERO,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>CreateGeometry();</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DepthFormatFixedFunctionTests::CreateGeometry()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fb_width<sp/>=<sp/>host_.GetFramebufferWidthF();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fb_height<sp/>=<sp/>host_.GetFramebufferHeightF();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>the<sp/>graphic<sp/>in<sp/>the<sp/>center<sp/>of<sp/>the<sp/>framebuffer<sp/>with<sp/>some<sp/>padding<sp/>on<sp/>all<sp/>sides.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kLeft<sp/>=<sp/>floorf(fb_width<sp/>/<sp/>5.0f);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kRight<sp/>=<sp/>fb_width<sp/>-<sp/>kLeft;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kTop<sp/>=<sp/>floorf(fb_height<sp/>/<sp/>10.0f);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kBottom<sp/>=<sp/>fb_height<sp/>-<sp/>kTop;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kBigQuadWidth<sp/>=<sp/>kRight<sp/>-<sp/>kLeft;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kBigQuadHeight<sp/>=<sp/>kBottom<sp/>-<sp/>kTop;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>an<sp/>array<sp/>of<sp/>smaller<sp/>quads<sp/>with<sp/>increasing<sp/>depth<sp/>inside<sp/>of<sp/>the<sp/>big<sp/>quad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>kSmallSize<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>kSmallSpacing<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>kStep<sp/>=<sp/>kSmallSize<sp/>+<sp/>kSmallSpacing;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>uint32_t<sp/>quads_per_row<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(kBigQuadWidth<sp/>-<sp/>kSmallSize)<sp/>/<sp/>kStep;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>uint32_t<sp/>quads_per_col<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(kBigQuadHeight<sp/>-<sp/>kSmallSize)<sp/>/<sp/>kStep;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>row_size<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(kSmallSize)<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(quads_per_row)<sp/>*<sp/>kStep;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>col_size<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(kSmallSize)<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(quads_per_col)<sp/>*<sp/>kStep;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_offset<sp/>=<sp/>kLeft<sp/>+<sp/>kSmallSpacing<sp/>+<sp/>(kBigQuadWidth<sp/>-<sp/>row_size)<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_offset<sp/>=<sp/>kTop<sp/>+<sp/>kSmallSpacing<sp/>+<sp/>(kBigQuadHeight<sp/>-<sp/>col_size)<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>uint32_t<sp/>num_quads<sp/>=<sp/>3<sp/>+<sp/>quads_per_row<sp/>*<sp/>quads_per_col;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buffer<sp/>=<sp/>host_.AllocateVertexBuffer(6<sp/>*<sp/>num_quads);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>uint32_t<sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>auto<sp/>z_far<sp/>=<sp/>static_cast&lt;float&gt;(format.max_depth);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>Color<sp/>ul{};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>Color<sp/>ll{};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>Color<sp/>lr{};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>Color<sp/>ur{};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>grid<sp/>of<sp/>small<sp/>quads<sp/>going<sp/>from<sp/>min<sp/>depth<sp/>to<sp/>~max<sp/>depth.<sp/>The<sp/>right<sp/>size<sp/>will<sp/>alternate<sp/>from<sp/>being<sp/>deeper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>less<sp/>deep<sp/>than<sp/>the<sp/>left<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Quads<sp/>are<sp/>intentionally<sp/>rendered<sp/>from<sp/>front<sp/>to<sp/>back<sp/>to<sp/>verify<sp/>the<sp/>behavior<sp/>of<sp/>the<sp/>depth<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z_inc<sp/>=<sp/>(kZFar<sp/>-<sp/>kZNear)<sp/>/<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(num_quads)<sp/>+<sp/>1.0f);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z_left<sp/>=<sp/>kZNear;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>right_offset<sp/>=<sp/>z_inc<sp/>*<sp/>0.75f;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>y_offset;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_idx<sp/>=<sp/>0;<sp/>y_idx<sp/>&lt;<sp/>quads_per_col;<sp/>++y_idx)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>x_offset;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_idx<sp/>=<sp/>0;<sp/>x_idx<sp/>&lt;<sp/>quads_per_row;<sp/>++x_idx)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z_right<sp/>=<sp/>z_left<sp/>+<sp/>right_offset;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>left_color<sp/>=<sp/>0.25f<sp/>+<sp/>(z_left<sp/>/<sp/>kZFar<sp/>*<sp/>0.75f);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>right_color<sp/>=<sp/>0.25f<sp/>+<sp/>(z_right<sp/>/<sp/>kZFar<sp/>*<sp/>0.75f);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul.SetGrey(left_color);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll.SetGrey(left_color);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lr.SetGrey(right_color);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ur.SetGrey(right_color);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_t<sp/>ul_world;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_t<sp/>screen_point<sp/>=<sp/>{x,<sp/>y,<sp/>0.0f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_.UnprojectPoint(ul_world,<sp/>screen_point,<sp/>z_left);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_t<sp/>ur_world;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>screen_point[0]<sp/>=<sp/>x<sp/>+<sp/>kSmallSize;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_.UnprojectPoint(ur_world,<sp/>screen_point,<sp/>z_right);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_t<sp/>lr_world;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>screen_point[1]<sp/>=<sp/>y<sp/>+<sp/>kSmallSize;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_.UnprojectPoint(lr_world,<sp/>screen_point,<sp/>z_right);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_t<sp/>ll_world;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>screen_point[0]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_.UnprojectPoint(ll_world,<sp/>screen_point,<sp/>z_left);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;DefineBiTri(idx++,<sp/>ul_world,<sp/>ur_world,<sp/>lr_world,<sp/>ll_world,<sp/>ul,<sp/>ll,<sp/>lr,<sp/>ur);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_left<sp/>+=<sp/>z_inc;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_offset<sp/>*=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>kStep;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>kStep;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>small<sp/>quad<sp/>on<sp/>the<sp/>bottom<sp/>going<sp/>from<sp/>3/4<sp/>max<sp/>depth<sp/>on<sp/>the<sp/>left<sp/>to<sp/>min<sp/>depth<sp/>at<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z_left<sp/>=<sp/>kZFar<sp/>*<sp/>0.75;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z_right<sp/>=<sp/>kZNear;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>ul.SetRGB(z_left<sp/>/<sp/>kZFar,<sp/>0.75,<sp/>z_left<sp/>/<sp/>kZFar);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>ll.SetRGB(z_left<sp/>/<sp/>kZFar,<sp/>0.75,<sp/>z_left<sp/>/<sp/>kZFar);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>ur.SetRGB(0.75,<sp/>z_right<sp/>/<sp/>kZFar,<sp/>z_right<sp/>/<sp/>kZFar);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>lr.SetRGB(0.75,<sp/>z_right<sp/>/<sp/>kZFar,<sp/>z_right<sp/>/<sp/>kZFar);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintMsg(</highlight><highlight class="stringliteral">&quot;Bottom<sp/>quad:<sp/>%g<sp/>-&gt;<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>z_left,<sp/>z_right);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>ul_world;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>screen_point<sp/>=<sp/>{kLeft<sp/>+<sp/>4,<sp/>kBottom<sp/>-<sp/>10,<sp/>0.0f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.UnprojectPoint(ul_world,<sp/>screen_point,<sp/>z_left);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>ur_world;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>screen_point[0]<sp/>=<sp/>kRight<sp/>-<sp/>20;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.UnprojectPoint(ur_world,<sp/>screen_point,<sp/>z_right);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>lr_world;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>screen_point[1]<sp/>=<sp/>kBottom<sp/>-<sp/>5;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.UnprojectPoint(lr_world,<sp/>screen_point,<sp/>z_right);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>ll_world;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>screen_point[0]<sp/>=<sp/>kLeft<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.UnprojectPoint(ll_world,<sp/>screen_point,<sp/>z_left);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;DefineBiTri(idx++,<sp/>ul_world,<sp/>ur_world,<sp/>lr_world,<sp/>ll_world,<sp/>ul,<sp/>ll,<sp/>lr,<sp/>ur);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>small<sp/>quad<sp/>on<sp/>the<sp/>right<sp/>going<sp/>from<sp/>near<sp/>min<sp/>depth<sp/>at<sp/>the<sp/>top<sp/>to<sp/>1/2<sp/>max<sp/>depth<sp/>at<sp/>the<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z_top<sp/>=<sp/>kZNear;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z_bottom<sp/>=<sp/>kZFar<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>ul.SetRGB(z_top<sp/>/<sp/>kZFar,<sp/>0.5,<sp/>z_top<sp/>/<sp/>kZFar);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>ur.SetRGB(z_top<sp/>/<sp/>kZFar,<sp/>0.5,<sp/>z_top<sp/>/<sp/>kZFar);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>ll.SetRGB(0.5,<sp/>z_bottom<sp/>/<sp/>kZFar,<sp/>z_bottom<sp/>/<sp/>kZFar);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>lr.SetRGB(0.5,<sp/>z_bottom<sp/>/<sp/>kZFar,<sp/>z_bottom<sp/>/<sp/>kZFar);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintMsg(</highlight><highlight class="stringliteral">&quot;Right<sp/>quad:<sp/>%g<sp/>-&gt;<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>z_top,<sp/>z_bottom);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>ul_world;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>screen_point<sp/>=<sp/>{kRight<sp/>-<sp/>10,<sp/>kTop<sp/>+<sp/>5,<sp/>0.0f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.UnprojectPoint(ul_world,<sp/>screen_point,<sp/>z_top);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>ur_world;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>screen_point[0]<sp/>=<sp/>kRight<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.UnprojectPoint(ur_world,<sp/>screen_point,<sp/>z_top);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>lr_world;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>screen_point[1]<sp/>=<sp/>kBottom<sp/>-<sp/>5;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.UnprojectPoint(lr_world,<sp/>screen_point,<sp/>z_bottom);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>ll_world;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>screen_point[0]<sp/>=<sp/>kRight<sp/>-<sp/>10;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.UnprojectPoint(ll_world,<sp/>screen_point,<sp/>z_bottom);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;DefineBiTri(idx++,<sp/>ul_world,<sp/>ur_world,<sp/>lr_world,<sp/>ll_world,<sp/>ul,<sp/>ll,<sp/>lr,<sp/>ur);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>large<sp/>quad<sp/>going<sp/>from<sp/>1/3<sp/>max<sp/>depth<sp/>at<sp/>the<sp/>top<sp/>to<sp/>max<sp/>depth<sp/>at<sp/>the<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>ul.SetRGB(0.0,<sp/>1.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>ll.SetRGB(0.0,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>lr.SetRGB(0.4,<sp/>0.3,<sp/>0.0);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>ur.SetRGB(1.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bottom_z<sp/>=<sp/>kZFar;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>top_z<sp/>=<sp/>bottom_z<sp/>*<sp/>2.0f<sp/>/<sp/>3.0f;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintMsg(</highlight><highlight class="stringliteral">&quot;Big<sp/>quad:<sp/>%g<sp/>-&gt;<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>top_z,<sp/>bottom_z);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>ul_world;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>screen_point<sp/>=<sp/>{kLeft,<sp/>kTop,<sp/>0.0f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.UnprojectPoint(ul_world,<sp/>screen_point,<sp/>top_z);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>ur_world;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>screen_point[0]<sp/>=<sp/>kRight;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.UnprojectPoint(ur_world,<sp/>screen_point,<sp/>top_z);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>lr_world;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>screen_point[1]<sp/>=<sp/>kBottom;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.UnprojectPoint(lr_world,<sp/>screen_point,<sp/>bottom_z);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>ll_world;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>screen_point[0]<sp/>=<sp/>kLeft;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.UnprojectPoint(ll_world,<sp/>screen_point,<sp/>bottom_z);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;DefineBiTri(idx++,<sp/>ul_world,<sp/>ur_world,<sp/>lr_world,<sp/>ll_world,<sp/>ul,<sp/>ll,<sp/>lr,<sp/>ur);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DepthFormatFixedFunctionTests::Test(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DepthFormat<sp/>&amp;format,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compress_z,<sp/>uint32_t<sp/>depth_cutoff)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>host_.SetSurfaceFormat(host_.GetColorBufferFormat(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">TestHost::SurfaceZetaFormat</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(format.format),</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_.GetFramebufferWidth(),<sp/>host_.GetFramebufferHeight());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>host_.SetDepthBufferFloatMode(format.floating_point);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>host_.PrepareDraw(0xFF000000,<sp/>depth_cutoff);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Override<sp/>the<sp/>depth<sp/>clip<sp/>to<sp/>ensure<sp/>that<sp/>max_val<sp/>depths<sp/>(post-projection)<sp/>are<sp/>never<sp/>clipped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>host_.SetDepthClip(0.0f,<sp/>16777216);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>Pushbuffer::Begin();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_DEPTH_TEST_ENABLE,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_DEPTH_MASK,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_DEPTH_FUNC,<sp/>NV097_SET_DEPTH_FUNC_V_LESS);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_COMPRESS_ZBUFFER_EN,<sp/>compress_z);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_STENCIL_TEST_ENABLE,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>Pushbuffer::Push(NV097_SET_STENCIL_MASK,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>Pushbuffer::End();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>host_.DrawArrays();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format_name<sp/>=<sp/>format.format<sp/>==<sp/>NV097_SET_SURFACE_FORMAT_ZETA_Z16<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;z16&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;z24&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;DF:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>format_name);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;CompZ:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>compress_z<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;FloatZ:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>format.floating_point<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;Max:<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/>depth_cutoff);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>pb_draw_text_screen();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>std::string<sp/>name<sp/>=<sp/>MakeTestName(format,<sp/>compress_z,<sp/>depth_cutoff);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>host_.<ref refid="d6/d80/classTestHost_1a8e1914535ca75d5b94cfb3cf28f52b17" kindref="member">FinishDraw</ref>(allow_saving_,<sp/>output_dir_,<sp/>suite_name_,<sp/>name,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">std::string<sp/>DepthFormatFixedFunctionTests::MakeTestName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DepthFormat<sp/>&amp;format,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compress_z,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>depth_cutoff)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format_name<sp/>=<sp/>format.format<sp/>==<sp/>NV097_SET_SURFACE_FORMAT_ZETA_Z16<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;z16&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;z24&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/>63,<sp/></highlight><highlight class="stringliteral">&quot;%s_C%s_FZ%s_M%06.6x&quot;</highlight><highlight class="normal">,<sp/>format_name,<sp/>compress_z<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">,<sp/>format.floating_point<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth_cutoff);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/tests/depth_format_fixed_function_tests.cpp"/>
  </compounddef>
</doxygen>
