<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="db/d8b/texture__perspective__enable__tests_8cpp" kind="file" language="C++">
    <compoundname>texture_perspective_enable_tests.cpp</compoundname>
    <includes refid="dc/d3d/texture__perspective__enable__tests_8h" local="yes">texture_perspective_enable_tests.h</includes>
    <includes local="no">pbkit/pbkit.h</includes>
    <includes refid="d3/dc0/debug__output_8h" local="yes">debug_output.h</includes>
    <includes local="yes">shaders/passthrough_vertex_shader.h</includes>
    <includes refid="df/d43/test__host_8h" local="yes">test_host.h</includes>
    <includes local="yes">texture_generator.h</includes>
    <incdepgraph>
      <node id="18">
        <label>debug_output.h</label>
        <link refid="d3/dc0/debug__output_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ftp_logger.h</label>
        <link refid="d0/dad/ftp__logger_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>pbkit_ext.h</label>
        <link refid="d7/d31/pbkit__ext_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>pgraph_diff_token.h</label>
        <link refid="d3/d11/pgraph__diff__token_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>test_host.h</label>
        <link refid="df/d43/test__host_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>test_suite.h</label>
        <link refid="d6/d7a/test__suite_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/tests/texture_perspective_enable_tests.cpp</label>
        <link refid="db/d8b/texture__perspective__enable__tests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>texture_perspective_enable_tests.h</label>
        <link refid="dc/d3d/texture__perspective__enable__tests_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>atomic</label>
      </node>
      <node id="11">
        <label>chrono</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="16">
        <label>list</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="23">
        <label>memory</label>
      </node>
      <node id="24">
        <label>nv2astate.h</label>
      </node>
      <node id="25">
        <label>nxdk_ext.h</label>
      </node>
      <node id="17">
        <label>pbkit/pbkit.h</label>
      </node>
      <node id="20">
        <label>printf/printf.h</label>
      </node>
      <node id="26">
        <label>pushbuffer.h</label>
      </node>
      <node id="13">
        <label>set</label>
      </node>
      <node id="21">
        <label>shaders/passthrough_vertex_shader.h</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="27">
        <label>texture_format.h</label>
      </node>
      <node id="31">
        <label>texture_generator.h</label>
      </node>
      <node id="28">
        <label>texture_stage.h</label>
      </node>
      <node id="9">
        <label>thread</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="29">
        <label>vertex_buffer.h</label>
      </node>
      <node id="19">
        <label>windows.h</label>
      </node>
      <node id="30">
        <label>xbox_math_types.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="db/d8b/texture__perspective__enable__tests_8cpp_1aeb3865c9c92b06af2cff78ea24828bed" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto kWUpperLeft</definition>
        <argsstring></argsstring>
        <name>kWUpperLeft</name>
        <initializer>= INFINITY</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/texture_perspective_enable_tests.cpp" line="10" column="23" bodyfile="src/tests/texture_perspective_enable_tests.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d8b/texture__perspective__enable__tests_8cpp_1a7923887346655e4e19ce8bafaaab1d04" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto kWUpperRight</definition>
        <argsstring></argsstring>
        <name>kWUpperRight</name>
        <initializer>= 1.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/texture_perspective_enable_tests.cpp" line="11" column="23" bodyfile="src/tests/texture_perspective_enable_tests.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d8b/texture__perspective__enable__tests_8cpp_1a2a2ee84d5d159f6f5b934df2eb64cc52" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto kWLowerRight</definition>
        <argsstring></argsstring>
        <name>kWLowerRight</name>
        <initializer>= 0.980578f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/texture_perspective_enable_tests.cpp" line="12" column="23" bodyfile="src/tests/texture_perspective_enable_tests.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d8b/texture__perspective__enable__tests_8cpp_1a235bc6e2871499b9bba97e83273ba9fb" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto kWLowerLeft</definition>
        <argsstring></argsstring>
        <name>kWLowerLeft</name>
        <initializer>= 0.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/texture_perspective_enable_tests.cpp" line="13" column="23" bodyfile="src/tests/texture_perspective_enable_tests.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d8b/texture__perspective__enable__tests_8cpp_1ab8010c7100c1eea94338a2aa7cbbb419" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto kWUpperLeftTwo</definition>
        <argsstring></argsstring>
        <name>kWUpperLeftTwo</name>
        <initializer>= INFINITY</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/texture_perspective_enable_tests.cpp" line="15" column="23" bodyfile="src/tests/texture_perspective_enable_tests.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d8b/texture__perspective__enable__tests_8cpp_1a14121419ccd02e1e218b9ae75b956dbe" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto kWUpperRightTwo</definition>
        <argsstring></argsstring>
        <name>kWUpperRightTwo</name>
        <initializer>= 1.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/texture_perspective_enable_tests.cpp" line="16" column="23" bodyfile="src/tests/texture_perspective_enable_tests.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d8b/texture__perspective__enable__tests_8cpp_1a61025db36c151d074dca5f08857d173b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto kWLowerRightTwo</definition>
        <argsstring></argsstring>
        <name>kWLowerRightTwo</name>
        <initializer>= 2.980578f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/texture_perspective_enable_tests.cpp" line="17" column="23" bodyfile="src/tests/texture_perspective_enable_tests.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d8b/texture__perspective__enable__tests_8cpp_1ac0eb6668ff4545f67eef2ab25e7b5d5f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto kWLowerLeftTwo</definition>
        <argsstring></argsstring>
        <name>kWLowerLeftTwo</name>
        <initializer>= -0.5f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/texture_perspective_enable_tests.cpp" line="18" column="23" bodyfile="src/tests/texture_perspective_enable_tests.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="db/d8b/texture__perspective__enable__tests_8cpp_1aa1318e95d98468cd64b71f91a7ddc136" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string MakeTestName</definition>
        <argsstring>(bool texture_enabled)</argsstring>
        <name>MakeTestName</name>
        <param>
          <type>bool</type>
          <declname>texture_enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/texture_perspective_enable_tests.cpp" line="20" column="20" bodyfile="src/tests/texture_perspective_enable_tests.cpp" bodystart="20" bodyend="28"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;texture_perspective_enable_tests.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbkit/pbkit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;debug_output.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shaders/passthrough_vertex_shader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_host.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;texture_generator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kWUpperLeft<sp/>=<sp/>INFINITY;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kWUpperRight<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kWLowerRight<sp/>=<sp/>0.980578f;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kWLowerLeft<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kWUpperLeftTwo<sp/>=<sp/>INFINITY;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kWUpperRightTwo<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kWLowerRightTwo<sp/>=<sp/>2.980578f;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kWLowerLeftTwo<sp/>=<sp/>-0.5f;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>MakeTestName(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>texture_enabled)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>std::string<sp/>ret<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TexPerspective_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(texture_enabled)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Textured&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Untextured&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="d1/d5c/classTexturePerspectiveEnableTests_1a9d3257d7a833540b26fa12d57feeff34" kindref="member">TexturePerspectiveEnableTests::TexturePerspectiveEnableTests</ref>(<ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref>&amp;<sp/>host,<sp/>std::string<sp/>output_dir,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Config&amp;<sp/>config)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="d2/d3e/classTestSuite" kindref="compound">TestSuite</ref>(host,<sp/>std::move(output_dir),<sp/></highlight><highlight class="stringliteral">&quot;Texture<sp/>perspective<sp/>enable&quot;</highlight><highlight class="normal">,<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>texture_enabled<sp/>:<sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">})<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>MakeTestName(texture_enabled);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>tests_[name]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>name,<sp/>texture_enabled]()<sp/>{<sp/>Test(name,<sp/>texture_enabled);<sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d5c/classTexturePerspectiveEnableTests_1addf7bad7e3e392086a86cf2bf39f019e" kindref="member">TexturePerspectiveEnableTests::Initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="d2/d3e/classTestSuite_1a1c4756eb905d6d4d35e1630107396c38" kindref="member">TestSuite::Initialize</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shader<sp/>=<sp/>std::make_shared&lt;PassthroughVertexShader&gt;();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>host_.SetVertexShaderProgram(shader);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TexturePerspectiveEnableTests::Test(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>texture_enabled)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>host_.PrepareDraw(0xFE323232);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fb_width<sp/>=<sp/>host_.GetFramebufferWidthF();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fb_height<sp/>=<sp/>host_.GetFramebufferHeightF();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>quad_width<sp/>=<sp/>fb_width<sp/>/<sp/>5.f;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>quad_height<sp/>=<sp/>fb_height<sp/>/<sp/>5.f;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>quad_top<sp/>=<sp/>quad_height;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>draw_bitri<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>quad_width,<sp/>quad_height](</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>top,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wUL,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wUR,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wLR,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wLL)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>left<sp/>+<sp/>quad_width;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>top<sp/>+<sp/>quad_height;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>quad_z<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.Begin(TestHost::PRIMITIVE_TRIANGLES);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetDiffuse(1.f,<sp/>0.f,<sp/>0.f,<sp/>1.f);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetTexCoord0(0.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetVertex(left,<sp/>top,<sp/>quad_z,<sp/>wUL);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetDiffuse(0.f,<sp/>0.f,<sp/>1.f,<sp/>1.f);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetTexCoord0(1.f,<sp/>1.f);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetVertex(right,<sp/>bottom,<sp/>quad_z,<sp/>wLR);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetDiffuse(0.f,<sp/>1.f,<sp/>0.f,<sp/>1.f);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetTexCoord0(0.f,<sp/>1.f);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetVertex(left,<sp/>bottom,<sp/>quad_z,<sp/>wLL);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetDiffuse(1.f,<sp/>0.f,<sp/>0.f,<sp/>1.f);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetTexCoord0(0.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetVertex(left,<sp/>top,<sp/>quad_z,<sp/>wUL);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetDiffuse(0.5f,<sp/>0.5f,<sp/>0.5f,<sp/>1.f);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetTexCoord0(1.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetVertex(right,<sp/>top,<sp/>quad_z,<sp/>wUR);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetDiffuse(0.f,<sp/>0.f,<sp/>1.f,<sp/>1.f);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetTexCoord0(1.f,<sp/>1.f);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetVertex(right,<sp/>bottom,<sp/>quad_z,<sp/>wLR);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.End();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(texture_enabled)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kStage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>kTextureSize<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>GenerateSwizzledRGBACheckerboard(host_.GetTextureMemoryForStage(kStage),<sp/>0,<sp/>0,<sp/>kTextureSize,<sp/>kTextureSize,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kTextureSize<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetTextureStageEnabled(kStage,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetShaderStageProgram(TestHost::STAGE_2D_PROJECTIVE);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetTextureFormat(GetTextureFormatInfo(NV097_SET_TEXTURE_FORMAT_COLOR_SZ_A8B8G8R8));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>texture_stage<sp/>=<sp/>host_.GetTextureStage(kStage);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>texture_stage.SetTextureDimensions(kTextureSize,<sp/>kTextureSize);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetupTextureStages();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetFinalCombiner0Just(TestHost::SRC_TEX0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>host_.SetFinalCombiner1Just(TestHost::SRC_TEX0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>texture<sp/>perspective.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>host_.SetupControl0(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>draw_bitri(quad_width,<sp/>quad_top,<sp/>kWUpperLeft,<sp/>kWUpperRight,<sp/>kWLowerRight,<sp/>kWLowerLeft);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>draw_bitri(quad_width,<sp/>quad_top<sp/>*<sp/>3.f,<sp/>kWUpperLeftTwo,<sp/>kWUpperRightTwo,<sp/>kWLowerRightTwo,<sp/>kWLowerLeftTwo);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>texture<sp/>perspective.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>host_.SetupControl0(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>draw_bitri(quad_width<sp/>*<sp/>3.f,<sp/>quad_top,<sp/>kWUpperLeft,<sp/>kWUpperRight,<sp/>kWLowerRight,<sp/>kWLowerLeft);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>draw_bitri(quad_width<sp/>*<sp/>3.f,<sp/>quad_top<sp/>*<sp/>3.f,<sp/>kWUpperLeftTwo,<sp/>kWUpperRightTwo,<sp/>kWLowerRightTwo,<sp/>kWLowerLeftTwo);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>host_.SetTextureStageEnabled(0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>host_.SetShaderStageProgram(TestHost::STAGE_NONE);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner0Just(TestHost::SRC_DIFFUSE);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>host_.SetFinalCombiner1Just(TestHost::SRC_DIFFUSE,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>pb_print(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>pb_printat(2,<sp/>12,<sp/></highlight><highlight class="stringliteral">&quot;Disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>pb_printat(2,<sp/>40,<sp/></highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>kWUpperLeft);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>pb_printat(3,<sp/>7,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>buf);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>kWUpperRight);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>pb_printat(3,<sp/>25,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>buf);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>kWLowerLeft);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>pb_printat(6,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>buf);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>kWLowerRight);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>pb_printat(6,<sp/>25,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>buf);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>kWUpperLeftTwo);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>pb_printat(10,<sp/>7,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>buf);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>kWUpperRightTwo);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>pb_printat(10,<sp/>25,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>buf);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>kWLowerLeftTwo);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>pb_printat(14,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>buf);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>kWLowerRightTwo);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>pb_printat(14,<sp/>25,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>buf);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>pb_draw_text_screen();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>host_.<ref refid="d6/d80/classTestHost_1a8e1914535ca75d5b94cfb3cf28f52b17" kindref="member">FinishDraw</ref>(allow_saving_,<sp/>output_dir_,<sp/>suite_name_,<sp/>name);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/tests/texture_perspective_enable_tests.cpp"/>
  </compounddef>
</doxygen>
