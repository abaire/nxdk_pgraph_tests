<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="db/d92/classColorZetaOverlapTests" kind="class" language="C++" prot="public">
    <compoundname>ColorZetaOverlapTests</compoundname>
    <basecompoundref refid="d2/d3e/classTestSuite" prot="public" virt="non-virtual">TestSuite</basecompoundref>
    <includes refid="da/dad/color__zeta__overlap__tests_8h" local="no">color_zeta_overlap_tests.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="db/d92/classColorZetaOverlapTests_1a7fa21c21c3c57ccf19d13d97aa059be1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ColorZetaOverlapTests::ColorZetaOverlapTests</definition>
        <argsstring>(TestHost &amp;host, std::string output_dir, const Config &amp;config)</argsstring>
        <name>ColorZetaOverlapTests</name>
        <qualifiedname>ColorZetaOverlapTests::ColorZetaOverlapTests</qualifiedname>
        <param>
          <type><ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref> &amp;</type>
          <declname>host</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>output_dir</declname>
        </param>
        <param>
          <type>const <ref refid="da/d85/structTestSuite_1_1Config" kindref="compound">Config</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/color_zeta_overlap_tests.h" line="18" column="3" bodyfile="src/tests/color_zeta_overlap_tests.cpp" bodystart="33" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="db/d92/classColorZetaOverlapTests_1a417a0248391ca2c83219efd82cf52156" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ColorZetaOverlapTests::Initialize</definition>
        <argsstring>() override</argsstring>
        <name>Initialize</name>
        <qualifiedname>ColorZetaOverlapTests::Initialize</qualifiedname>
        <reimplements refid="d2/d3e/classTestSuite_1a1c4756eb905d6d4d35e1630107396c38">Initialize</reimplements>
        <briefdescription>
<para>Called to initialize the test suite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/color_zeta_overlap_tests.h" line="20" column="8" bodyfile="src/tests/color_zeta_overlap_tests.cpp" bodystart="48" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="db/d92/classColorZetaOverlapTests_1a57a3a48f7b662dd5d4d7cf42c61737dd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ColorZetaOverlapTests::TestColorIntoDepth</definition>
        <argsstring>()</argsstring>
        <name>TestColorIntoDepth</name>
        <qualifiedname>ColorZetaOverlapTests::TestColorIntoDepth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/color_zeta_overlap_tests.h" line="23" column="8" bodyfile="src/tests/color_zeta_overlap_tests.cpp" bodystart="69" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="db/d92/classColorZetaOverlapTests_1adc527eb2b20f06aa125cfdce64fef330" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ColorZetaOverlapTests::TestDepthIntoColor</definition>
        <argsstring>()</argsstring>
        <name>TestDepthIntoColor</name>
        <qualifiedname>ColorZetaOverlapTests::TestDepthIntoColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/color_zeta_overlap_tests.h" line="24" column="8" bodyfile="src/tests/color_zeta_overlap_tests.cpp" bodystart="105" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="db/d92/classColorZetaOverlapTests_1ae9bf41736f8113117a29a6cb3113256e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ColorZetaOverlapTests::TestSwap</definition>
        <argsstring>()</argsstring>
        <name>TestSwap</name>
        <qualifiedname>ColorZetaOverlapTests::TestSwap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/color_zeta_overlap_tests.h" line="25" column="8" bodyfile="src/tests/color_zeta_overlap_tests.cpp" bodystart="140" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="db/d92/classColorZetaOverlapTests_1a8a1ae37e289b503e64a1f91c7f847ce8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ColorZetaOverlapTests::TestXemuAdjacentSurfaceWithClipOffset</definition>
        <argsstring>(bool swizzle)</argsstring>
        <name>TestXemuAdjacentSurfaceWithClipOffset</name>
        <qualifiedname>ColorZetaOverlapTests::TestXemuAdjacentSurfaceWithClipOffset</qualifiedname>
        <param>
          <type>bool</type>
          <declname>swizzle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/color_zeta_overlap_tests.h" line="28" column="8" bodyfile="src/tests/color_zeta_overlap_tests.cpp" bodystart="173" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="db/d92/classColorZetaOverlapTests_1ab8652aeb8e4a0911740d7f3e058bdd44" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ColorZetaOverlapTests::TestXemuAdjacentSurfaceWithAA</definition>
        <argsstring>()</argsstring>
        <name>TestXemuAdjacentSurfaceWithAA</name>
        <qualifiedname>ColorZetaOverlapTests::TestXemuAdjacentSurfaceWithAA</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/color_zeta_overlap_tests.h" line="29" column="8" bodyfile="src/tests/color_zeta_overlap_tests.cpp" bodystart="246" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="db/d92/classColorZetaOverlapTests_1af9ad47a3b31104eb6df47daa0704cba7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ColorZetaOverlapTests::SetSurfaceDMAs</definition>
        <argsstring>() const</argsstring>
        <name>SetSurfaceDMAs</name>
        <qualifiedname>ColorZetaOverlapTests::SetSurfaceDMAs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/color_zeta_overlap_tests.h" line="31" column="8" bodyfile="src/tests/color_zeta_overlap_tests.cpp" bodystart="302" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="db/d92/classColorZetaOverlapTests_1a30b1b8dd6c2b9bbdd59c78e59620f7ea" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ColorZetaOverlapTests::RestoreSurfaceDMAs</definition>
        <argsstring>() const</argsstring>
        <name>RestoreSurfaceDMAs</name>
        <qualifiedname>ColorZetaOverlapTests::RestoreSurfaceDMAs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/color_zeta_overlap_tests.h" line="32" column="8" bodyfile="src/tests/color_zeta_overlap_tests.cpp" bodystart="309" bodyend="314"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Tests behavior when the color buffer and z/stencil buffers overlap in RAM.</para>
<para>WARNING: These tests are non-deterministic on Xbox hardware. The primary intent of these tests is to verify that emulators do not crash. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ColorZetaOverlapTests</label>
        <link refid="db/d92/classColorZetaOverlapTests"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestSuite</label>
        <link refid="d2/d3e/classTestSuite"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ColorZetaOverlapTests</label>
        <link refid="db/d92/classColorZetaOverlapTests"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>NV2AState</label>
      </node>
      <node id="5">
        <label>PGRAPHDiffToken</label>
        <link refid="dd/df8/structPGRAPHDiffToken"/>
      </node>
      <node id="3">
        <label>TestHost</label>
        <link refid="d6/d80/classTestHost"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestSuite</label>
        <link refid="d2/d3e/classTestSuite"/>
        <childnode refid="3" relation="usage">
          <edgelabel>host_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>pgraph_diff_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/tests/color_zeta_overlap_tests.h" line="16" column="1" bodyfile="src/tests/color_zeta_overlap_tests.h" bodystart="16" bodyend="33"/>
    <listofallmembers>
      <member refid="d2/d3e/classTestSuite_1a1bb705ad4344ceb8237e0cb60f1c352d" prot="protected" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>allow_saving_</name></member>
      <member refid="db/d92/classColorZetaOverlapTests_1a7fa21c21c3c57ccf19d13d97aa059be1" prot="public" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>ColorZetaOverlapTests</name></member>
      <member refid="d2/d3e/classTestSuite_1a28742e0a5438926d43d0814c9694836f" prot="public" virt="virtual"><scope>ColorZetaOverlapTests</scope><name>Deinitialize</name></member>
      <member refid="d2/d3e/classTestSuite_1a7ce09368bd59391f6a9685224cdb8a43" prot="protected" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>delay_milliseconds_between_tests_</name></member>
      <member refid="d2/d3e/classTestSuite_1a165d9da1dec525ffdd299e2dcfaec2ef" prot="public" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>DisableTests</name></member>
      <member refid="d2/d3e/classTestSuite_1ac65ad3a2e3cfa4fe555fc1fa95e0a60b" prot="protected" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>enable_pgraph_region_diff_</name></member>
      <member refid="d2/d3e/classTestSuite_1a391930dfd9c57a4e7cbe8734120dfc73" prot="protected" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>enable_progress_log_</name></member>
      <member refid="d2/d3e/classTestSuite_1a518ce9987a1a5037f9083651c056c746" prot="protected" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>ftp_logger_</name></member>
      <member refid="d2/d3e/classTestSuite_1a7059e61572d914cff83ae22da3ea1957" prot="public" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>HasEnabledTests</name></member>
      <member refid="d2/d3e/classTestSuite_1a454f5c2050b66b598a2f2fcffd45ae48" prot="protected" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>host_</name></member>
      <member refid="db/d92/classColorZetaOverlapTests_1a417a0248391ca2c83219efd82cf52156" prot="public" virt="virtual"><scope>ColorZetaOverlapTests</scope><name>Initialize</name></member>
      <member refid="d2/d3e/classTestSuite_1ad87fbc52b4011398c9adb39ab62bb018" prot="protected" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>interactive_only_</name></member>
      <member refid="d2/d3e/classTestSuite_1ac26e1edd73faf7d732c0e41e816d654e" prot="public" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>IsInteractiveOnly</name></member>
      <member refid="d2/d3e/classTestSuite_1a15144024801f2f885727f7926c826c87" prot="public" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>Name</name></member>
      <member refid="d2/d3e/classTestSuite_1a2e81678d3ac733d517616bd67a837465" prot="protected" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>output_dir_</name></member>
      <member refid="d2/d3e/classTestSuite_1adc29cb178f12adee9cbabd1451a0d3b1" prot="protected" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>pgraph_diff_</name></member>
      <member refid="db/d92/classColorZetaOverlapTests_1a30b1b8dd6c2b9bbdd59c78e59620f7ea" prot="private" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>RestoreSurfaceDMAs</name></member>
      <member refid="d2/d3e/classTestSuite_1a40546218e5f7324690e0455706694763" prot="public" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>Run</name></member>
      <member refid="d2/d3e/classTestSuite_1a7f99d1a92beb6b58219b841b60d56322" prot="public" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>RunAll</name></member>
      <member refid="d2/d3e/classTestSuite_1a0d580dbb0e1630ecdc989d5c852e8f91" prot="protected" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>SetDefaultTextureFormat</name></member>
      <member refid="d2/d3e/classTestSuite_1a94c9bf323dd57396c2768e21690bf0d7" prot="public" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>SetSavingAllowed</name></member>
      <member refid="db/d92/classColorZetaOverlapTests_1af9ad47a3b31104eb6df47daa0704cba7" prot="private" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>SetSurfaceDMAs</name></member>
      <member refid="d2/d3e/classTestSuite_1af001b219ae1d7798d9df21b5bb8b9976" prot="public" virt="virtual"><scope>ColorZetaOverlapTests</scope><name>SetupTest</name></member>
      <member refid="d2/d3e/classTestSuite_1ac59f02a9549a146ed62e6185c0acec8b" prot="protected" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>suite_name_</name></member>
      <member refid="d2/d3e/classTestSuite_1a92d01e0978cf79ad0883532c73434515" prot="public" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>TagNV2ATrace</name></member>
      <member refid="d2/d3e/classTestSuite_1a4a67d49ad17fafd018be9871cc0910c3" prot="public" virt="virtual"><scope>ColorZetaOverlapTests</scope><name>TearDownTest</name></member>
      <member refid="db/d92/classColorZetaOverlapTests_1a57a3a48f7b662dd5d4d7cf42c61737dd" prot="private" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>TestColorIntoDepth</name></member>
      <member refid="db/d92/classColorZetaOverlapTests_1adc527eb2b20f06aa125cfdce64fef330" prot="private" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>TestDepthIntoColor</name></member>
      <member refid="d2/d3e/classTestSuite_1a80f0bc74d8d511547708827e5a549a63" prot="public" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>TestNames</name></member>
      <member refid="d2/d3e/classTestSuite_1a1eaaf3893135b062cd0a09d2a1a2ac0f" prot="protected" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>tests_</name></member>
      <member refid="d2/d3e/classTestSuite_1a57b1ed01dd40328456bf0854043ca68b" prot="public" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>TestSuite</name></member>
      <member refid="d2/d3e/classTestSuite_1a5957b74827526f04ff525b750decafd7" prot="public" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>TestSuite</name></member>
      <member refid="db/d92/classColorZetaOverlapTests_1ae9bf41736f8113117a29a6cb3113256e" prot="private" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>TestSwap</name></member>
      <member refid="db/d92/classColorZetaOverlapTests_1ab8652aeb8e4a0911740d7f3e058bdd44" prot="private" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>TestXemuAdjacentSurfaceWithAA</name></member>
      <member refid="db/d92/classColorZetaOverlapTests_1a8a1ae37e289b503e64a1f91c7f847ce8" prot="private" virt="non-virtual"><scope>ColorZetaOverlapTests</scope><name>TestXemuAdjacentSurfaceWithClipOffset</name></member>
      <member refid="d2/d3e/classTestSuite_1a1743f0a04119de901cb819111d51192d" prot="public" virt="virtual"><scope>ColorZetaOverlapTests</scope><name>~TestSuite</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
