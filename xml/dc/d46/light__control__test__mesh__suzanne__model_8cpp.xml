<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="dc/d46/light__control__test__mesh__suzanne__model_8cpp" kind="file" language="C++">
    <compoundname>light_control_test_mesh_suzanne_model.cpp</compoundname>
    <includes refid="d7/dcf/light__control__test__mesh__suzanne__model_8h" local="yes">light_control_test_mesh_suzanne_model.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="d3/dc0/debug__output_8h" local="yes">debug_output.h</includes>
    <incdepgraph>
      <node id="7">
        <label>debug_output.h</label>
        <link refid="d3/dc0/debug__output_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/models/light_control_test_mesh_suzanne_model.cpp</label>
        <link refid="dc/d46/light__control__test__mesh__suzanne__model_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>light_control_test_mesh_suzanne_model.h</label>
        <link refid="d7/dcf/light__control__test__mesh__suzanne__model_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>models/model_builder.h</label>
      </node>
      <node id="10">
        <label>printf/printf.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="8">
        <label>windows.h</label>
      </node>
      <node id="5">
        <label>xbox_math_types.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="dc/d46/light__control__test__mesh__suzanne__model_8cpp_1a0f5b6de2c18e4b47248c4f4aeb701731" prot="public" static="no">
        <name>READ</name>
        <param><defname>target</defname></param>
        <param><defname>size</defname></param>
        <initializer>  if (fread((target), (size), 1, fp) != 1) {                                         \
    ASSERT(!&quot;Failed to read from d:\\models\\light_control_test_mesh_suzanne.mesh&quot;); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/light_control_test_mesh_suzanne_model.cpp" line="9" column="9" bodyfile="src/models/light_control_test_mesh_suzanne_model.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="define" id="dc/d46/light__control__test__mesh__suzanne__model_8cpp_1a7f3ed77ef24a330f54394f952f6fa6b8" prot="public" static="no">
        <name>READ_ARRAY</name>
        <param><defname>target</defname></param>
        <param><defname>size</defname></param>
        <param><defname>elements</defname></param>
        <initializer>  if (fread((target), (size), (elements), fp) != (elements)) {                       \
    ASSERT(!&quot;Failed to read from d:\\models\\light_control_test_mesh_suzanne.mesh&quot;); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/light_control_test_mesh_suzanne_model.cpp" line="14" column="9" bodyfile="src/models/light_control_test_mesh_suzanne_model.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="define" id="dc/d46/light__control__test__mesh__suzanne__model_8cpp_1a87ff4288c120c97c5de3ebce99bbd1bf" prot="public" static="no">
        <name>SKIP</name>
        <param><defname>size</defname></param>
        <initializer>  if (fseek(fp, (size), SEEK_CUR)) {                                               \
    ASSERT(!&quot;Failed to seek in d:\\models\\light_control_test_mesh_suzanne.mesh&quot;); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/light_control_test_mesh_suzanne_model.cpp" line="19" column="9" bodyfile="src/models/light_control_test_mesh_suzanne_model.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Generated<sp/>by<sp/>collada_converter.py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;light_control_test_mesh_suzanne_model.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;debug_output.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READ(target,<sp/>size)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"><sp/><sp/>if<sp/>(fread((target),<sp/>(size),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASSERT(!&quot;Failed<sp/>to<sp/>read<sp/>from<sp/>d:\\models\\light_control_test_mesh_suzanne.mesh&quot;);<sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READ_ARRAY(target,<sp/>size,<sp/>elements)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"><sp/><sp/>if<sp/>(fread((target),<sp/>(size),<sp/>(elements),<sp/>fp)<sp/>!=<sp/>(elements))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASSERT(!&quot;Failed<sp/>to<sp/>read<sp/>from<sp/>d:\\models\\light_control_test_mesh_suzanne.mesh&quot;);<sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SKIP(size)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/>if<sp/>(fseek(fp,<sp/>(size),<sp/>SEEK_CUR))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASSERT(!&quot;Failed<sp/>to<sp/>seek<sp/>in<sp/>d:\\models\\light_control_test_mesh_suzanne.mesh&quot;);<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">uint32_t<sp/>LightControlTestMeshSuzanneModel::GetVertexCount()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>FILE<sp/>*fp<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;d:\\models\\light_control_test_mesh_suzanne.mesh&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>ASSERT(fp<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>d:\\models\\light_control_test_mesh_suzanne.mesh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>uint32_t<sp/>num_vertices;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>READ(&amp;num_vertices,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(num_vertices))</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_vertices;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*LightControlTestMeshSuzanneModel::GetVertexPositions()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>ASSERT(!vertices_<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;vertices_<sp/>already<sp/>populated&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>FILE<sp/>*fp<sp/>=<sp/>fopen(&quot;d:\\models\\light_control_test_mesh_suzanne.mesh&quot;,<sp/>&quot;rb&quot;);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>ASSERT(fp<sp/>&amp;&amp;<sp/>&quot;Failed<sp/>to<sp/>open<sp/>d:\\models\\light_control_test_mesh_suzanne.mesh&quot;);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>SKIP(sizeof(uint32_t))</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>uint32_t<sp/>num_positions;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>READ(&amp;num_positions,<sp/>sizeof(num_positions))</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>vertices_<sp/>=<sp/>new<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[num_positions];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>READ_ARRAY(vertices_,<sp/>sizeof(*vertices_),<sp/>num_positions)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>return<sp/>vertices_;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="dc/d32/classLightControlTestMeshSuzanneModel" kindref="compound">LightControlTestMeshSuzanneModel</ref>::GetVertexNormals()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>ASSERT(!normals_<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;normals_<sp/>already<sp/>populated&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>FILE<sp/>*fp<sp/>=<sp/>fopen(&quot;d:\\models\\light_control_test_mesh_suzanne.mesh&quot;,<sp/>&quot;rb&quot;);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>ASSERT(fp<sp/>&amp;&amp;<sp/>&quot;Failed<sp/>to<sp/>open<sp/>d:\\models\\light_control_test_mesh_suzanne.mesh&quot;);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>SKIP(sizeof(uint32_t))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>uint32_t<sp/>num_positions;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>READ(&amp;num_positions,<sp/>sizeof(num_positions))</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>SKIP(sizeof(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>num_positions)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>uint32_t<sp/>num_normals;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>READ(&amp;num_normals,<sp/>sizeof(num_normals))</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>normals_<sp/>=<sp/>new<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[num_normals];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>READ_ARRAY(normals_,<sp/>sizeof(*normals_),<sp/>num_normals)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>return<sp/>normals_;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/models/light_control_test_mesh_suzanne_model.cpp"/>
  </compounddef>
</doxygen>
