<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="dd/ded/fog__tests_8h" kind="file" language="C++">
    <compoundname>fog_tests.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includes refid="df/d43/test__host_8h" local="yes">test_host.h</includes>
    <includes refid="d6/d7a/test__suite_8h" local="yes">test_suite.h</includes>
    <includes local="yes">vertex_buffer.h</includes>
    <includedby refid="df/d0a/main_8cpp" local="yes">src/main.cpp</includedby>
    <includedby refid="d7/d99/fog__tests_8cpp" local="yes">src/tests/fog_tests.cpp</includedby>
    <incdepgraph>
      <node id="5">
        <label>debug_output.h</label>
        <link refid="d3/dc0/debug__output_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ftp_logger.h</label>
        <link refid="d0/dad/ftp__logger_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>pbkit_ext.h</label>
        <link refid="d7/d31/pbkit__ext_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>pgraph_diff_token.h</label>
        <link refid="d3/d11/pgraph__diff__token_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>test_host.h</label>
        <link refid="df/d43/test__host_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/tests/fog_tests.h</label>
        <link refid="dd/ded/fog__tests_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>test_suite.h</label>
        <link refid="d6/d7a/test__suite_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>atomic</label>
      </node>
      <node id="23">
        <label>chrono</label>
      </node>
      <node id="11">
        <label>cstdint</label>
      </node>
      <node id="12">
        <label>functional</label>
      </node>
      <node id="28">
        <label>list</label>
      </node>
      <node id="24">
        <label>map</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="15">
        <label>nv2astate.h</label>
      </node>
      <node id="16">
        <label>nxdk_ext.h</label>
      </node>
      <node id="14">
        <label>pbkit/pbkit.h</label>
      </node>
      <node id="8">
        <label>printf/printf.h</label>
      </node>
      <node id="17">
        <label>pushbuffer.h</label>
      </node>
      <node id="25">
        <label>set</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="18">
        <label>texture_format.h</label>
      </node>
      <node id="19">
        <label>texture_stage.h</label>
      </node>
      <node id="13">
        <label>thread</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="20">
        <label>vertex_buffer.h</label>
      </node>
      <node id="6">
        <label>windows.h</label>
      </node>
      <node id="21">
        <label>xbox_math_types.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="d6/de7/classFogTests" prot="public">FogTests</innerclass>
    <innerclass refid="dc/d25/classFogCustomShaderTests" prot="public">FogCustomShaderTests</innerclass>
    <innerclass refid="df/d53/classFogInfiniteFogCoordinateTests" prot="public">FogInfiniteFogCoordinateTests</innerclass>
    <innerclass refid="d4/d92/classFogVec4CoordTests" prot="public">FogVec4CoordTests</innerclass>
    <innerclass refid="d5/d65/structFogVec4CoordTests_1_1TestConfig" prot="public">FogVec4CoordTests::TestConfig</innerclass>
    <innernamespace refid="de/dc6/namespacePBKitPlusPlus">PBKitPlusPlus</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>NXDK_PGRAPH_TESTS_FOG_TESTS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NXDK_PGRAPH_TESTS_FOG_TESTS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_host.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_suite.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vertex_buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">PBKitPlusPlus<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">VertexBuffer;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">PBKitPlusPlus;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>behavior<sp/>of<sp/>the<sp/>Fog<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="d6/de7/classFogTests" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/de7/classFogTests" kindref="compound">FogTests</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d2/d3e/classTestSuite" kindref="compound">TestSuite</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>FogMode<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>FOG_LINEAR<sp/>=<sp/>NV097_SET_FOG_MODE_V_LINEAR,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>FOG_EXP<sp/>=<sp/>NV097_SET_FOG_MODE_V_EXP,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>FOG_EXP2<sp/>=<sp/>NV097_SET_FOG_MODE_V_EXP2,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>FOG_EXP_ABS<sp/>=<sp/>NV097_SET_FOG_MODE_V_EXP_ABS,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>FOG_EXP2_ABS<sp/>=<sp/>NV097_SET_FOG_MODE_V_EXP2_ABS,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>FOG_LINEAR_ABS<sp/>=<sp/>NV097_SET_FOG_MODE_V_LINEAR_ABS,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>FogGenMode<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>FOG_GEN_SPEC_ALPHA<sp/>=<sp/>NV097_SET_FOG_GEN_MODE_V_SPEC_ALPHA,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>FOG_GEN_RADIAL<sp/>=<sp/>NV097_SET_FOG_GEN_MODE_V_RADIAL,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>FOG_GEN_PLANAR<sp/>=<sp/>NV097_SET_FOG_GEN_MODE_V_PLANAR,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>FOG_GEN_ABS_PLANAR<sp/>=<sp/>NV097_SET_FOG_GEN_MODE_V_ABS_PLANAR,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>FOG_GEN_FOG_X<sp/>=<sp/>NV097_SET_FOG_GEN_MODE_V_FOG_X,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="d6/de7/classFogTests" kindref="compound">FogTests</ref>(<ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref>&amp;<sp/>host,<sp/>std::string<sp/>output_dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d85/structTestSuite_1_1Config" kindref="compound">Config</ref>&amp;<sp/>config,<sp/>std::string<sp/>suite_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Fog&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/de7/classFogTests_1a4f390d26c30a3144534cb013c4dce93e" kindref="member">Initialize</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/de7/classFogTests_1ab99e22734a0abdfd5e2549ec7089ab59" kindref="member">Deinitialize</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateGeometry();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Test(FogMode<sp/>fog_mode,<sp/>FogGenMode<sp/>gen_mode,<sp/>uint32_t<sp/>fog_alpha);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>MakeTestName(FogMode<sp/>fog_mode,<sp/>FogGenMode<sp/>gen_mode,<sp/>uint32_t<sp/>fog_alpha);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;VertexBuffer&gt;<sp/>vertex_buffer_;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="dc/d25/classFogCustomShaderTests" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dc/d25/classFogCustomShaderTests" kindref="compound">FogCustomShaderTests</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d6/de7/classFogTests" kindref="compound">FogTests</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="dc/d25/classFogCustomShaderTests" kindref="compound">FogCustomShaderTests</ref>(<ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref>&amp;<sp/>host,<sp/>std::string<sp/>output_dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d85/structTestSuite_1_1Config" kindref="compound">Config</ref>&amp;<sp/>config,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>suite_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Fog<sp/>vsh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d25/classFogCustomShaderTests_1a1a5a33c00a39c9310552d8371b2bd6cd" kindref="member">Initialize</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="df/d53/classFogInfiniteFogCoordinateTests" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d53/classFogInfiniteFogCoordinateTests" kindref="compound">FogInfiniteFogCoordinateTests</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="dc/d25/classFogCustomShaderTests" kindref="compound">FogCustomShaderTests</ref><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="df/d53/classFogInfiniteFogCoordinateTests" kindref="compound">FogInfiniteFogCoordinateTests</ref>(<ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref>&amp;<sp/>host,<sp/>std::string<sp/>output_dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d85/structTestSuite_1_1Config" kindref="compound">Config</ref>&amp;<sp/>config);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d53/classFogInfiniteFogCoordinateTests_1af8a953821c67a553e6d799afe254611c" kindref="member">Initialize</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="d4/d92/classFogVec4CoordTests" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d92/classFogVec4CoordTests" kindref="compound">FogVec4CoordTests</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="dc/d25/classFogCustomShaderTests" kindref="compound">FogCustomShaderTests</ref><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68" refid="d5/d65/structFogVec4CoordTests_1_1TestConfig" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d5/d65/structFogVec4CoordTests_1_1TestConfig" kindref="compound">TestConfig</ref><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prefix;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t*<sp/>shader;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>shader_size;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fog[4];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="d4/d92/classFogVec4CoordTests" kindref="compound">FogVec4CoordTests</ref>(<ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref>&amp;<sp/>host,<sp/>std::string<sp/>output_dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d85/structTestSuite_1_1Config" kindref="compound">Config</ref>&amp;<sp/>config);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d92/classFogVec4CoordTests_1a61a17bb013effdf18dfb91c0e0f9fcd5" kindref="member">Initialize</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifies<sp/>the<sp/>behavior<sp/>of<sp/>setting<sp/>individual<sp/>components<sp/>of<sp/>the<sp/>oFog<sp/>register,<sp/>showing<sp/>that<sp/>the<sp/>last<sp/>set<sp/>value<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>taken<sp/>as<sp/>the<sp/>value<sp/>regardless<sp/>of<sp/>the<sp/>destination<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>E.g.,<sp/>`mov<sp/>oFog.w,<sp/>0.5`<sp/>will<sp/>effectively<sp/>set<sp/>oFog.x<sp/>to<sp/>0.5,<sp/>obliterating<sp/>any<sp/>previous<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Test(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d65/structFogVec4CoordTests_1_1TestConfig" kindref="compound">TestConfig</ref>&amp;<sp/>config);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tests<sp/>behavior<sp/>when<sp/>the<sp/>fog<sp/>register<sp/>is<sp/>used<sp/>without<sp/>being<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestUnset();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetShader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d65/structFogVec4CoordTests_1_1TestConfig" kindref="compound">TestConfig</ref>&amp;<sp/>config)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>MakeTestName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d65/structFogVec4CoordTests_1_1TestConfig" kindref="compound">TestConfig</ref>&amp;<sp/>config);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>NXDK_PGRAPH_TESTS_FOG_TESTS_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/tests/fog_tests.h"/>
  </compounddef>
</doxygen>
