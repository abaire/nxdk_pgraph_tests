<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="df/d44/classSpecularTests" kind="class" language="C++" prot="public">
    <compoundname>SpecularTests</compoundname>
    <basecompoundref refid="d2/d3e/classTestSuite" prot="public" virt="non-virtual">TestSuite</basecompoundref>
    <includes refid="d6/db2/specular__tests_8h" local="no">specular_tests.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="df/d44/classSpecularTests_1a6c902baf253b76e3e3addd07ce6c505b" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; VertexBuffer &gt;</type>
        <definition>std::shared_ptr&lt;VertexBuffer&gt; SpecularTests::vertex_buffer_cone_</definition>
        <argsstring></argsstring>
        <name>vertex_buffer_cone_</name>
        <qualifiedname>SpecularTests::vertex_buffer_cone_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/specular_tests.h" line="37" column="19" bodyfile="src/tests/specular_tests.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d44/classSpecularTests_1a2bc49917bf189f7c506088d486abb0f9" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; VertexBuffer &gt;</type>
        <definition>std::shared_ptr&lt;VertexBuffer&gt; SpecularTests::vertex_buffer_cylinder_</definition>
        <argsstring></argsstring>
        <name>vertex_buffer_cylinder_</name>
        <qualifiedname>SpecularTests::vertex_buffer_cylinder_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/specular_tests.h" line="38" column="19" bodyfile="src/tests/specular_tests.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d44/classSpecularTests_1a2d516ce96ba47d173abb7a4b779b5c04" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; VertexBuffer &gt;</type>
        <definition>std::shared_ptr&lt;VertexBuffer&gt; SpecularTests::vertex_buffer_sphere_</definition>
        <argsstring></argsstring>
        <name>vertex_buffer_sphere_</name>
        <qualifiedname>SpecularTests::vertex_buffer_sphere_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/specular_tests.h" line="39" column="19" bodyfile="src/tests/specular_tests.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d44/classSpecularTests_1a72f98416fd52fdb175a148585f2357d5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; VertexBuffer &gt;</type>
        <definition>std::shared_ptr&lt;VertexBuffer&gt; SpecularTests::vertex_buffer_suzanne_</definition>
        <argsstring></argsstring>
        <name>vertex_buffer_suzanne_</name>
        <qualifiedname>SpecularTests::vertex_buffer_suzanne_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/specular_tests.h" line="40" column="19" bodyfile="src/tests/specular_tests.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d44/classSpecularTests_1a592a28d9e30290a86175a99f44b0cfa7" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; VertexBuffer &gt;</type>
        <definition>std::shared_ptr&lt;VertexBuffer&gt; SpecularTests::vertex_buffer_torus_</definition>
        <argsstring></argsstring>
        <name>vertex_buffer_torus_</name>
        <qualifiedname>SpecularTests::vertex_buffer_torus_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/specular_tests.h" line="41" column="19" bodyfile="src/tests/specular_tests.h" bodystart="41" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d44/classSpecularTests_1a73e7c505e8b39c6d72b9267f9445f743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SpecularTests::SpecularTests</definition>
        <argsstring>(TestHost &amp;host, std::string output_dir, const Config &amp;config)</argsstring>
        <name>SpecularTests</name>
        <qualifiedname>SpecularTests::SpecularTests</qualifiedname>
        <param>
          <type><ref refid="d6/d80/classTestHost" kindref="compound">TestHost</ref> &amp;</type>
          <declname>host</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>output_dir</declname>
        </param>
        <param>
          <type>const <ref refid="da/d85/structTestSuite_1_1Config" kindref="compound">Config</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes the test suite and creates test cases.</para>
<para><simplesect kind="remark"><para>ControlFlagsLightDisable_FF <parblock><para>Demonstrates that SET_SPECULAR_ENABLE = false forces specular values to {0, 0, 0, 1}. Also demonstrates that failing to set ALPHA_FROM_MATERIAL_SPECULAR will cause the specular alpha to be set to 1.</para>
<para>Renders two groups of two rows of 4 quads each with the fixed function pipeline. The first row is the specular component, the second is the diffuse. Lighting is disabled.</para>
<para>Each quad has specular and diffuse colors of: UL = {1.f, 0.f, 0.f, 0.15f}, {0.f, 0.f, 0.5f, 1.f} UR = {1.f, 0.f, 0.f, 0.75f}, {0.f, 0.f, 0.75f, 1.f} LR = {0.f, 1.f, 0.f, 1.f}, {0.f, 0.f, 1.f, 1.f} LL = {0.f, 1.f, 0.f, 0.2f}, {0.f, 0.f, 0.25f, 1.f}</para>
<para>The upper two rows have SET_SPECULAR_ENABLE = false. The lower rows have it true. The first column has SET_LIGHT_CONTROL = SEPARATE_SPECULAR + ALPHA_FROM_MATERIAL_SPECULAR The second has SET_LIGHT_CONTROL = SEPARATE_SPECULAR The third has SET_LIGHT_CONTROL = ALPHA_FROM_MATERIAL_SPECULAR The fourth has SET_LIGHT_CONTROL = 0 </para>
</parblock></para>
</simplesect>
</para>
<para><simplesect kind="remark"><para>ControlFlagsLightDisable_VS <parblock><para>Demonstrates that SET_SPECULAR_ENABLE = false forces specular values to {0, 0, 0, 1}. Also demonstrates that failing to set ALPHA_FROM_MATERIAL_SPECULAR will cause the specular alpha to be set to 1.</para>
<para>Renders two groups of two rows of 4 quads each with the fixed function pipeline. The first row is the specular component, the second is the diffuse. Lighting is disabled.</para>
<para>Each quad has specular and diffuse colors of: UL = {1.f, 0.f, 0.f, 0.15f}, {0.f, 0.f, 0.5f, 1.f} UR = {1.f, 0.f, 0.f, 0.75f}, {0.f, 0.f, 0.75f, 1.f} LR = {0.f, 1.f, 0.f, 1.f}, {0.f, 0.f, 1.f, 1.f} LL = {0.f, 1.f, 0.f, 0.2f}, {0.f, 0.f, 0.25f, 1.f}</para>
<para>The upper row has SET_SPECULAR_ENABLE = false. The lower row has it true. The first column has SET_LIGHT_CONTROL = SEPARATE_SPECULAR + ALPHA_FROM_MATERIAL_SPECULAR The second has SET_LIGHT_CONTROL = SEPARATE_SPECULAR The third has SET_LIGHT_CONTROL = ALPHA_FROM_MATERIAL_SPECULAR The fourth has SET_LIGHT_CONTROL = 0 </para>
</parblock></para>
</simplesect>
</para>
<para><simplesect kind="remark"><para>ControlFlagsNoLight_FF <parblock><para>Demonstrates that SET_SPECULAR_ENABLE = false forces specular values to {0, 0, 0, 1}. Also demonstrates that failing to set ALPHA_FROM_MATERIAL_SPECULAR will cause the specular alpha to be set to 1 and failing to set SEPARATE_SPECULAR will pass through vertex specular RGB instead of performing the light calculation.</para>
<para>Renders two groups of two rows of 4 quads each with the fixed function pipeline. The first row is the specular component, the second is the diffuse. Lighting is enabled but no light exists.</para>
<para>Each quad has specular and diffuse colors of: UL = {1.f, 0.f, 0.f, 0.15f}, {0.f, 0.f, 0.5f, 1.f} UR = {1.f, 0.f, 0.f, 0.75f}, {0.f, 0.f, 0.75f, 1.f} LR = {0.f, 1.f, 0.f, 1.f}, {0.f, 0.f, 1.f, 1.f} LL = {0.f, 1.f, 0.f, 0.2f}, {0.f, 0.f, 0.25f, 1.f}</para>
<para>The upper row has SET_SPECULAR_ENABLE = false. The lower row has it true. The first column has SET_LIGHT_CONTROL = SEPARATE_SPECULAR + ALPHA_FROM_MATERIAL_SPECULAR The second has SET_LIGHT_CONTROL = SEPARATE_SPECULAR The third has SET_LIGHT_CONTROL = ALPHA_FROM_MATERIAL_SPECULAR The fourth has SET_LIGHT_CONTROL = 0</para>
<para>Because lighting is enabled, the diffuse alpha is entirely dictated by SET_MATERIAL_ALPHA, and RGB is entirely set by the lighting calculations. </para>
</parblock></para>
</simplesect>
</para>
<para><simplesect kind="remark"><para>ControlFlagsNoLight_VS <parblock><para>Demonstrates that SET_SPECULAR_ENABLE = false forces specular values to {0, 0, 0, 1}. Also demonstrates that failing to set ALPHA_FROM_MATERIAL_SPECULAR will cause the specular alpha to be set to 1 and failing to set SEPARATE_SPECULAR will pass through vertex specular RGB instead of performing the light calculation.</para>
<para>Renders two groups of two rows of 4 quads each with the fixed function pipeline. The first row is the specular component, the second is the diffuse. Lighting is enabled but no light exists.</para>
<para>Each quad has specular and diffuse colors of: UL = {1.f, 0.f, 0.f, 0.15f}, {0.f, 0.f, 0.5f, 1.f} UR = {1.f, 0.f, 0.f, 0.75f}, {0.f, 0.f, 0.75f, 1.f} LR = {0.f, 1.f, 0.f, 1.f}, {0.f, 0.f, 1.f, 1.f} LL = {0.f, 1.f, 0.f, 0.2f}, {0.f, 0.f, 0.25f, 1.f}</para>
<para>The upper row has SET_SPECULAR_ENABLE = false. The lower row has it true. The first column has SET_LIGHT_CONTROL = SEPARATE_SPECULAR + ALPHA_FROM_MATERIAL_SPECULAR The second has SET_LIGHT_CONTROL = SEPARATE_SPECULAR The third has SET_LIGHT_CONTROL = ALPHA_FROM_MATERIAL_SPECULAR The fourth has SET_LIGHT_CONTROL = 0</para>
<para>Because lighting is enabled, the diffuse alpha is entirely dictated by SET_MATERIAL_ALPHA, and RGB is entirely set by the lighting calculations. </para>
</parblock></para>
</simplesect>
</para>
<para><simplesect kind="remark"><para>ControlFlags_FF <parblock><para>Demonstrates that SET_SPECULAR_ENABLE = false forces specular values to {0, 0, 0, 1}. Also demonstrates that failing to set ALPHA_FROM_MATERIAL_SPECULAR will cause the specular alpha to be set to 1 and failing to set SEPARATE_SPECULAR will pass through vertex specular RGB instead of performing the light calculation.</para>
<para>Renders two groups of two rows of 4 quads each with the fixed function pipeline. The first row is the specular component, the second is the diffuse. Lighting is enabled but with a directional light pointing at {1, 0, 1}.</para>
<para>Each quad has specular and diffuse colors of: UL = {1.f, 0.f, 0.f, 0.15f}, {0.f, 0.f, 0.5f, 1.f} UR = {1.f, 0.f, 0.f, 0.75f}, {0.f, 0.f, 0.75f, 1.f} LR = {0.f, 1.f, 0.f, 1.f}, {0.f, 0.f, 1.f, 1.f} LL = {0.f, 1.f, 0.f, 0.2f}, {0.f, 0.f, 0.25f, 1.f}</para>
<para>The upper row has SET_SPECULAR_ENABLE = false. The lower row has it true. The first column has SET_LIGHT_CONTROL = SEPARATE_SPECULAR + ALPHA_FROM_MATERIAL_SPECULAR The second has SET_LIGHT_CONTROL = SEPARATE_SPECULAR The third has SET_LIGHT_CONTROL = ALPHA_FROM_MATERIAL_SPECULAR The fourth has SET_LIGHT_CONTROL = 0</para>
<para>Because lighting is enabled, the diffuse alpha is entirely dictated by SET_MATERIAL_ALPHA, and RGB is entirely set by the lighting calculations. </para>
</parblock></para>
</simplesect>
</para>
<para><simplesect kind="remark"><para>ControlFlags_VS <parblock><para>Demonstrates that SET_SPECULAR_ENABLE = false forces specular values to {0, 0, 0, 1}. Also demonstrates that failing to set ALPHA_FROM_MATERIAL_SPECULAR will cause the specular alpha to be set to 1 and failing to set SEPARATE_SPECULAR will pass through vertex specular RGB instead of performing the light calculation.</para>
<para>Renders two groups of two rows of 4 quads each with the fixed function pipeline. The first row is the specular component, the second is the diffuse. Lighting is enabled but with a directional light pointing at {1, 0, 1}.</para>
<para>Each quad has specular and diffuse colors of: UL = {1.f, 0.f, 0.f, 0.15f}, {0.f, 0.f, 0.5f, 1.f} UR = {1.f, 0.f, 0.f, 0.75f}, {0.f, 0.f, 0.75f, 1.f} LR = {0.f, 1.f, 0.f, 1.f}, {0.f, 0.f, 1.f, 1.f} LL = {0.f, 1.f, 0.f, 0.2f}, {0.f, 0.f, 0.25f, 1.f}</para>
<para>The upper row has SET_SPECULAR_ENABLE = false. The lower row has it true. The first column has SET_LIGHT_CONTROL = SEPARATE_SPECULAR + ALPHA_FROM_MATERIAL_SPECULAR The second has SET_LIGHT_CONTROL = SEPARATE_SPECULAR The third has SET_LIGHT_CONTROL = ALPHA_FROM_MATERIAL_SPECULAR The fourth has SET_LIGHT_CONTROL = 0</para>
<para>Because lighting is enabled, the diffuse alpha is entirely dictated by SET_MATERIAL_ALPHA, and RGB is entirely set by the lighting calculations. </para>
</parblock></para>
</simplesect>
</para>
<para><simplesect kind="remark"><para>SpecParams_FF_AllZero Renders a number of meshes with a directional light and a point light, shading the specular channel only. LIGHT_CONTROL is set to SEPARATE_SPECULAR and SET_SPECULAR_PARAMS is set to the values displayed in the image.</para>
</simplesect>
<simplesect kind="remark"><para>SpecParams_FF_InvMechAssault Renders a number of meshes with a directional light and a point light, shading the specular channel only. LIGHT_CONTROL is set to SEPARATE_SPECULAR and SET_SPECULAR_PARAMS is set to the values displayed in the image.</para>
</simplesect>
<simplesect kind="remark"><para>SpecParams_FF_MechAssault Renders a number of meshes with a directional light and a point light, shading the specular channel only. LIGHT_CONTROL is set to SEPARATE_SPECULAR and SET_SPECULAR_PARAMS is set to the values displayed in the image.</para>
</simplesect>
<simplesect kind="remark"><para>SpecParams_FF_NinjaGaidenBlack Renders a number of meshes with a directional light and a point light, shading the specular channel only. LIGHT_CONTROL is set to SEPARATE_SPECULAR and SET_SPECULAR_PARAMS is set to the values displayed in the image.</para>
</simplesect>
<simplesect kind="remark"><para>NonUnitNormal_0.972 Renders a triangle fan with spherical normals that are scaled to be 0.972 in length. 0.972 is small enough that no pixels are illuminated.</para>
</simplesect>
<simplesect kind="remark"><para>NonUnitNormal_0.973 Renders a triangle fan with spherical normals that are scaled to be 0.973 in length. 0.973 is large enough that center pixels are non-0.</para>
</simplesect>
<simplesect kind="remark"><para>NonUnitNormal_1.000 Renders a triangle fan with spherical unit-length normals. This is the control image.</para>
</simplesect>
<simplesect kind="remark"><para>NonUnitNormal_1.008 Renders a triangle fan with spherical normals that are scaled to be 1.008 in length. This is close enough to 1.0 that the color is still applied.</para>
</simplesect>
<simplesect kind="remark"><para>NonUnitNormal_1.009 Renders a triangle fan with spherical normals that are scaled to be 1.009 in length. This demonstrates that specular color is reset to 0 when overflowing ~1.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/specular_tests.h" line="19" column="3" bodyfile="src/tests/specular_tests.cpp" bodystart="253" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="df/d44/classSpecularTests_1a1de89ecce2a197255cd5e86aaa0a6760" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpecularTests::Initialize</definition>
        <argsstring>() override</argsstring>
        <name>Initialize</name>
        <qualifiedname>SpecularTests::Initialize</qualifiedname>
        <reimplements refid="d2/d3e/classTestSuite_1a1c4756eb905d6d4d35e1630107396c38">Initialize</reimplements>
        <briefdescription>
<para>Called to initialize the test suite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/specular_tests.h" line="21" column="8" bodyfile="src/tests/specular_tests.cpp" bodystart="326" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="df/d44/classSpecularTests_1a867d4faebdab47233c804f44e00794cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpecularTests::Deinitialize</definition>
        <argsstring>() override</argsstring>
        <name>Deinitialize</name>
        <qualifiedname>SpecularTests::Deinitialize</qualifiedname>
        <reimplements refid="d2/d3e/classTestSuite_1a28742e0a5438926d43d0814c9694836f">Deinitialize</reimplements>
        <briefdescription>
<para>Called to tear down the test suite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/specular_tests.h" line="22" column="8" bodyfile="src/tests/specular_tests.cpp" bodystart="360" bodyend="366"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="df/d44/classSpecularTests_1afe9866a69d32469d29c6215cd0e11287" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpecularTests::TestControlFlags</definition>
        <argsstring>(const std::string &amp;name, bool use_fixed_function, bool enable_lighting, bool enable_light)</argsstring>
        <name>TestControlFlags</name>
        <qualifiedname>SpecularTests::TestControlFlags</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_fixed_function</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_lighting</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_light</declname>
        </param>
        <briefdescription>
<para>Tests handling of LIGHTING_ENABLE, SPECULAR_ENABLE, and SEPARATE_SPECULAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/specular_tests.h" line="26" column="8" bodyfile="src/tests/specular_tests.cpp" bodystart="383" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="df/d44/classSpecularTests_1a1c41175513549474cce850258d68279b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpecularTests::TestSpecularParams</definition>
        <argsstring>(const std::string &amp;name, const float *specular_params)</argsstring>
        <name>TestSpecularParams</name>
        <qualifiedname>SpecularTests::TestSpecularParams</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>specular_params</declname>
        </param>
        <briefdescription>
<para>Tests the behavior of NV097_SET_SPECULAR_PARAMS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/specular_tests.h" line="29" column="8" bodyfile="src/tests/specular_tests.cpp" bodystart="595" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="df/d44/classSpecularTests_1a9a0582180960a9514d58f34a3e72c17e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpecularTests::TestNonUnitNormals</definition>
        <argsstring>(const std::string &amp;name, float normal_length)</argsstring>
        <name>TestNonUnitNormals</name>
        <qualifiedname>SpecularTests::TestNonUnitNormals</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float</type>
          <declname>normal_length</declname>
        </param>
        <briefdescription>
<para>Tests the behavior of specular lighting when applied to non-unit normals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/specular_tests.h" line="32" column="8" bodyfile="src/tests/specular_tests.cpp" bodystart="685" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="df/d44/classSpecularTests_1a0871e5c71f1016114659630232c4f708" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpecularTests::CreateGeometry</definition>
        <argsstring>()</argsstring>
        <name>CreateGeometry</name>
        <qualifiedname>SpecularTests::CreateGeometry</qualifiedname>
        <briefdescription>
<para>Loads test model meshes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/specular_tests.h" line="35" column="8" bodyfile="src/tests/specular_tests.cpp" bodystart="290" bodyend="324"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Tests handling of specular color with interesting combinations of lighting settings and specular params. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SpecularTests</label>
        <link refid="df/d44/classSpecularTests"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestSuite</label>
        <link refid="d2/d3e/classTestSuite"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>NV2AState</label>
      </node>
      <node id="5">
        <label>PGRAPHDiffToken</label>
        <link refid="dd/df8/structPGRAPHDiffToken"/>
      </node>
      <node id="1">
        <label>SpecularTests</label>
        <link refid="df/d44/classSpecularTests"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>TestHost</label>
        <link refid="d6/d80/classTestHost"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestSuite</label>
        <link refid="d2/d3e/classTestSuite"/>
        <childnode refid="3" relation="usage">
          <edgelabel>host_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>pgraph_diff_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/tests/specular_tests.h" line="17" column="1" bodyfile="src/tests/specular_tests.h" bodystart="17" bodyend="42"/>
    <listofallmembers>
      <member refid="d2/d3e/classTestSuite_1a1bb705ad4344ceb8237e0cb60f1c352d" prot="protected" virt="non-virtual"><scope>SpecularTests</scope><name>allow_saving_</name></member>
      <member refid="df/d44/classSpecularTests_1a0871e5c71f1016114659630232c4f708" prot="private" virt="non-virtual"><scope>SpecularTests</scope><name>CreateGeometry</name></member>
      <member refid="df/d44/classSpecularTests_1a867d4faebdab47233c804f44e00794cd" prot="public" virt="virtual"><scope>SpecularTests</scope><name>Deinitialize</name></member>
      <member refid="d2/d3e/classTestSuite_1a7ce09368bd59391f6a9685224cdb8a43" prot="protected" virt="non-virtual"><scope>SpecularTests</scope><name>delay_milliseconds_between_tests_</name></member>
      <member refid="d2/d3e/classTestSuite_1a165d9da1dec525ffdd299e2dcfaec2ef" prot="public" virt="non-virtual"><scope>SpecularTests</scope><name>DisableTests</name></member>
      <member refid="d2/d3e/classTestSuite_1ac65ad3a2e3cfa4fe555fc1fa95e0a60b" prot="protected" virt="non-virtual"><scope>SpecularTests</scope><name>enable_pgraph_region_diff_</name></member>
      <member refid="d2/d3e/classTestSuite_1a391930dfd9c57a4e7cbe8734120dfc73" prot="protected" virt="non-virtual"><scope>SpecularTests</scope><name>enable_progress_log_</name></member>
      <member refid="d2/d3e/classTestSuite_1a518ce9987a1a5037f9083651c056c746" prot="protected" virt="non-virtual"><scope>SpecularTests</scope><name>ftp_logger_</name></member>
      <member refid="d2/d3e/classTestSuite_1a7059e61572d914cff83ae22da3ea1957" prot="public" virt="non-virtual"><scope>SpecularTests</scope><name>HasEnabledTests</name></member>
      <member refid="d2/d3e/classTestSuite_1a454f5c2050b66b598a2f2fcffd45ae48" prot="protected" virt="non-virtual"><scope>SpecularTests</scope><name>host_</name></member>
      <member refid="df/d44/classSpecularTests_1a1de89ecce2a197255cd5e86aaa0a6760" prot="public" virt="virtual"><scope>SpecularTests</scope><name>Initialize</name></member>
      <member refid="d2/d3e/classTestSuite_1ad87fbc52b4011398c9adb39ab62bb018" prot="protected" virt="non-virtual"><scope>SpecularTests</scope><name>interactive_only_</name></member>
      <member refid="d2/d3e/classTestSuite_1ac26e1edd73faf7d732c0e41e816d654e" prot="public" virt="non-virtual"><scope>SpecularTests</scope><name>IsInteractiveOnly</name></member>
      <member refid="d2/d3e/classTestSuite_1a15144024801f2f885727f7926c826c87" prot="public" virt="non-virtual"><scope>SpecularTests</scope><name>Name</name></member>
      <member refid="d2/d3e/classTestSuite_1a2e81678d3ac733d517616bd67a837465" prot="protected" virt="non-virtual"><scope>SpecularTests</scope><name>output_dir_</name></member>
      <member refid="d2/d3e/classTestSuite_1adc29cb178f12adee9cbabd1451a0d3b1" prot="protected" virt="non-virtual"><scope>SpecularTests</scope><name>pgraph_diff_</name></member>
      <member refid="d2/d3e/classTestSuite_1a40546218e5f7324690e0455706694763" prot="public" virt="non-virtual"><scope>SpecularTests</scope><name>Run</name></member>
      <member refid="d2/d3e/classTestSuite_1a7f99d1a92beb6b58219b841b60d56322" prot="public" virt="non-virtual"><scope>SpecularTests</scope><name>RunAll</name></member>
      <member refid="d2/d3e/classTestSuite_1a0d580dbb0e1630ecdc989d5c852e8f91" prot="protected" virt="non-virtual"><scope>SpecularTests</scope><name>SetDefaultTextureFormat</name></member>
      <member refid="d2/d3e/classTestSuite_1a94c9bf323dd57396c2768e21690bf0d7" prot="public" virt="non-virtual"><scope>SpecularTests</scope><name>SetSavingAllowed</name></member>
      <member refid="d2/d3e/classTestSuite_1af001b219ae1d7798d9df21b5bb8b9976" prot="public" virt="virtual"><scope>SpecularTests</scope><name>SetupTest</name></member>
      <member refid="df/d44/classSpecularTests_1a73e7c505e8b39c6d72b9267f9445f743" prot="public" virt="non-virtual"><scope>SpecularTests</scope><name>SpecularTests</name></member>
      <member refid="d2/d3e/classTestSuite_1ac59f02a9549a146ed62e6185c0acec8b" prot="protected" virt="non-virtual"><scope>SpecularTests</scope><name>suite_name_</name></member>
      <member refid="d2/d3e/classTestSuite_1a92d01e0978cf79ad0883532c73434515" prot="public" virt="non-virtual"><scope>SpecularTests</scope><name>TagNV2ATrace</name></member>
      <member refid="d2/d3e/classTestSuite_1a4a67d49ad17fafd018be9871cc0910c3" prot="public" virt="virtual"><scope>SpecularTests</scope><name>TearDownTest</name></member>
      <member refid="df/d44/classSpecularTests_1afe9866a69d32469d29c6215cd0e11287" prot="private" virt="non-virtual"><scope>SpecularTests</scope><name>TestControlFlags</name></member>
      <member refid="d2/d3e/classTestSuite_1a80f0bc74d8d511547708827e5a549a63" prot="public" virt="non-virtual"><scope>SpecularTests</scope><name>TestNames</name></member>
      <member refid="df/d44/classSpecularTests_1a9a0582180960a9514d58f34a3e72c17e" prot="private" virt="non-virtual"><scope>SpecularTests</scope><name>TestNonUnitNormals</name></member>
      <member refid="d2/d3e/classTestSuite_1a1eaaf3893135b062cd0a09d2a1a2ac0f" prot="protected" virt="non-virtual"><scope>SpecularTests</scope><name>tests_</name></member>
      <member refid="df/d44/classSpecularTests_1a1c41175513549474cce850258d68279b" prot="private" virt="non-virtual"><scope>SpecularTests</scope><name>TestSpecularParams</name></member>
      <member refid="d2/d3e/classTestSuite_1a57b1ed01dd40328456bf0854043ca68b" prot="public" virt="non-virtual"><scope>SpecularTests</scope><name>TestSuite</name></member>
      <member refid="d2/d3e/classTestSuite_1a5957b74827526f04ff525b750decafd7" prot="public" virt="non-virtual"><scope>SpecularTests</scope><name>TestSuite</name></member>
      <member refid="df/d44/classSpecularTests_1a6c902baf253b76e3e3addd07ce6c505b" prot="private" virt="non-virtual"><scope>SpecularTests</scope><name>vertex_buffer_cone_</name></member>
      <member refid="df/d44/classSpecularTests_1a2bc49917bf189f7c506088d486abb0f9" prot="private" virt="non-virtual"><scope>SpecularTests</scope><name>vertex_buffer_cylinder_</name></member>
      <member refid="df/d44/classSpecularTests_1a2d516ce96ba47d173abb7a4b779b5c04" prot="private" virt="non-virtual"><scope>SpecularTests</scope><name>vertex_buffer_sphere_</name></member>
      <member refid="df/d44/classSpecularTests_1a72f98416fd52fdb175a148585f2357d5" prot="private" virt="non-virtual"><scope>SpecularTests</scope><name>vertex_buffer_suzanne_</name></member>
      <member refid="df/d44/classSpecularTests_1a592a28d9e30290a86175a99f44b0cfa7" prot="private" virt="non-virtual"><scope>SpecularTests</scope><name>vertex_buffer_torus_</name></member>
      <member refid="d2/d3e/classTestSuite_1a1743f0a04119de901cb819111d51192d" prot="public" virt="virtual"><scope>SpecularTests</scope><name>~TestSuite</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
